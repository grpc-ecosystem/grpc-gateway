openapi: 3.0.1
info:
  title: Unannotated Echo
  description: |-
    Unannotated Echo Service
    Similar to echo_service.proto but without annotations. See
    unannotated_echo_service.yaml for the equivalent of the annotations in
    gRPC API configuration format.

    Echo Service API consists of a single service which returns
    a message.
  contact:
    name: gRPC-Gateway project
    url: https://github.com/grpc-ecosystem/grpc-gateway
    email: none@example.com
  license:
    name: BSD 3-Clause License
    url: https://github.com/grpc-ecosystem/grpc-gateway/blob/main/LICENSE
  version: "1.0"
  x-something-something: yadda
externalDocs:
  description: More about gRPC-Gateway
  url: https://github.com/grpc-ecosystem/grpc-gateway
servers:
- url: /
security:
- ApiKeyAuth: []
  BasicAuth: []
- ApiKeyAuth: []
  OAuth2:
  - read
  - write
tags:
- name: Echo
  description: Echo description
- name: Internal
  description: Internal description
  x-traitTag: true
- name: UnannotatedEchoService
  description: UnannotatedEchoService description -- which should not be used in place
    of the documentation comment!
  externalDocs:
    description: Find out more about UnannotatedEchoService
    url: https://github.com/grpc-ecosystem/grpc-gateway
paths:
  /v1/example/echo/{id}:
    post:
      tags:
      - UnannotatedEchoService
      summary: "Summary: Echo rpc"
      description: Description Echo
      externalDocs:
        description: Find out more Echo
        url: https://github.com/grpc-ecosystem/grpc-gateway
      operationId: UnannotatedEchoService_Echo
      parameters:
      - name: id
        in: path
        description: Id represents the message identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: num
        in: query
        description: Int value field
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: int64
          default: "42"
      - name: duration
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: lineNum
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: int64
      - name: lang
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: status.progress
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: int64
      - name: status.note
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: en
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: int64
      - name: no.progress
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: int64
      - name: no.note
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: resourceId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: nId.nId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: nId.val
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/examplepbUnannotatedSimpleMessage"
              example:
                value: the input value
            application/x-foo-mime:
              schema:
                $ref: "#/components/schemas/examplepbUnannotatedSimpleMessage"
        "403":
          description: Returned when the user does not have permission to access the
            resource.
          content:
            application/json:
              schema:
                type: object
                x-content-type: application/json
            application/x-foo-mime:
              schema:
                type: object
        "404":
          description: Returned when the resource does not exist.
          content:
            application/json:
              schema:
                type: integer
                format: integer
                x-content-type: application/json
            application/x-foo-mime:
              schema:
                type: integer
                format: integer
        "503":
          description: Returned when the resource is temporarily unavailable.
          content:
            application/json:
              schema:
                type: object
                x-content-type: application/json
            application/x-foo-mime:
              schema:
                type: object
          x-number: 100
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
            application/x-foo-mime:
              schema:
                $ref: "#/components/schemas/rpcStatus"
  /v1/example/echo/{id}/{num}:
    get:
      tags:
      - UnannotatedEchoService
      summary: "Summary: Echo rpc"
      description: Description Echo
      externalDocs:
        description: Find out more Echo
        url: https://github.com/grpc-ecosystem/grpc-gateway
      operationId: UnannotatedEchoService_Echo2
      parameters:
      - name: id
        in: path
        description: Id represents the message identifier.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: num
        in: path
        description: Int value field
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: int64
          default: "42"
      - name: duration
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: lineNum
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: int64
      - name: lang
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: status.progress
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: int64
      - name: status.note
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: en
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: int64
      - name: no.progress
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: int64
      - name: no.note
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: resourceId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: nId.nId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: nId.val
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/examplepbUnannotatedSimpleMessage"
              example:
                value: the input value
            application/x-foo-mime:
              schema:
                $ref: "#/components/schemas/examplepbUnannotatedSimpleMessage"
        "403":
          description: Returned when the user does not have permission to access the
            resource.
          content:
            application/json:
              schema:
                type: object
                x-content-type: application/json
            application/x-foo-mime:
              schema:
                type: object
        "404":
          description: Returned when the resource does not exist.
          content:
            application/json:
              schema:
                type: integer
                format: integer
                x-content-type: application/json
            application/x-foo-mime:
              schema:
                type: integer
                format: integer
        "503":
          description: Returned when the resource is temporarily unavailable.
          content:
            application/json:
              schema:
                type: object
                x-content-type: application/json
            application/x-foo-mime:
              schema:
                type: object
          x-number: 100
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
            application/x-foo-mime:
              schema:
                $ref: "#/components/schemas/rpcStatus"
  /v1/example/echo_body:
    post:
      tags:
      - UnannotatedEchoService
      summary: EchoBody method receives a simple message and returns it.
      operationId: UnannotatedEchoService_EchoBody
      requestBody:
        description: A simple message with many types
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/examplepbUnannotatedSimpleMessage"
          application/x-foo-mime:
            schema:
              $ref: "#/components/schemas/examplepbUnannotatedSimpleMessage"
        required: true
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/examplepbUnannotatedSimpleMessage"
            application/x-foo-mime:
              schema:
                $ref: "#/components/schemas/examplepbUnannotatedSimpleMessage"
        "403":
          description: Returned when the user does not have permission to access the
            resource.
          content:
            application/json:
              schema:
                type: object
                x-content-type: application/json
            application/x-foo-mime:
              schema:
                type: object
        "404":
          description: Returned when the resource does not exist.
          content:
            application/json:
              schema:
                type: string
                format: string
                x-content-type: application/json
            application/x-foo-mime:
              schema:
                type: string
                format: string
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
            application/x-foo-mime:
              schema:
                $ref: "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
  /v1/example/echo_delete:
    delete:
      tags:
      - UnannotatedEchoService
      summary: EchoDelete method receives a simple message and returns it.
      operationId: UnannotatedEchoService_EchoDelete
      parameters:
      - name: id
        in: query
        description: Id represents the message identifier.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: num
        in: query
        description: Int value field
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: int64
          default: "42"
      - name: duration
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: lineNum
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: int64
      - name: lang
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: status.progress
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: int64
      - name: status.note
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: en
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: int64
      - name: no.progress
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
          format: int64
      - name: no.note
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: resourceId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: nId.nId
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: nId.val
        in: query
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/examplepbUnannotatedSimpleMessage"
            application/x-foo-mime:
              schema:
                $ref: "#/components/schemas/examplepbUnannotatedSimpleMessage"
        "403":
          description: Returned when the user does not have permission to access the
            resource.
          content:
            application/json:
              schema:
                type: object
                x-content-type: application/json
            application/x-foo-mime:
              schema:
                type: object
        "404":
          description: Returned when the resource does not exist.
          content:
            application/json:
              schema:
                type: string
                format: string
                x-content-type: application/json
            application/x-foo-mime:
              schema:
                type: string
                format: string
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
            application/x-foo-mime:
              schema:
                $ref: "#/components/schemas/rpcStatus"
  /v1/example/echo_nested:
    put:
      tags:
      - UnannotatedEchoService
      summary: EchoNested method receives a simple message and returns it.
      operationId: UnannotatedEchoService_EchoNested
      requestBody:
        description: A simple message with many types
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/examplepbUnannotatedSimpleMessage"
          application/x-foo-mime:
            schema:
              $ref: "#/components/schemas/examplepbUnannotatedSimpleMessage"
        required: true
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/examplepbUnannotatedNestedMessage"
            application/x-foo-mime:
              schema:
                $ref: "#/components/schemas/examplepbUnannotatedNestedMessage"
        "403":
          description: Returned when the user does not have permission to access the
            resource.
          content:
            application/json:
              schema:
                type: object
                x-content-type: application/json
            application/x-foo-mime:
              schema:
                type: object
        "404":
          description: Returned when the resource does not exist.
          content:
            application/json:
              schema:
                type: string
                format: string
                x-content-type: application/json
            application/x-foo-mime:
              schema:
                type: string
                format: string
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
            application/x-foo-mime:
              schema:
                $ref: "#/components/schemas/rpcStatus"
      x-codegen-request-body-name: body
components:
  schemas:
    examplepbUnannotatedEmbedded:
      type: object
      properties:
        progress:
          type: string
          format: int64
        note:
          type: string
      description: Embedded represents a message embedded in SimpleMessage.
      x-go-type:
        import:
          package: github.com/grpc-ecosystem/grpc-gateway/v2/examples/internal/proto/examplepb
        type: UnannotatedEmbedded
    examplepbUnannotatedNestedMessage:
      type: object
      properties:
        nId:
          type: string
        val:
          type: string
      example:
        val: val
        nId: nId
      x-go-type:
        import:
          package: github.com/grpc-ecosystem/grpc-gateway/v2/examples/internal/proto/examplepb
        type: UnannotatedNestedMessage
    examplepbUnannotatedSimpleMessage:
      title: A bit of everything
      required:
      - id
      - num
      type: object
      properties:
        id:
          type: string
          description: Id represents the message identifier.
        num:
          type: string
          description: Int value field
          format: int64
          default: "42"
        duration:
          type: string
        lineNum:
          type: string
          format: int64
        lang:
          type: string
        status:
          $ref: "#/components/schemas/examplepbUnannotatedEmbedded"
        en:
          type: string
          format: int64
        "no":
          $ref: "#/components/schemas/examplepbUnannotatedEmbedded"
        resourceId:
          type: string
        nId:
          $ref: "#/components/schemas/examplepbUnannotatedNestedMessage"
      description: A simple message with many types
      example:
        id: myid
      externalDocs:
        description: Find out more about UnannotatedSimpleMessage
        url: https://github.com/grpc-ecosystem/grpc-gateway
    protobufAny:
      type: object
      properties:
        '@type':
          type: string
      additionalProperties:
        type: object
      x-go-type:
        import:
          package: google.golang.org/protobuf/types/known/anypb
        type: Any
      x-schema-name: protobufAny
    rpcStatus:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        details:
          type: array
          items:
            $ref: "#/components/schemas/protobufAny"
      x-go-type:
        import:
          package: google.golang.org/genproto/googleapis/rpc/status
        type: Status
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      name: X-API-Key
      in: header
      x-amazon-apigateway-authorizer:
        authorizerResultTtlInSeconds: 60
        type: token
      x-amazon-apigateway-authtype: oauth2
    BasicAuth:
      type: http
      scheme: basic
x-grpc-gateway-baz-list:
- one
- true
x-grpc-gateway-foo: bar
x-original-swagger-version: "2.0"
