on:
  - pull_request
permissions:
  contents: read
name: CI
jobs:
  build:
    strategy:
      matrix:
        go-version: [1.17.x, 1.18.x, 1.19.x]
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/setup-go@268d8c0ca0432bb2cf416faae41297df9d262d7f # tag=v3
        with:
          go-version: ${{ matrix.go-version }}
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3
      - run: go build ./...
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@268d8c0ca0432bb2cf416faae41297df9d262d7f # tag=v3
        with:
          check-latest: true
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3
      - run: go test ./...
  node_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3
      - uses: actions/setup-node@2fddd8803e2f5c9604345a0b591c3020ee971a93 # tag=v3
        with:
          node-version: 10
      - uses: actions/setup-go@268d8c0ca0432bb2cf416faae41297df9d262d7f # tag=v3
        with:
          check-latest: true
      - run: >
          cd examples/internal/browser &&
          npm install gulp-cli &&
          npm install &&
          ./node_modules/.bin/gulp
  generate:
    container:
      image: docker.pkg.github.com/grpc-ecosystem/grpc-gateway/build-env:1.19
      options: "--user root"
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3
      - run: make install
      - run: make clean
      - run: make generate
      - run: go mod tidy
      - run: git diff --exit-code
  bazel:
    container:
      image: docker.pkg.github.com/grpc-ecosystem/grpc-gateway/build-env:1.19
      options: "--user root"
      credentials:
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3
      - uses: actions/cache@fd5de65bc895cf536527842281bea11763fefd77 # tag=v3
        with:
          path: /home/vscode/.cache/_grpc_gateway_bazel
          key: v1-bazel-cache-${{ hashFiles('repositories.bzl') }}
          restore-keys: v1-bazel-cache-
      - name: Configure bazel
        run: |
          cat > .bazelrc << EOF
          startup --output_base /home/vscode/.cache/_grpc_gateway_bazel
          build --test_output errors
          build --features race
          # Workaround https://github.com/bazelbuild/bazel/issues/3645
          # See https://docs.bazel.build/versions/0.23.0/command-line-reference.html
          build --local_ram_resources=7168 # Github runners have 7G of memory
          build --local_cpu_resources=2    # Github runners have 2 vCPU
          EOF
      - name: Check that Bazel BUILD files are up-to-date
        run: bazel run //:gazelle && git diff --exit-code
      - name: Check that repositories.bzl is up-to-date
        run: |
          bazel run //:gazelle -- update-repos -from_file=go.mod -to_macro=repositories.bzl%go_repositories &&
          git diff --exit-code
      - name: Check formatting of Bazel BUILD files
        run: bazel run //:buildifier && git diff --exit-code
      - name: Run tests with Bazel
        run: bazel test //...
  gorelease:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3
      - uses: actions/setup-go@268d8c0ca0432bb2cf416faae41297df9d262d7f # tag=v3
        with:
          go-version: 1.18
          check-latest: true
      - run: go run golang.org/x/exp/cmd/gorelease@latest -base=v2.11.3
  proto_lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3
      - uses: actions/setup-go@268d8c0ca0432bb2cf416faae41297df9d262d7f # tag=v3
        with:
          check-latest: true
      - run: make install
      - run: PATH=$PATH:~/go/bin buf build
      - run: PATH=$PATH:~/go/bin buf lint
      - run: PATH=$PATH:~/go/bin buf format -w && git diff --exit-code
      - run: PATH=$PATH:~/go/bin buf breaking --path protoc-gen-openapiv2/ --against 'https://github.com/grpc-ecosystem/grpc-gateway.git#branch=master'
  golangci:
    permissions:
      pull-requests: read # for golangci/golangci-lint-action to fetch pull requests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b # tag=v3
      - uses: golangci/golangci-lint-action@537aa1903e5d359d0b27dbc19ddd22c5087f3fbc # tag=v3
        with:
          version: v1.45
          args: --enable goimports
  fuzz:
    runs-on: ubuntu-latest
    steps:
      - name: Build Fuzzers
        id: build
        uses: google/oss-fuzz/infra/cifuzz/actions/build_fuzzers@master
        with:
          oss-fuzz-project-name: "grpc-gateway"
          dry-run: false
          language: go
      - name: Run Fuzzers
        uses: google/oss-fuzz/infra/cifuzz/actions/run_fuzzers@master
        with:
          oss-fuzz-project-name: "grpc-gateway"
          fuzz-seconds: 600
          dry-run: false
          language: go
      - name: Upload Crash
        uses: actions/upload-artifact@3cea5372237819ed00197afe530f5a7ea3e805c8 # tag=v3
        if: failure() && steps.build.outcome == 'success'
        with:
          name: artifacts
          path: ./out/artifacts
