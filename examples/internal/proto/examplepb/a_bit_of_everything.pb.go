// Code generated by protoc-gen-go. DO NOT EDIT.
// source: examples/internal/proto/examplepb/a_bit_of_everything.proto

package examplepb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	pathenum "github.com/grpc-ecosystem/grpc-gateway/examples/internal/proto/pathenum"
	sub "github.com/grpc-ecosystem/grpc-gateway/examples/internal/proto/sub"
	sub2 "github.com/grpc-ecosystem/grpc-gateway/examples/internal/proto/sub2"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	field_mask "google.golang.org/genproto/protobuf/field_mask"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// NumericEnum is one or zero.
type NumericEnum int32

const (
	// ZERO means 0
	NumericEnum_ZERO NumericEnum = 0
	// ONE means 1
	NumericEnum_ONE NumericEnum = 1
)

var NumericEnum_name = map[int32]string{
	0: "ZERO",
	1: "ONE",
}

var NumericEnum_value = map[string]int32{
	"ZERO": 0,
	"ONE":  1,
}

func (x NumericEnum) String() string {
	return proto.EnumName(NumericEnum_name, int32(x))
}

func (NumericEnum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e6ccf6cab3ab66ab, []int{0}
}

// DeepEnum is one or zero.
type ABitOfEverything_Nested_DeepEnum int32

const (
	// FALSE is false.
	ABitOfEverything_Nested_FALSE ABitOfEverything_Nested_DeepEnum = 0
	// TRUE is true.
	ABitOfEverything_Nested_TRUE ABitOfEverything_Nested_DeepEnum = 1
)

var ABitOfEverything_Nested_DeepEnum_name = map[int32]string{
	0: "FALSE",
	1: "TRUE",
}

var ABitOfEverything_Nested_DeepEnum_value = map[string]int32{
	"FALSE": 0,
	"TRUE":  1,
}

func (x ABitOfEverything_Nested_DeepEnum) String() string {
	return proto.EnumName(ABitOfEverything_Nested_DeepEnum_name, int32(x))
}

func (ABitOfEverything_Nested_DeepEnum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e6ccf6cab3ab66ab, []int{0, 0, 0}
}

// Intentionally complicated message type to cover many features of Protobuf.
type ABitOfEverything struct {
	SingleNested        *ABitOfEverything_Nested                `protobuf:"bytes,25,opt,name=single_nested,json=singleNested,proto3" json:"single_nested,omitempty"`
	Uuid                string                                  `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Nested              []*ABitOfEverything_Nested              `protobuf:"bytes,2,rep,name=nested,proto3" json:"nested,omitempty"`
	FloatValue          float32                                 `protobuf:"fixed32,3,opt,name=float_value,json=floatValue,proto3" json:"float_value,omitempty"`
	DoubleValue         float64                                 `protobuf:"fixed64,4,opt,name=double_value,json=doubleValue,proto3" json:"double_value,omitempty"`
	Int64Value          int64                                   `protobuf:"varint,5,opt,name=int64_value,json=int64Value,proto3" json:"int64_value,omitempty"`
	Uint64Value         uint64                                  `protobuf:"varint,6,opt,name=uint64_value,json=uint64Value,proto3" json:"uint64_value,omitempty"`
	Int32Value          int32                                   `protobuf:"varint,7,opt,name=int32_value,json=int32Value,proto3" json:"int32_value,omitempty"`
	Fixed64Value        uint64                                  `protobuf:"fixed64,8,opt,name=fixed64_value,json=fixed64Value,proto3" json:"fixed64_value,omitempty"`
	Fixed32Value        uint32                                  `protobuf:"fixed32,9,opt,name=fixed32_value,json=fixed32Value,proto3" json:"fixed32_value,omitempty"`
	BoolValue           bool                                    `protobuf:"varint,10,opt,name=bool_value,json=boolValue,proto3" json:"bool_value,omitempty"`
	StringValue         string                                  `protobuf:"bytes,11,opt,name=string_value,json=stringValue,proto3" json:"string_value,omitempty"`
	BytesValue          []byte                                  `protobuf:"bytes,29,opt,name=bytes_value,json=bytesValue,proto3" json:"bytes_value,omitempty"`
	Uint32Value         uint32                                  `protobuf:"varint,13,opt,name=uint32_value,json=uint32Value,proto3" json:"uint32_value,omitempty"`
	EnumValue           NumericEnum                             `protobuf:"varint,14,opt,name=enum_value,json=enumValue,proto3,enum=grpc.gateway.examples.internal.examplepb.NumericEnum" json:"enum_value,omitempty"`
	PathEnumValue       pathenum.PathEnum                       `protobuf:"varint,30,opt,name=path_enum_value,json=pathEnumValue,proto3,enum=grpc.gateway.examples.internal.pathenum.PathEnum" json:"path_enum_value,omitempty"`
	NestedPathEnumValue pathenum.MessagePathEnum_NestedPathEnum `protobuf:"varint,31,opt,name=nested_path_enum_value,json=nestedPathEnumValue,proto3,enum=grpc.gateway.examples.internal.pathenum.MessagePathEnum_NestedPathEnum" json:"nested_path_enum_value,omitempty"`
	Sfixed32Value       int32                                   `protobuf:"fixed32,15,opt,name=sfixed32_value,json=sfixed32Value,proto3" json:"sfixed32_value,omitempty"`
	Sfixed64Value       int64                                   `protobuf:"fixed64,16,opt,name=sfixed64_value,json=sfixed64Value,proto3" json:"sfixed64_value,omitempty"`
	Sint32Value         int32                                   `protobuf:"zigzag32,17,opt,name=sint32_value,json=sint32Value,proto3" json:"sint32_value,omitempty"`
	Sint64Value         int64                                   `protobuf:"zigzag64,18,opt,name=sint64_value,json=sint64Value,proto3" json:"sint64_value,omitempty"`
	RepeatedStringValue []string                                `protobuf:"bytes,19,rep,name=repeated_string_value,json=repeatedStringValue,proto3" json:"repeated_string_value,omitempty"`
	// Types that are valid to be assigned to OneofValue:
	//	*ABitOfEverything_OneofEmpty
	//	*ABitOfEverything_OneofString
	OneofValue               isABitOfEverything_OneofValue       `protobuf_oneof:"oneof_value"`
	MapValue                 map[string]NumericEnum              `protobuf:"bytes,22,rep,name=map_value,json=mapValue,proto3" json:"map_value,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3,enum=grpc.gateway.examples.internal.examplepb.NumericEnum"`
	MappedStringValue        map[string]string                   `protobuf:"bytes,23,rep,name=mapped_string_value,json=mappedStringValue,proto3" json:"mapped_string_value,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	MappedNestedValue        map[string]*ABitOfEverything_Nested `protobuf:"bytes,24,rep,name=mapped_nested_value,json=mappedNestedValue,proto3" json:"mapped_nested_value,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	NonConventionalNameValue string                              `protobuf:"bytes,26,opt,name=nonConventionalNameValue,proto3" json:"nonConventionalNameValue,omitempty"`
	TimestampValue           *timestamp.Timestamp                `protobuf:"bytes,27,opt,name=timestamp_value,json=timestampValue,proto3" json:"timestamp_value,omitempty"`
	// repeated enum value. it is comma-separated in query
	RepeatedEnumValue []NumericEnum `protobuf:"varint,28,rep,packed,name=repeated_enum_value,json=repeatedEnumValue,proto3,enum=grpc.gateway.examples.internal.examplepb.NumericEnum" json:"repeated_enum_value,omitempty"`
	// repeated numeric enum comment (This comment is overridden by the field annotation)
	RepeatedEnumAnnotation []NumericEnum `protobuf:"varint,32,rep,packed,name=repeated_enum_annotation,json=repeatedEnumAnnotation,proto3,enum=grpc.gateway.examples.internal.examplepb.NumericEnum" json:"repeated_enum_annotation,omitempty"`
	// numeric enum comment (This comment is overridden by the field annotation)
	EnumValueAnnotation NumericEnum `protobuf:"varint,33,opt,name=enum_value_annotation,json=enumValueAnnotation,proto3,enum=grpc.gateway.examples.internal.examplepb.NumericEnum" json:"enum_value_annotation,omitempty"`
	// repeated string comment (This comment is overridden by the field annotation)
	RepeatedStringAnnotation []string `protobuf:"bytes,34,rep,name=repeated_string_annotation,json=repeatedStringAnnotation,proto3" json:"repeated_string_annotation,omitempty"`
	// repeated nested object comment (This comment is overridden by the field annotation)
	RepeatedNestedAnnotation []*ABitOfEverything_Nested `protobuf:"bytes,35,rep,name=repeated_nested_annotation,json=repeatedNestedAnnotation,proto3" json:"repeated_nested_annotation,omitempty"`
	// nested object comments (This comment is overridden by the field annotation)
	NestedAnnotation     *ABitOfEverything_Nested `protobuf:"bytes,36,opt,name=nested_annotation,json=nestedAnnotation,proto3" json:"nested_annotation,omitempty"`
	Int64OverrideType    int64                    `protobuf:"varint,37,opt,name=int64_override_type,json=int64OverrideType,proto3" json:"int64_override_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *ABitOfEverything) Reset()         { *m = ABitOfEverything{} }
func (m *ABitOfEverything) String() string { return proto.CompactTextString(m) }
func (*ABitOfEverything) ProtoMessage()    {}
func (*ABitOfEverything) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6ccf6cab3ab66ab, []int{0}
}

func (m *ABitOfEverything) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ABitOfEverything.Unmarshal(m, b)
}
func (m *ABitOfEverything) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ABitOfEverything.Marshal(b, m, deterministic)
}
func (m *ABitOfEverything) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ABitOfEverything.Merge(m, src)
}
func (m *ABitOfEverything) XXX_Size() int {
	return xxx_messageInfo_ABitOfEverything.Size(m)
}
func (m *ABitOfEverything) XXX_DiscardUnknown() {
	xxx_messageInfo_ABitOfEverything.DiscardUnknown(m)
}

var xxx_messageInfo_ABitOfEverything proto.InternalMessageInfo

func (m *ABitOfEverything) GetSingleNested() *ABitOfEverything_Nested {
	if m != nil {
		return m.SingleNested
	}
	return nil
}

func (m *ABitOfEverything) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *ABitOfEverything) GetNested() []*ABitOfEverything_Nested {
	if m != nil {
		return m.Nested
	}
	return nil
}

func (m *ABitOfEverything) GetFloatValue() float32 {
	if m != nil {
		return m.FloatValue
	}
	return 0
}

func (m *ABitOfEverything) GetDoubleValue() float64 {
	if m != nil {
		return m.DoubleValue
	}
	return 0
}

func (m *ABitOfEverything) GetInt64Value() int64 {
	if m != nil {
		return m.Int64Value
	}
	return 0
}

func (m *ABitOfEverything) GetUint64Value() uint64 {
	if m != nil {
		return m.Uint64Value
	}
	return 0
}

func (m *ABitOfEverything) GetInt32Value() int32 {
	if m != nil {
		return m.Int32Value
	}
	return 0
}

func (m *ABitOfEverything) GetFixed64Value() uint64 {
	if m != nil {
		return m.Fixed64Value
	}
	return 0
}

func (m *ABitOfEverything) GetFixed32Value() uint32 {
	if m != nil {
		return m.Fixed32Value
	}
	return 0
}

func (m *ABitOfEverything) GetBoolValue() bool {
	if m != nil {
		return m.BoolValue
	}
	return false
}

func (m *ABitOfEverything) GetStringValue() string {
	if m != nil {
		return m.StringValue
	}
	return ""
}

func (m *ABitOfEverything) GetBytesValue() []byte {
	if m != nil {
		return m.BytesValue
	}
	return nil
}

func (m *ABitOfEverything) GetUint32Value() uint32 {
	if m != nil {
		return m.Uint32Value
	}
	return 0
}

func (m *ABitOfEverything) GetEnumValue() NumericEnum {
	if m != nil {
		return m.EnumValue
	}
	return NumericEnum_ZERO
}

func (m *ABitOfEverything) GetPathEnumValue() pathenum.PathEnum {
	if m != nil {
		return m.PathEnumValue
	}
	return pathenum.PathEnum_ABC
}

func (m *ABitOfEverything) GetNestedPathEnumValue() pathenum.MessagePathEnum_NestedPathEnum {
	if m != nil {
		return m.NestedPathEnumValue
	}
	return pathenum.MessagePathEnum_GHI
}

func (m *ABitOfEverything) GetSfixed32Value() int32 {
	if m != nil {
		return m.Sfixed32Value
	}
	return 0
}

func (m *ABitOfEverything) GetSfixed64Value() int64 {
	if m != nil {
		return m.Sfixed64Value
	}
	return 0
}

func (m *ABitOfEverything) GetSint32Value() int32 {
	if m != nil {
		return m.Sint32Value
	}
	return 0
}

func (m *ABitOfEverything) GetSint64Value() int64 {
	if m != nil {
		return m.Sint64Value
	}
	return 0
}

func (m *ABitOfEverything) GetRepeatedStringValue() []string {
	if m != nil {
		return m.RepeatedStringValue
	}
	return nil
}

type isABitOfEverything_OneofValue interface {
	isABitOfEverything_OneofValue()
}

type ABitOfEverything_OneofEmpty struct {
	OneofEmpty *empty.Empty `protobuf:"bytes,20,opt,name=oneof_empty,json=oneofEmpty,proto3,oneof"`
}

type ABitOfEverything_OneofString struct {
	OneofString string `protobuf:"bytes,21,opt,name=oneof_string,json=oneofString,proto3,oneof"`
}

func (*ABitOfEverything_OneofEmpty) isABitOfEverything_OneofValue() {}

func (*ABitOfEverything_OneofString) isABitOfEverything_OneofValue() {}

func (m *ABitOfEverything) GetOneofValue() isABitOfEverything_OneofValue {
	if m != nil {
		return m.OneofValue
	}
	return nil
}

func (m *ABitOfEverything) GetOneofEmpty() *empty.Empty {
	if x, ok := m.GetOneofValue().(*ABitOfEverything_OneofEmpty); ok {
		return x.OneofEmpty
	}
	return nil
}

func (m *ABitOfEverything) GetOneofString() string {
	if x, ok := m.GetOneofValue().(*ABitOfEverything_OneofString); ok {
		return x.OneofString
	}
	return ""
}

func (m *ABitOfEverything) GetMapValue() map[string]NumericEnum {
	if m != nil {
		return m.MapValue
	}
	return nil
}

func (m *ABitOfEverything) GetMappedStringValue() map[string]string {
	if m != nil {
		return m.MappedStringValue
	}
	return nil
}

func (m *ABitOfEverything) GetMappedNestedValue() map[string]*ABitOfEverything_Nested {
	if m != nil {
		return m.MappedNestedValue
	}
	return nil
}

func (m *ABitOfEverything) GetNonConventionalNameValue() string {
	if m != nil {
		return m.NonConventionalNameValue
	}
	return ""
}

func (m *ABitOfEverything) GetTimestampValue() *timestamp.Timestamp {
	if m != nil {
		return m.TimestampValue
	}
	return nil
}

func (m *ABitOfEverything) GetRepeatedEnumValue() []NumericEnum {
	if m != nil {
		return m.RepeatedEnumValue
	}
	return nil
}

func (m *ABitOfEverything) GetRepeatedEnumAnnotation() []NumericEnum {
	if m != nil {
		return m.RepeatedEnumAnnotation
	}
	return nil
}

func (m *ABitOfEverything) GetEnumValueAnnotation() NumericEnum {
	if m != nil {
		return m.EnumValueAnnotation
	}
	return NumericEnum_ZERO
}

func (m *ABitOfEverything) GetRepeatedStringAnnotation() []string {
	if m != nil {
		return m.RepeatedStringAnnotation
	}
	return nil
}

func (m *ABitOfEverything) GetRepeatedNestedAnnotation() []*ABitOfEverything_Nested {
	if m != nil {
		return m.RepeatedNestedAnnotation
	}
	return nil
}

func (m *ABitOfEverything) GetNestedAnnotation() *ABitOfEverything_Nested {
	if m != nil {
		return m.NestedAnnotation
	}
	return nil
}

func (m *ABitOfEverything) GetInt64OverrideType() int64 {
	if m != nil {
		return m.Int64OverrideType
	}
	return 0
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ABitOfEverything) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ABitOfEverything_OneofEmpty)(nil),
		(*ABitOfEverything_OneofString)(nil),
	}
}

// Nested is nested type.
type ABitOfEverything_Nested struct {
	// name is nested field.
	Name   string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Amount uint32 `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	// DeepEnum comment.
	Ok                   ABitOfEverything_Nested_DeepEnum `protobuf:"varint,3,opt,name=ok,proto3,enum=grpc.gateway.examples.internal.examplepb.ABitOfEverything_Nested_DeepEnum" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                         `json:"-"`
	XXX_unrecognized     []byte                           `json:"-"`
	XXX_sizecache        int32                            `json:"-"`
}

func (m *ABitOfEverything_Nested) Reset()         { *m = ABitOfEverything_Nested{} }
func (m *ABitOfEverything_Nested) String() string { return proto.CompactTextString(m) }
func (*ABitOfEverything_Nested) ProtoMessage()    {}
func (*ABitOfEverything_Nested) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6ccf6cab3ab66ab, []int{0, 0}
}

func (m *ABitOfEverything_Nested) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ABitOfEverything_Nested.Unmarshal(m, b)
}
func (m *ABitOfEverything_Nested) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ABitOfEverything_Nested.Marshal(b, m, deterministic)
}
func (m *ABitOfEverything_Nested) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ABitOfEverything_Nested.Merge(m, src)
}
func (m *ABitOfEverything_Nested) XXX_Size() int {
	return xxx_messageInfo_ABitOfEverything_Nested.Size(m)
}
func (m *ABitOfEverything_Nested) XXX_DiscardUnknown() {
	xxx_messageInfo_ABitOfEverything_Nested.DiscardUnknown(m)
}

var xxx_messageInfo_ABitOfEverything_Nested proto.InternalMessageInfo

func (m *ABitOfEverything_Nested) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ABitOfEverything_Nested) GetAmount() uint32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *ABitOfEverything_Nested) GetOk() ABitOfEverything_Nested_DeepEnum {
	if m != nil {
		return m.Ok
	}
	return ABitOfEverything_Nested_FALSE
}

// ABitOfEverythingRepeated is used to validate repeated path parameter functionality
type ABitOfEverythingRepeated struct {
	// repeated values. they are comma-separated in path
	PathRepeatedFloatValue    []float32     `protobuf:"fixed32,1,rep,packed,name=path_repeated_float_value,json=pathRepeatedFloatValue,proto3" json:"path_repeated_float_value,omitempty"`
	PathRepeatedDoubleValue   []float64     `protobuf:"fixed64,2,rep,packed,name=path_repeated_double_value,json=pathRepeatedDoubleValue,proto3" json:"path_repeated_double_value,omitempty"`
	PathRepeatedInt64Value    []int64       `protobuf:"varint,3,rep,packed,name=path_repeated_int64_value,json=pathRepeatedInt64Value,proto3" json:"path_repeated_int64_value,omitempty"`
	PathRepeatedUint64Value   []uint64      `protobuf:"varint,4,rep,packed,name=path_repeated_uint64_value,json=pathRepeatedUint64Value,proto3" json:"path_repeated_uint64_value,omitempty"`
	PathRepeatedInt32Value    []int32       `protobuf:"varint,5,rep,packed,name=path_repeated_int32_value,json=pathRepeatedInt32Value,proto3" json:"path_repeated_int32_value,omitempty"`
	PathRepeatedFixed64Value  []uint64      `protobuf:"fixed64,6,rep,packed,name=path_repeated_fixed64_value,json=pathRepeatedFixed64Value,proto3" json:"path_repeated_fixed64_value,omitempty"`
	PathRepeatedFixed32Value  []uint32      `protobuf:"fixed32,7,rep,packed,name=path_repeated_fixed32_value,json=pathRepeatedFixed32Value,proto3" json:"path_repeated_fixed32_value,omitempty"`
	PathRepeatedBoolValue     []bool        `protobuf:"varint,8,rep,packed,name=path_repeated_bool_value,json=pathRepeatedBoolValue,proto3" json:"path_repeated_bool_value,omitempty"`
	PathRepeatedStringValue   []string      `protobuf:"bytes,9,rep,name=path_repeated_string_value,json=pathRepeatedStringValue,proto3" json:"path_repeated_string_value,omitempty"`
	PathRepeatedBytesValue    [][]byte      `protobuf:"bytes,10,rep,name=path_repeated_bytes_value,json=pathRepeatedBytesValue,proto3" json:"path_repeated_bytes_value,omitempty"`
	PathRepeatedUint32Value   []uint32      `protobuf:"varint,11,rep,packed,name=path_repeated_uint32_value,json=pathRepeatedUint32Value,proto3" json:"path_repeated_uint32_value,omitempty"`
	PathRepeatedEnumValue     []NumericEnum `protobuf:"varint,12,rep,packed,name=path_repeated_enum_value,json=pathRepeatedEnumValue,proto3,enum=grpc.gateway.examples.internal.examplepb.NumericEnum" json:"path_repeated_enum_value,omitempty"`
	PathRepeatedSfixed32Value []int32       `protobuf:"fixed32,13,rep,packed,name=path_repeated_sfixed32_value,json=pathRepeatedSfixed32Value,proto3" json:"path_repeated_sfixed32_value,omitempty"`
	PathRepeatedSfixed64Value []int64       `protobuf:"fixed64,14,rep,packed,name=path_repeated_sfixed64_value,json=pathRepeatedSfixed64Value,proto3" json:"path_repeated_sfixed64_value,omitempty"`
	PathRepeatedSint32Value   []int32       `protobuf:"zigzag32,15,rep,packed,name=path_repeated_sint32_value,json=pathRepeatedSint32Value,proto3" json:"path_repeated_sint32_value,omitempty"`
	PathRepeatedSint64Value   []int64       `protobuf:"zigzag64,16,rep,packed,name=path_repeated_sint64_value,json=pathRepeatedSint64Value,proto3" json:"path_repeated_sint64_value,omitempty"`
	XXX_NoUnkeyedLiteral      struct{}      `json:"-"`
	XXX_unrecognized          []byte        `json:"-"`
	XXX_sizecache             int32         `json:"-"`
}

func (m *ABitOfEverythingRepeated) Reset()         { *m = ABitOfEverythingRepeated{} }
func (m *ABitOfEverythingRepeated) String() string { return proto.CompactTextString(m) }
func (*ABitOfEverythingRepeated) ProtoMessage()    {}
func (*ABitOfEverythingRepeated) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6ccf6cab3ab66ab, []int{1}
}

func (m *ABitOfEverythingRepeated) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ABitOfEverythingRepeated.Unmarshal(m, b)
}
func (m *ABitOfEverythingRepeated) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ABitOfEverythingRepeated.Marshal(b, m, deterministic)
}
func (m *ABitOfEverythingRepeated) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ABitOfEverythingRepeated.Merge(m, src)
}
func (m *ABitOfEverythingRepeated) XXX_Size() int {
	return xxx_messageInfo_ABitOfEverythingRepeated.Size(m)
}
func (m *ABitOfEverythingRepeated) XXX_DiscardUnknown() {
	xxx_messageInfo_ABitOfEverythingRepeated.DiscardUnknown(m)
}

var xxx_messageInfo_ABitOfEverythingRepeated proto.InternalMessageInfo

func (m *ABitOfEverythingRepeated) GetPathRepeatedFloatValue() []float32 {
	if m != nil {
		return m.PathRepeatedFloatValue
	}
	return nil
}

func (m *ABitOfEverythingRepeated) GetPathRepeatedDoubleValue() []float64 {
	if m != nil {
		return m.PathRepeatedDoubleValue
	}
	return nil
}

func (m *ABitOfEverythingRepeated) GetPathRepeatedInt64Value() []int64 {
	if m != nil {
		return m.PathRepeatedInt64Value
	}
	return nil
}

func (m *ABitOfEverythingRepeated) GetPathRepeatedUint64Value() []uint64 {
	if m != nil {
		return m.PathRepeatedUint64Value
	}
	return nil
}

func (m *ABitOfEverythingRepeated) GetPathRepeatedInt32Value() []int32 {
	if m != nil {
		return m.PathRepeatedInt32Value
	}
	return nil
}

func (m *ABitOfEverythingRepeated) GetPathRepeatedFixed64Value() []uint64 {
	if m != nil {
		return m.PathRepeatedFixed64Value
	}
	return nil
}

func (m *ABitOfEverythingRepeated) GetPathRepeatedFixed32Value() []uint32 {
	if m != nil {
		return m.PathRepeatedFixed32Value
	}
	return nil
}

func (m *ABitOfEverythingRepeated) GetPathRepeatedBoolValue() []bool {
	if m != nil {
		return m.PathRepeatedBoolValue
	}
	return nil
}

func (m *ABitOfEverythingRepeated) GetPathRepeatedStringValue() []string {
	if m != nil {
		return m.PathRepeatedStringValue
	}
	return nil
}

func (m *ABitOfEverythingRepeated) GetPathRepeatedBytesValue() [][]byte {
	if m != nil {
		return m.PathRepeatedBytesValue
	}
	return nil
}

func (m *ABitOfEverythingRepeated) GetPathRepeatedUint32Value() []uint32 {
	if m != nil {
		return m.PathRepeatedUint32Value
	}
	return nil
}

func (m *ABitOfEverythingRepeated) GetPathRepeatedEnumValue() []NumericEnum {
	if m != nil {
		return m.PathRepeatedEnumValue
	}
	return nil
}

func (m *ABitOfEverythingRepeated) GetPathRepeatedSfixed32Value() []int32 {
	if m != nil {
		return m.PathRepeatedSfixed32Value
	}
	return nil
}

func (m *ABitOfEverythingRepeated) GetPathRepeatedSfixed64Value() []int64 {
	if m != nil {
		return m.PathRepeatedSfixed64Value
	}
	return nil
}

func (m *ABitOfEverythingRepeated) GetPathRepeatedSint32Value() []int32 {
	if m != nil {
		return m.PathRepeatedSint32Value
	}
	return nil
}

func (m *ABitOfEverythingRepeated) GetPathRepeatedSint64Value() []int64 {
	if m != nil {
		return m.PathRepeatedSint64Value
	}
	return nil
}

type Body struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Body) Reset()         { *m = Body{} }
func (m *Body) String() string { return proto.CompactTextString(m) }
func (*Body) ProtoMessage()    {}
func (*Body) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6ccf6cab3ab66ab, []int{2}
}

func (m *Body) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Body.Unmarshal(m, b)
}
func (m *Body) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Body.Marshal(b, m, deterministic)
}
func (m *Body) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Body.Merge(m, src)
}
func (m *Body) XXX_Size() int {
	return xxx_messageInfo_Body.Size(m)
}
func (m *Body) XXX_DiscardUnknown() {
	xxx_messageInfo_Body.DiscardUnknown(m)
}

var xxx_messageInfo_Body proto.InternalMessageInfo

func (m *Body) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type MessageWithBody struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Data                 *Body    `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MessageWithBody) Reset()         { *m = MessageWithBody{} }
func (m *MessageWithBody) String() string { return proto.CompactTextString(m) }
func (*MessageWithBody) ProtoMessage()    {}
func (*MessageWithBody) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6ccf6cab3ab66ab, []int{3}
}

func (m *MessageWithBody) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageWithBody.Unmarshal(m, b)
}
func (m *MessageWithBody) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageWithBody.Marshal(b, m, deterministic)
}
func (m *MessageWithBody) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageWithBody.Merge(m, src)
}
func (m *MessageWithBody) XXX_Size() int {
	return xxx_messageInfo_MessageWithBody.Size(m)
}
func (m *MessageWithBody) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageWithBody.DiscardUnknown(m)
}

var xxx_messageInfo_MessageWithBody proto.InternalMessageInfo

func (m *MessageWithBody) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MessageWithBody) GetData() *Body {
	if m != nil {
		return m.Data
	}
	return nil
}

// UpdateV2Request request for update includes the message and the update mask
type UpdateV2Request struct {
	Abe                  *ABitOfEverything     `protobuf:"bytes,1,opt,name=abe,proto3" json:"abe,omitempty"`
	UpdateMask           *field_mask.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *UpdateV2Request) Reset()         { *m = UpdateV2Request{} }
func (m *UpdateV2Request) String() string { return proto.CompactTextString(m) }
func (*UpdateV2Request) ProtoMessage()    {}
func (*UpdateV2Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6ccf6cab3ab66ab, []int{4}
}

func (m *UpdateV2Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateV2Request.Unmarshal(m, b)
}
func (m *UpdateV2Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateV2Request.Marshal(b, m, deterministic)
}
func (m *UpdateV2Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateV2Request.Merge(m, src)
}
func (m *UpdateV2Request) XXX_Size() int {
	return xxx_messageInfo_UpdateV2Request.Size(m)
}
func (m *UpdateV2Request) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateV2Request.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateV2Request proto.InternalMessageInfo

func (m *UpdateV2Request) GetAbe() *ABitOfEverything {
	if m != nil {
		return m.Abe
	}
	return nil
}

func (m *UpdateV2Request) GetUpdateMask() *field_mask.FieldMask {
	if m != nil {
		return m.UpdateMask
	}
	return nil
}

// An example resource type from AIP-123 used to test the behavior described in
// the CreateBookRequest message.
//
// See: https://google.aip.dev/123
type Book struct {
	// The resource name of the book.
	//
	// Format: `publishers/{publisher}/books/{book}`
	//
	// Example: `publishers/1257894000000000000/books/my-book`
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Output only. The book's ID.
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// Output only. Creation time of the book.
	CreateTime           *timestamp.Timestamp `protobuf:"bytes,3,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Book) Reset()         { *m = Book{} }
func (m *Book) String() string { return proto.CompactTextString(m) }
func (*Book) ProtoMessage()    {}
func (*Book) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6ccf6cab3ab66ab, []int{5}
}

func (m *Book) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Book.Unmarshal(m, b)
}
func (m *Book) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Book.Marshal(b, m, deterministic)
}
func (m *Book) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Book.Merge(m, src)
}
func (m *Book) XXX_Size() int {
	return xxx_messageInfo_Book.Size(m)
}
func (m *Book) XXX_DiscardUnknown() {
	xxx_messageInfo_Book.DiscardUnknown(m)
}

var xxx_messageInfo_Book proto.InternalMessageInfo

func (m *Book) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Book) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Book) GetCreateTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreateTime
	}
	return nil
}

// A standard Create message from AIP-133 with a user-specified ID.
// The user-specified ID (the `book_id` field in this example) must become a
// query parameter in the OpenAPI spec.
//
// See: https://google.aip.dev/133#user-specified-ids
type CreateBookRequest struct {
	// The publisher in which to create the book.
	//
	// Format: `publishers/{publisher}`
	//
	// Example: `publishers/1257894000000000000`
	Parent string `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	// The book to create.
	Book *Book `protobuf:"bytes,2,opt,name=book,proto3" json:"book,omitempty"`
	// The ID to use for the book.
	//
	// This must start with an alphanumeric character.
	BookId               string   `protobuf:"bytes,3,opt,name=book_id,json=bookId,proto3" json:"book_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateBookRequest) Reset()         { *m = CreateBookRequest{} }
func (m *CreateBookRequest) String() string { return proto.CompactTextString(m) }
func (*CreateBookRequest) ProtoMessage()    {}
func (*CreateBookRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e6ccf6cab3ab66ab, []int{6}
}

func (m *CreateBookRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateBookRequest.Unmarshal(m, b)
}
func (m *CreateBookRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateBookRequest.Marshal(b, m, deterministic)
}
func (m *CreateBookRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateBookRequest.Merge(m, src)
}
func (m *CreateBookRequest) XXX_Size() int {
	return xxx_messageInfo_CreateBookRequest.Size(m)
}
func (m *CreateBookRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateBookRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateBookRequest proto.InternalMessageInfo

func (m *CreateBookRequest) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *CreateBookRequest) GetBook() *Book {
	if m != nil {
		return m.Book
	}
	return nil
}

func (m *CreateBookRequest) GetBookId() string {
	if m != nil {
		return m.BookId
	}
	return ""
}

func init() {
	proto.RegisterEnum("grpc.gateway.examples.internal.examplepb.NumericEnum", NumericEnum_name, NumericEnum_value)
	proto.RegisterEnum("grpc.gateway.examples.internal.examplepb.ABitOfEverything_Nested_DeepEnum", ABitOfEverything_Nested_DeepEnum_name, ABitOfEverything_Nested_DeepEnum_value)
	proto.RegisterType((*ABitOfEverything)(nil), "grpc.gateway.examples.internal.examplepb.ABitOfEverything")
	proto.RegisterMapType((map[string]NumericEnum)(nil), "grpc.gateway.examples.internal.examplepb.ABitOfEverything.MapValueEntry")
	proto.RegisterMapType((map[string]*ABitOfEverything_Nested)(nil), "grpc.gateway.examples.internal.examplepb.ABitOfEverything.MappedNestedValueEntry")
	proto.RegisterMapType((map[string]string)(nil), "grpc.gateway.examples.internal.examplepb.ABitOfEverything.MappedStringValueEntry")
	proto.RegisterType((*ABitOfEverything_Nested)(nil), "grpc.gateway.examples.internal.examplepb.ABitOfEverything.Nested")
	proto.RegisterType((*ABitOfEverythingRepeated)(nil), "grpc.gateway.examples.internal.examplepb.ABitOfEverythingRepeated")
	proto.RegisterType((*Body)(nil), "grpc.gateway.examples.internal.examplepb.Body")
	proto.RegisterType((*MessageWithBody)(nil), "grpc.gateway.examples.internal.examplepb.MessageWithBody")
	proto.RegisterType((*UpdateV2Request)(nil), "grpc.gateway.examples.internal.examplepb.UpdateV2Request")
	proto.RegisterType((*Book)(nil), "grpc.gateway.examples.internal.examplepb.Book")
	proto.RegisterType((*CreateBookRequest)(nil), "grpc.gateway.examples.internal.examplepb.CreateBookRequest")
}

func init() {
	proto.RegisterFile("examples/internal/proto/examplepb/a_bit_of_everything.proto", fileDescriptor_e6ccf6cab3ab66ab)
}

var fileDescriptor_e6ccf6cab3ab66ab = []byte{
	// 3816 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x5a, 0x4d, 0x6c, 0x1b, 0x49,
	0x76, 0x56, 0xb1, 0xf5, 0x5b, 0xb2, 0xfe, 0x4a, 0x96, 0x2d, 0xd3, 0x9a, 0x71, 0x4d, 0xdb, 0xbb,
	0xd3, 0xe6, 0x9a, 0xa4, 0x44, 0xcb, 0x33, 0x36, 0xbd, 0xb3, 0x33, 0xa4, 0x24, 0x7b, 0x64, 0x7b,
	0x64, 0xbb, 0xed, 0xf1, 0xce, 0x78, 0x31, 0xab, 0x14, 0xd9, 0x25, 0xb1, 0x2d, 0x76, 0x57, 0x6f,
	0x77, 0xb5, 0x2c, 0x5a, 0x21, 0x32, 0xf9, 0x5f, 0x24, 0x01, 0x92, 0x28, 0x7f, 0x40, 0x26, 0x73,
	0x4b, 0x80, 0x20, 0xd8, 0x43, 0x2e, 0x39, 0xed, 0x21, 0xa7, 0x60, 0x0f, 0xb9, 0x4d, 0x80, 0xbd,
	0xe4, 0x94, 0x20, 0xa7, 0x20, 0xb7, 0x00, 0x03, 0xe4, 0xb0, 0x40, 0x50, 0xd5, 0xdd, 0x64, 0x37,
	0x7f, 0x2c, 0xc9, 0xf2, 0x62, 0xd6, 0x07, 0x8b, 0x55, 0xf5, 0xea, 0xbd, 0xef, 0xbd, 0x7a, 0xf5,
	0x7e, 0x8a, 0x84, 0x37, 0xe9, 0x1e, 0xb1, 0x9c, 0x3a, 0xf5, 0xf2, 0xa6, 0xcd, 0xa9, 0x6b, 0x93,
	0x7a, 0xde, 0x71, 0x19, 0x67, 0xf9, 0x70, 0xde, 0xa9, 0xe4, 0xc9, 0x66, 0xc5, 0xe4, 0x9b, 0x6c,
	0x6b, 0x93, 0xee, 0x52, 0xb7, 0xc1, 0x6b, 0xa6, 0xbd, 0x9d, 0x93, 0x34, 0x48, 0xdb, 0x76, 0x9d,
	0x6a, 0x6e, 0x9b, 0x70, 0xfa, 0x9c, 0x34, 0x72, 0x11, 0xa7, 0x5c, 0xc4, 0x29, 0xd7, 0xe2, 0x91,
	0x5e, 0xd8, 0x66, 0x6c, 0xbb, 0x4e, 0xf3, 0xc4, 0x31, 0xf3, 0xc4, 0xb6, 0x19, 0x27, 0xdc, 0x64,
	0xb6, 0x17, 0xf0, 0x49, 0xe3, 0x70, 0x55, 0x8e, 0x2a, 0xfe, 0x56, 0x7e, 0xcb, 0xa4, 0x75, 0x63,
	0xd3, 0x22, 0xde, 0x4e, 0x48, 0x71, 0xbe, 0x93, 0x82, 0x5a, 0x0e, 0x6f, 0x84, 0x8b, 0x6f, 0x76,
	0x2e, 0x1a, 0xbe, 0x2b, 0xf9, 0xf7, 0x5b, 0x7f, 0xee, 0x12, 0xc7, 0xa1, 0x6e, 0x24, 0x7e, 0xb1,
	0x9f, 0x0d, 0x1c, 0xc2, 0x6b, 0xd4, 0xf6, 0x2d, 0xf9, 0x61, 0x53, 0x7c, 0x0a, 0x77, 0x5c, 0xee,
	0xb7, 0xc3, 0xf3, 0x2b, 0x79, 0x8b, 0x7a, 0x1e, 0xd9, 0xa6, 0x21, 0x69, 0xe6, 0x25, 0xa4, 0x85,
	0x0e, 0xda, 0x0b, 0x9d, 0x40, 0xb9, 0x69, 0x51, 0x8f, 0x13, 0xcb, 0x09, 0x09, 0xae, 0xc8, 0x3f,
	0xd5, 0xec, 0x36, 0xb5, 0xb3, 0xde, 0x73, 0xb2, 0xbd, 0x4d, 0xdd, 0x3c, 0x73, 0xa4, 0x29, 0xbb,
	0xcd, 0xaa, 0xfe, 0xfb, 0x02, 0x9c, 0x2e, 0x95, 0x4d, 0x7e, 0x7f, 0x6b, 0xad, 0x75, 0x72, 0x68,
	0x0b, 0x4e, 0x78, 0xa6, 0xbd, 0x5d, 0xa7, 0x9b, 0x36, 0xf5, 0x38, 0x35, 0xe6, 0xcf, 0x61, 0xa0,
	0x8d, 0x17, 0x4a, 0xb9, 0xa3, 0x9e, 0x65, 0xae, 0x93, 0x65, 0x6e, 0x43, 0x32, 0xd2, 0x4f, 0x05,
	0x7c, 0x83, 0x11, 0xaa, 0xc1, 0x41, 0xdf, 0x37, 0x8d, 0x79, 0x80, 0x81, 0x36, 0x56, 0x7e, 0x7c,
	0x50, 0x7a, 0xf8, 0x39, 0x00, 0x7f, 0x00, 0xee, 0xfe, 0x80, 0x64, 0xb7, 0x4a, 0xd9, 0x5b, 0x8b,
	0xd9, 0x1b, 0x9f, 0xed, 0x5f, 0x6f, 0x66, 0xe3, 0xc3, 0xe5, 0xe3, 0x0c, 0x97, 0x0a, 0x4d, 0x5d,
	0x4a, 0x40, 0x9f, 0xc2, 0xe1, 0x50, 0x95, 0x14, 0x56, 0x5e, 0x8f, 0x2a, 0x21, 0x43, 0x74, 0x07,
	0x8e, 0x6f, 0xd5, 0x19, 0xe1, 0x9b, 0xbb, 0xa4, 0xee, 0xd3, 0x79, 0x05, 0x03, 0x2d, 0x55, 0xbe,
	0x7c, 0x50, 0xfa, 0x76, 0x61, 0xe6, 0x96, 0x98, 0xc7, 0x72, 0x1e, 0x4b, 0x77, 0x2d, 0x2a, 0x8b,
	0xb9, 0xc2, 0x57, 0x20, 0xbe, 0x41, 0x87, 0x72, 0xf0, 0x44, 0x7c, 0x46, 0x6f, 0xc1, 0x53, 0x06,
	0xf3, 0x2b, 0x75, 0x1a, 0x32, 0x1b, 0xc4, 0x40, 0x03, 0xfa, 0x78, 0x30, 0x17, 0x90, 0x5c, 0x80,
	0xe3, 0xa6, 0xcd, 0xdf, 0x59, 0x0e, 0x29, 0x86, 0x30, 0xd0, 0x14, 0x1d, 0xca, 0xa9, 0x16, 0x0f,
	0x3f, 0x4e, 0x31, 0x8c, 0x81, 0x36, 0xa8, 0x8f, 0xfb, 0x31, 0x92, 0x80, 0xc7, 0xd5, 0x42, 0x48,
	0x31, 0x82, 0x81, 0x36, 0x24, 0x79, 0x5c, 0x2d, 0x04, 0x04, 0x17, 0xe1, 0xc4, 0x96, 0xb9, 0x47,
	0x8d, 0x16, 0x93, 0x51, 0x0c, 0xb4, 0x61, 0xfd, 0x54, 0x38, 0x99, 0x24, 0x6a, 0xf1, 0x19, 0xc3,
	0x40, 0x1b, 0x09, 0x89, 0x22, 0x4e, 0x6f, 0x40, 0x58, 0x61, 0xac, 0x1e, 0x52, 0x40, 0x0c, 0xb4,
	0x51, 0x7d, 0x4c, 0xcc, 0xb4, 0xc0, 0x7a, 0xdc, 0x35, 0xed, 0xed, 0x90, 0x60, 0x5c, 0x78, 0x82,
	0x3e, 0x1e, 0xcc, 0xb5, 0xc0, 0x56, 0x1a, 0x9c, 0x7a, 0x21, 0xc5, 0x1b, 0x18, 0x68, 0xa7, 0x74,
	0x28, 0xa7, 0x12, 0x0a, 0xb7, 0x60, 0x4c, 0x60, 0xa0, 0x4d, 0x04, 0x0a, 0x47, 0x28, 0x1e, 0x43,
	0x28, 0x6e, 0x66, 0x48, 0x30, 0x89, 0x81, 0x36, 0x59, 0xb8, 0x76, 0x74, 0x17, 0xd8, 0xf0, 0x2d,
	0xea, 0x9a, 0xd5, 0x35, 0xdb, 0xb7, 0xf4, 0x31, 0xc1, 0x28, 0xe0, 0xfa, 0x29, 0x9c, 0x6a, 0x5d,
	0xfa, 0x90, 0xf5, 0x9b, 0x92, 0xf5, 0xd2, 0x61, 0xac, 0xa3, 0xa0, 0x91, 0x7b, 0x40, 0x78, 0x4d,
	0xb2, 0x9d, 0x70, 0xc2, 0x4f, 0x01, 0xeb, 0x5f, 0x87, 0x67, 0x02, 0xf7, 0xda, 0xec, 0x94, 0x70,
	0x41, 0x4a, 0xb8, 0x7d, 0x64, 0x09, 0x1f, 0x05, 0xd1, 0x23, 0x12, 0x14, 0x7a, 0x6f, 0x4b, 0xee,
	0xac, 0x9d, 0x18, 0x07, 0xd2, 0xbf, 0x05, 0x27, 0xbd, 0xe4, 0xd1, 0x4e, 0x61, 0xa0, 0x4d, 0xe9,
	0x13, 0x5e, 0xe2, 0x6c, 0x5b, 0x64, 0x2d, 0x37, 0x99, 0xc6, 0x40, 0x9b, 0x8e, 0xc8, 0x62, 0x0e,
	0xe9, 0xc5, 0xcf, 0x67, 0x06, 0x03, 0x6d, 0x46, 0x1f, 0xf7, 0x62, 0xe7, 0x13, 0x92, 0xb4, 0xf8,
	0x20, 0x0c, 0x34, 0x14, 0x90, 0x44, 0x5c, 0x0a, 0x70, 0xce, 0xa5, 0x0e, 0x25, 0xc2, 0x26, 0x09,
	0x97, 0x99, 0xc5, 0x8a, 0x36, 0xa6, 0xcf, 0x46, 0x8b, 0x8f, 0x62, 0xae, 0x73, 0x03, 0x8e, 0x33,
	0x9b, 0x8a, 0xac, 0x24, 0x32, 0xc1, 0xfc, 0x69, 0x19, 0xc5, 0xce, 0xe4, 0x82, 0x08, 0x9a, 0x8b,
	0x22, 0x68, 0x6e, 0x4d, 0xac, 0x7e, 0x38, 0xa0, 0x43, 0x49, 0x2c, 0x47, 0xe8, 0x22, 0x3c, 0x15,
	0x6c, 0x0d, 0x64, 0xcd, 0xcf, 0x09, 0xc7, 0xfc, 0x70, 0x40, 0x0f, 0x18, 0x06, 0x42, 0x10, 0x85,
	0x63, 0x16, 0x71, 0x42, 0x1c, 0x67, 0x64, 0x60, 0xf9, 0xf0, 0x04, 0x81, 0xe5, 0x23, 0xe2, 0x48,
	0xdc, 0x6b, 0x36, 0x77, 0x1b, 0xfa, 0xa8, 0x15, 0x0e, 0xd1, 0x6f, 0x02, 0x38, 0x6b, 0x89, 0x6c,
	0xd4, 0xa1, 0xf9, 0x59, 0x29, 0xf1, 0xe1, 0xc9, 0x24, 0x3a, 0x09, 0x93, 0x05, 0xa2, 0x67, 0xac,
	0xce, 0xf9, 0x38, 0x86, 0xd0, 0x31, 0x03, 0x0c, 0xf3, 0xaf, 0x09, 0x43, 0xe0, 0x96, 0xdd, 0x18,
	0x62, 0xf3, 0xa8, 0x08, 0xe7, 0x6d, 0x66, 0xaf, 0x30, 0x7b, 0x97, 0xda, 0x22, 0x87, 0x91, 0xfa,
	0x06, 0xb1, 0x82, 0xb0, 0x38, 0x9f, 0x96, 0x81, 0xa3, 0xef, 0x3a, 0x5a, 0x81, 0x53, 0xad, 0x44,
	0x19, 0x42, 0x3f, 0x2f, 0xdd, 0x21, 0xdd, 0xe5, 0x0e, 0x8f, 0x23, 0x3a, 0x7d, 0xb2, 0xb5, 0x25,
	0x60, 0x42, 0x61, 0xcb, 0xcd, 0xe2, 0x57, 0x72, 0x01, 0x2b, 0xaf, 0x1e, 0x4f, 0x66, 0x22, 0x8e,
	0xed, 0xeb, 0xf7, 0x4f, 0x00, 0xce, 0x27, 0xe5, 0xb4, 0xf3, 0xf6, 0x3c, 0x3e, 0x81, 0xb0, 0xf2,
	0xea, 0x41, 0xa9, 0x94, 0x39, 0xaf, 0x87, 0xbc, 0xb1, 0x1d, 0x2c, 0x61, 0x21, 0x03, 0x73, 0x93,
	0xd7, 0x69, 0x41, 0xed, 0xbd, 0x68, 0x50, 0xaf, 0xea, 0x9a, 0xb2, 0x8a, 0xc8, 0xe9, 0x67, 0xe2,
	0x90, 0x4b, 0x2d, 0x68, 0xe8, 0x4b, 0x00, 0xe7, 0xda, 0x66, 0x89, 0x83, 0x7e, 0xeb, 0x04, 0x11,
	0xb7, 0x5c, 0x38, 0x28, 0xe5, 0x33, 0x68, 0xa3, 0x1b, 0xeb, 0xb9, 0x8d, 0xbe, 0x10, 0x67, 0x5b,
	0x51, 0x3a, 0x86, 0x6f, 0x17, 0xa6, 0x3b, 0x43, 0x48, 0x0c, 0xa3, 0x2a, 0xe2, 0x48, 0xf9, 0xfa,
	0x41, 0xe9, 0x5a, 0x66, 0xae, 0x65, 0x84, 0x80, 0x2c, 0x94, 0xb7, 0xd0, 0x39, 0x9d, 0x10, 0x39,
	0x9f, 0x8c, 0x40, 0x31, 0xb9, 0x3f, 0x03, 0x31, 0xc1, 0xe1, 0xed, 0x89, 0x09, 0xbe, 0xf8, 0x9a,
	0x2a, 0x92, 0xf2, 0xad, 0x83, 0xd2, 0x4a, 0xa6, 0x0d, 0x32, 0x90, 0x84, 0x59, 0xe5, 0x19, 0xad,
	0xf2, 0x50, 0x85, 0x8b, 0x7d, 0x56, 0x7b, 0x6b, 0x12, 0xf0, 0x8d, 0x69, 0xf2, 0xb7, 0x00, 0xce,
	0x74, 0x2b, 0x70, 0xe9, 0x35, 0x55, 0x87, 0xe5, 0xe5, 0x83, 0xd2, 0x52, 0x66, 0x76, 0xa3, 0x07,
	0xee, 0xf4, 0x46, 0x7f, 0xb8, 0xd3, 0x76, 0x27, 0xcc, 0x77, 0xe1, 0x6c, 0x90, 0x4d, 0xd8, 0x2e,
	0x75, 0x5d, 0xd3, 0xa0, 0x9b, 0xbc, 0xe1, 0xd0, 0xf9, 0x6f, 0x89, 0x5a, 0xa9, 0x3c, 0x72, 0x50,
	0x1a, 0xfc, 0xeb, 0x14, 0x50, 0xf4, 0x19, 0x49, 0x73, 0x3f, 0x24, 0x79, 0xdc, 0x70, 0x68, 0xfa,
	0x3f, 0x01, 0x1c, 0x0e, 0x6b, 0x53, 0x04, 0x07, 0x6d, 0x62, 0xd1, 0xa0, 0x36, 0xd5, 0xe5, 0x67,
	0x74, 0x06, 0x0e, 0x13, 0x8b, 0xf9, 0x36, 0x9f, 0x4f, 0xc9, 0x1a, 0x23, 0x1c, 0xa1, 0x5d, 0x98,
	0x62, 0x3b, 0xb2, 0xf2, 0x9b, 0x2c, 0xdc, 0x39, 0xb1, 0x19, 0x72, 0xab, 0x94, 0x3a, 0xd2, 0xf3,
	0xd3, 0x07, 0xa5, 0xb3, 0x85, 0xb9, 0x68, 0x98, 0xd4, 0x3a, 0xc5, 0x76, 0xd4, 0x0b, 0x70, 0x34,
	0x5a, 0x44, 0x63, 0x70, 0xe8, 0x56, 0xe9, 0xde, 0xa3, 0xb5, 0xe9, 0x01, 0x34, 0x0a, 0x07, 0x1f,
	0xeb, 0x1f, 0xaf, 0x4d, 0x83, 0xe2, 0xec, 0x41, 0x69, 0xba, 0x38, 0xb9, 0xaf, 0xb2, 0x1d, 0xb5,
	0x88, 0x55, 0x31, 0xa9, 0x36, 0xd3, 0x2e, 0x9c, 0x48, 0x64, 0x1a, 0x34, 0x0d, 0x95, 0x1d, 0xda,
	0x08, 0x35, 0x15, 0x1f, 0xd1, 0x5d, 0x38, 0x14, 0x84, 0xb6, 0xd4, 0x49, 0x4a, 0xa5, 0x80, 0x47,
	0x31, 0x75, 0x1d, 0xa4, 0x57, 0xe1, 0x99, 0xde, 0xb9, 0xa6, 0x87, 0xf0, 0xd3, 0x71, 0xe1, 0x63,
	0x71, 0x2e, 0xbf, 0x0f, 0x22, 0x36, 0x9d, 0xe9, 0xa2, 0x07, 0x9b, 0xef, 0xc7, 0xd9, 0xbc, 0x96,
	0x8a, 0xbf, 0x8d, 0xa4, 0xf8, 0x17, 0xa9, 0x83, 0xd2, 0x9f, 0xa6, 0xe0, 0xef, 0x80, 0xcc, 0x6c,
	0x09, 0x57, 0x4c, 0x8e, 0xd9, 0x16, 0x6e, 0xb7, 0xbe, 0x85, 0xf5, 0x75, 0x9b, 0x47, 0x39, 0xa8,
	0x81, 0xab, 0xcc, 0x72, 0xea, 0x66, 0x55, 0x5e, 0xbb, 0xb0, 0x99, 0xc3, 0xc2, 0x21, 0x31, 0x67,
	0xb8, 0x2a, 0x5c, 0x14, 0x5b, 0xc4, 0x6e, 0xe0, 0x2d, 0x4a, 0xb8, 0xef, 0x52, 0x4f, 0xf0, 0x7a,
	0x10, 0x25, 0xa3, 0xaf, 0x80, 0x6c, 0x60, 0xbe, 0x02, 0xf1, 0xaa, 0xff, 0x2b, 0x90, 0x68, 0x13,
	0x32, 0x4f, 0xe0, 0xa5, 0x5b, 0xa6, 0x6d, 0x60, 0xe6, 0x73, 0x6c, 0x31, 0x97, 0x62, 0x52, 0x11,
	0x1f, 0xbb, 0xfa, 0xba, 0x5c, 0x8d, 0x73, 0xc7, 0x2b, 0xe6, 0xf3, 0xdb, 0x26, 0xaf, 0xf9, 0x95,
	0x5c, 0x95, 0x59, 0x79, 0x61, 0x95, 0x2c, 0xad, 0x32, 0xaf, 0xe1, 0x71, 0x1a, 0x0e, 0x43, 0x23,
	0x15, 0x17, 0xf7, 0x55, 0x21, 0x5c, 0xf8, 0xce, 0x62, 0x75, 0xeb, 0xea, 0x3b, 0x4b, 0x74, 0x29,
	0xbb, 0x5c, 0x59, 0x5e, 0xce, 0x2e, 0x5f, 0xbf, 0x6a, 0x64, 0xc9, 0xd2, 0xb5, 0x1b, 0xd9, 0x6b,
	0xcb, 0x06, 0xa9, 0x18, 0x5b, 0xef, 0xd2, 0xeb, 0x4b, 0xcb, 0x6a, 0xb3, 0x3c, 0x11, 0x55, 0x5c,
	0x12, 0x98, 0xfa, 0xdb, 0x63, 0x70, 0xbe, 0x13, 0x45, 0x14, 0x81, 0xd0, 0x0d, 0x78, 0x4e, 0x16,
	0xb7, 0xad, 0xd0, 0x18, 0x6f, 0xa3, 0x00, 0x56, 0xb4, 0x94, 0x7e, 0x46, 0x10, 0x44, 0x1b, 0x6e,
	0xb5, 0xfb, 0xa4, 0x9b, 0x30, 0x9d, 0xdc, 0x9a, 0xe8, 0x9a, 0x44, 0x8b, 0x07, 0xf4, 0xb3, 0xf1,
	0xbd, 0xab, 0xb1, 0x0e, 0xaa, 0x4b, 0x6e, 0xbc, 0xf2, 0x54, 0xb0, 0xa2, 0x29, 0x49, 0xb9, 0xeb,
	0xed, 0x22, 0xb4, 0x4b, 0x6e, 0xa2, 0xd3, 0x1a, 0xc4, 0x8a, 0x36, 0x98, 0x94, 0xfb, 0x71, 0xac,
	0x82, 0xed, 0x25, 0xb7, 0x55, 0x14, 0x0f, 0x61, 0x45, 0x1b, 0xea, 0x92, 0x1b, 0xd5, 0xc7, 0xef,
	0xc1, 0xf3, 0x1d, 0xa6, 0x4a, 0x94, 0xdd, 0xc3, 0x58, 0xd1, 0x86, 0xf5, 0xf9, 0x84, 0xb1, 0xe2,
	0x15, 0x78, 0xef, 0xed, 0xb1, 0xfe, 0x4f, 0xd1, 0x46, 0x7a, 0x6c, 0x8f, 0xa4, 0xbf, 0x0b, 0xe7,
	0x93, 0xdb, 0x63, 0x1d, 0xdd, 0x28, 0x56, 0xb4, 0x51, 0x7d, 0x2e, 0xbe, 0xb7, 0xdc, 0xea, 0xee,
	0xba, 0xcc, 0x95, 0x28, 0x5f, 0xc7, 0x64, 0xe1, 0x9e, 0x30, 0x57, 0xb2, 0x78, 0xef, 0x30, 0x57,
	0xbc, 0x0b, 0x84, 0x58, 0xd1, 0x4e, 0x25, 0xcd, 0x55, 0x6e, 0x77, 0x84, 0x3d, 0x8f, 0xa9, 0xa5,
	0xee, 0x38, 0x56, 0xb4, 0x89, 0xee, 0x63, 0x8a, 0xb4, 0xb5, 0x3b, 0xb5, 0x8d, 0x55, 0x7a, 0xa7,
	0x4e, 0x52, 0xe9, 0x25, 0x8c, 0xd4, 0xae, 0xf6, 0xde, 0x87, 0x0b, 0x1d, 0x46, 0x4a, 0x9e, 0xce,
	0x04, 0x56, 0xb4, 0x29, 0xfd, 0x5c, 0xc2, 0x4c, 0x89, 0x36, 0xac, 0x0f, 0x83, 0x96, 0x77, 0x4c,
	0x62, 0x45, 0x9b, 0xee, 0xc5, 0xa0, 0xaf, 0x57, 0x27, 0xda, 0xb5, 0x29, 0xac, 0x68, 0x33, 0x1d,
	0xc7, 0x14, 0x33, 0x57, 0xcf, 0xcd, 0xb1, 0x86, 0x50, 0xd1, 0x50, 0xf7, 0xe6, 0x50, 0x72, 0xd1,
	0x38, 0x28, 0x91, 0xe2, 0xe6, 0xbe, 0xda, 0xcf, 0xbd, 0xd4, 0x22, 0xfe, 0x01, 0x77, 0x7d, 0x7a,
	0x05, 0x07, 0xff, 0x6f, 0x91, 0xba, 0x17, 0x0e, 0x3e, 0xbb, 0x82, 0xd5, 0xbe, 0xd7, 0x49, 0xec,
	0x5b, 0xba, 0x82, 0x0b, 0x57, 0xf0, 0xd5, 0xcf, 0x9a, 0x6a, 0x1a, 0x0e, 0x96, 0x99, 0xd1, 0xe8,
	0x95, 0xd2, 0x55, 0x0a, 0xa7, 0xc2, 0x0e, 0xf9, 0xfb, 0x26, 0xaf, 0x49, 0xb2, 0x49, 0x98, 0x8a,
	0xde, 0xa4, 0xf4, 0x94, 0x69, 0xa0, 0x32, 0x1c, 0x34, 0x08, 0x27, 0x61, 0x1e, 0xc9, 0x1d, 0xfd,
	0xf0, 0x05, 0x37, 0x5d, 0xee, 0x55, 0xff, 0x06, 0xc0, 0xa9, 0x8f, 0x1d, 0x83, 0x70, 0xfa, 0xa4,
	0xa0, 0xd3, 0x1f, 0xf9, 0xd4, 0xe3, 0xe8, 0x1e, 0x54, 0x48, 0x25, 0x40, 0x33, 0x5e, 0x28, 0xbe,
	0x7a, 0x7a, 0xd2, 0x05, 0x1b, 0x74, 0x13, 0x8e, 0xfb, 0x52, 0x80, 0x7c, 0x12, 0x0d, 0xc1, 0x76,
	0x37, 0x37, 0xb7, 0x4c, 0x5a, 0x37, 0x3e, 0x22, 0xde, 0x8e, 0x0e, 0x03, 0x72, 0xf1, 0x59, 0xdd,
	0x16, 0x16, 0x62, 0x3b, 0x3d, 0x8b, 0x9e, 0xc0, 0x1c, 0xa9, 0x96, 0x39, 0x6e, 0xc2, 0xf1, 0xaa,
	0x2b, 0x2c, 0xbe, 0x29, 0xba, 0x23, 0x59, 0xf5, 0xbc, 0xbc, 0x8b, 0x82, 0x01, 0xb9, 0x98, 0x50,
	0x7f, 0x0c, 0xe0, 0xcc, 0x8a, 0x1c, 0x0a, 0x79, 0x91, 0x25, 0xce, 0xc0, 0x61, 0x87, 0xb8, 0xd4,
	0xe6, 0xa1, 0xe0, 0x70, 0x24, 0x2c, 0x5f, 0x61, 0x6c, 0xe7, 0x55, 0x2c, 0xcf, 0x76, 0x74, 0xb9,
	0x17, 0x9d, 0x85, 0x23, 0xe2, 0xef, 0xa6, 0x69, 0x48, 0xa8, 0x63, 0xfa, 0xb0, 0x18, 0xae, 0x1b,
	0x19, 0x0c, 0xc7, 0x63, 0xb7, 0x53, 0x14, 0x4d, 0x4f, 0xd7, 0xf4, 0xfb, 0xd3, 0x03, 0x68, 0x04,
	0x2a, 0xf7, 0x37, 0xd6, 0xa6, 0x41, 0xe1, 0xf7, 0x34, 0x78, 0xb6, 0xd3, 0xd8, 0x8f, 0xa8, 0xbb,
	0x6b, 0x56, 0x29, 0xfa, 0x7c, 0x10, 0x0e, 0x07, 0x8a, 0xa0, 0x13, 0x1c, 0x5d, 0xfa, 0x04, 0x7b,
	0xd5, 0x5f, 0xa4, 0x7e, 0xeb, 0xdf, 0xfe, 0xeb, 0xcf, 0x52, 0x5f, 0xa7, 0xd4, 0xff, 0x4d, 0xe5,
	0x77, 0x97, 0xa2, 0xd7, 0xf8, 0x5e, 0x6f, 0xf1, 0xf9, 0xfd, 0x58, 0x6e, 0x6d, 0xe6, 0xf7, 0xe3,
	0xe9, 0xb2, 0x99, 0xdf, 0x8f, 0xdd, 0xd8, 0x66, 0xde, 0xa3, 0x0e, 0x71, 0x09, 0x67, 0x6e, 0x7e,
	0xdf, 0x4f, 0x2c, 0xec, 0xc7, 0x2e, 0x58, 0x33, 0xbf, 0x9f, 0x08, 0x32, 0xd1, 0x38, 0xb6, 0xde,
	0xbe, 0xc5, 0xcd, 0xfc, 0x7e, 0x3c, 0xf0, 0xbf, 0xe7, 0x71, 0xd7, 0x71, 0xe9, 0x96, 0xb9, 0x97,
	0xcf, 0x34, 0x03, 0x21, 0xb1, 0x6d, 0x5e, 0x27, 0x1f, 0xaf, 0x53, 0x90, 0xd7, 0xb1, 0x21, 0x09,
	0xb2, 0xdf, 0x0b, 0x40, 0x33, 0xbf, 0xdf, 0x0e, 0xe4, 0xcd, 0xfc, 0x7e, 0xc7, 0xbb, 0x9a, 0xd8,
	0xd9, 0xf3, 0xc1, 0x2d, 0xb1, 0x2f, 0xd6, 0xf5, 0x34, 0xd1, 0x3f, 0x02, 0x08, 0x23, 0x5f, 0x36,
	0x1a, 0xdf, 0x98, 0x1b, 0x64, 0xa4, 0x17, 0x5c, 0x52, 0x2f, 0x1c, 0xe2, 0x03, 0x45, 0x90, 0x41,
	0x7f, 0x1f, 0x83, 0xcc, 0x76, 0xd0, 0xcd, 0xa3, 0x8b, 0xed, 0xba, 0xb4, 0xe9, 0x63, 0x5e, 0x47,
	0x35, 0x2b, 0x71, 0xbe, 0x1d, 0xe0, 0xdc, 0x0f, 0x6e, 0xf8, 0x7b, 0x8e, 0x5f, 0xa9, 0x9b, 0x5e,
	0x8d, 0xba, 0x9e, 0xf0, 0x05, 0x71, 0x33, 0xbd, 0x62, 0x70, 0x6f, 0x7f, 0x17, 0xc0, 0xe1, 0x7b,
	0x8c, 0xed, 0xf8, 0x0e, 0x9a, 0xca, 0x79, 0x7e, 0xa5, 0x90, 0x5b, 0x37, 0xc2, 0x48, 0x7d, 0x22,
	0x73, 0xe5, 0x24, 0x0c, 0x0d, 0x7d, 0xfb, 0xd0, 0x2b, 0x23, 0x4a, 0xdf, 0x26, 0xfa, 0x63, 0x00,
	0x87, 0x83, 0xc8, 0x7d, 0xa2, 0x13, 0xee, 0xf3, 0xea, 0xa8, 0x2e, 0x49, 0x38, 0xdf, 0x49, 0x1f,
	0x11, 0x8e, 0x38, 0xc4, 0x5f, 0x00, 0x38, 0x1a, 0xe5, 0x12, 0x74, 0xe3, 0xe8, 0x98, 0x3a, 0xf2,
	0x4f, 0x5f, 0x48, 0x5f, 0x02, 0x89, 0xe9, 0x2f, 0x41, 0x3a, 0x93, 0xdf, 0x2d, 0xbc, 0x1c, 0x14,
	0xa9, 0xd0, 0x5c, 0x00, 0x4c, 0x24, 0xa1, 0xa7, 0x4b, 0x85, 0x63, 0x6f, 0x59, 0x2c, 0x7c, 0x27,
	0xbf, 0x5b, 0x20, 0x47, 0xdd, 0x03, 0x32, 0xe8, 0xef, 0x00, 0x1c, 0x5e, 0xa5, 0x75, 0xca, 0x69,
	0xb7, 0x67, 0xf4, 0xd3, 0xc9, 0x3d, 0x28, 0x95, 0x2a, 0x97, 0xe1, 0x24, 0x84, 0x25, 0xc7, 0xbc,
	0x4b, 0x1b, 0x25, 0x9f, 0xd7, 0xd0, 0x00, 0x3c, 0x0b, 0x87, 0xef, 0x8b, 0x8f, 0x05, 0x34, 0x01,
	0x07, 0x5d, 0x4a, 0x0c, 0x38, 0xf4, 0xdc, 0x35, 0x39, 0x7d, 0x76, 0x1a, 0x4e, 0xee, 0x65, 0x4d,
	0xd7, 0x15, 0x20, 0x3c, 0xb3, 0x52, 0xa7, 0x28, 0x85, 0x03, 0xb3, 0x68, 0x99, 0xa3, 0x7a, 0xce,
	0xff, 0x00, 0x38, 0x7a, 0x9b, 0xf2, 0x87, 0x3e, 0x75, 0x1b, 0xbf, 0x14, 0xdf, 0xf9, 0x43, 0x70,
	0x50, 0x7a, 0xac, 0x6e, 0xc0, 0x85, 0x5e, 0xcd, 0x5f, 0x4b, 0xf2, 0x31, 0x9b, 0xbe, 0x4f, 0x40,
	0x65, 0x40, 0x2a, 0x9a, 0x43, 0x57, 0x0e, 0x53, 0xf4, 0x47, 0x42, 0x40, 0xa4, 0xee, 0x97, 0x43,
	0x70, 0xfa, 0x36, 0xe5, 0x51, 0x99, 0x17, 0x08, 0x2f, 0x9f, 0xa0, 0xac, 0x09, 0x19, 0xa5, 0x5f,
	0x03, 0x0f, 0xf5, 0xf3, 0x41, 0xa9, 0xd3, 0xff, 0x29, 0xe8, 0x6b, 0xe5, 0x10, 0xad, 0x5a, 0x05,
	0x65, 0x98, 0x23, 0x7a, 0xb5, 0xa7, 0xcd, 0xce, 0xb5, 0x8e, 0x84, 0xda, 0xb7, 0xbf, 0xec, 0x5a,
	0xf3, 0x5f, 0xb6, 0x98, 0x4c, 0x74, 0x2f, 0xe9, 0x00, 0x7b, 0xaf, 0xf6, 0xdd, 0x9b, 0x48, 0xcd,
	0xfd, 0x3b, 0xb4, 0xee, 0x7d, 0xed, 0x0e, 0xac, 0xa7, 0x22, 0x7d, 0x05, 0x76, 0x67, 0xde, 0x3e,
	0xdd, 0x4e, 0x9f, 0xe5, 0xbe, 0x7a, 0x7a, 0x2f, 0x93, 0x9a, 0xa8, 0x0c, 0xd0, 0x17, 0x83, 0x70,
	0x70, 0xad, 0x5a, 0x63, 0xe8, 0xd0, 0x6f, 0xe7, 0x3c, 0xbf, 0x92, 0x0b, 0x3a, 0xd1, 0x28, 0xac,
	0x1c, 0x7f, 0x8b, 0xfa, 0x13, 0xe5, 0xa0, 0xf4, 0x2f, 0x29, 0x38, 0x4a, 0xab, 0x35, 0x86, 0x5d,
	0xa7, 0x8a, 0x66, 0x1e, 0xf9, 0x96, 0x45, 0xdc, 0x46, 0x11, 0xaf, 0x85, 0x53, 0xe9, 0xe9, 0xd5,
	0xf6, 0x8b, 0x9e, 0x9c, 0x55, 0x57, 0x21, 0x4a, 0x5e, 0x66, 0x89, 0xf8, 0x98, 0x57, 0xf8, 0xce,
	0x0d, 0xa8, 0x14, 0x16, 0x17, 0x51, 0x41, 0x5d, 0x84, 0xd3, 0xc4, 0x09, 0xde, 0x9e, 0x4c, 0x66,
	0xe7, 0x9f, 0x79, 0xcc, 0x46, 0x0b, 0xfb, 0x6a, 0xd4, 0x23, 0xa9, 0xbc, 0x46, 0xb1, 0x69, 0x3b,
	0x7e, 0xf8, 0x25, 0xb5, 0xda, 0xbc, 0xf3, 0x04, 0x2a, 0xd7, 0x16, 0xaf, 0xa2, 0xfb, 0xf0, 0x1d,
	0x9d, 0x72, 0xdf, 0xb5, 0xa9, 0x81, 0x9f, 0xd7, 0xa8, 0x8d, 0x05, 0xa5, 0x4b, 0x3d, 0xe6, 0xbb,
	0x55, 0x8a, 0x4d, 0x0f, 0x73, 0x6a, 0x39, 0xcc, 0x25, 0xae, 0x59, 0x6f, 0x60, 0xdf, 0x26, 0xbb,
	0xc4, 0xac, 0x93, 0x4a, 0x9d, 0xe6, 0x32, 0x73, 0x70, 0x74, 0x2f, 0x6b, 0xfb, 0x56, 0x85, 0xba,
	0x68, 0x6c, 0x66, 0x40, 0xfe, 0xfb, 0xf4, 0x83, 0x3b, 0x37, 0xa1, 0xb2, 0xbc, 0xb8, 0x8c, 0x96,
	0x61, 0xe6, 0x25, 0x7c, 0x0d, 0x46, 0x3d, 0x6c, 0x33, 0x8e, 0xe9, 0x9e, 0xe9, 0xf1, 0x1c, 0x1a,
	0x86, 0xf2, 0xa5, 0x56, 0x5e, 0xdd, 0xcf, 0x0e, 0x0f, 0x47, 0xc2, 0xd4, 0xf9, 0xfd, 0xe0, 0xb8,
	0x9f, 0x9e, 0x53, 0xa7, 0xe3, 0xa9, 0x48, 0xac, 0x15, 0x83, 0x07, 0xbc, 0xa7, 0x08, 0x75, 0x2d,
	0xa1, 0x9f, 0x01, 0x78, 0x6a, 0x95, 0x52, 0x47, 0x7e, 0x11, 0x2a, 0x26, 0xbe, 0xa9, 0x72, 0xee,
	0x7d, 0xa9, 0xed, 0x0d, 0x75, 0xf9, 0xd0, 0x2c, 0x93, 0xf8, 0x89, 0x46, 0x4e, 0xf4, 0x6a, 0x32,
	0x3d, 0x96, 0x20, 0xdc, 0x60, 0x65, 0xd3, 0x36, 0x4c, 0x7b, 0xdb, 0x43, 0xe7, 0xba, 0x72, 0xc7,
	0x6a, 0xf8, 0xc3, 0x97, 0xbe, 0x69, 0x65, 0x00, 0x3d, 0x81, 0x23, 0xa2, 0x5b, 0x63, 0x3e, 0x47,
	0x7d, 0x88, 0xfa, 0x6e, 0x3e, 0x2f, 0xe1, 0xcf, 0xa1, 0xd9, 0xb8, 0x85, 0x79, 0xc8, 0xac, 0x06,
	0xa7, 0xd7, 0x5c, 0x97, 0xb9, 0xa2, 0xd5, 0x5e, 0xa5, 0x9c, 0x98, 0x75, 0xef, 0xd8, 0x02, 0x2e,
	0x49, 0x01, 0x6f, 0xa2, 0x85, 0xc4, 0x11, 0x0a, 0xae, 0xcf, 0x4d, 0x5e, 0x33, 0x42, 0xae, 0x7f,
	0x02, 0x20, 0xba, 0x4d, 0x79, 0x67, 0x6b, 0x7f, 0x8c, 0x6a, 0xa9, 0x63, 0x6b, 0x5f, 0x3c, 0x6f,
	0x4b, 0x3c, 0x6f, 0xa9, 0xe7, 0xe2, 0x78, 0x04, 0x94, 0x0a, 0x33, 0x1a, 0xf9, 0x7d, 0x51, 0xb3,
	0xc8, 0x27, 0x00, 0xf4, 0x47, 0x00, 0xce, 0x3c, 0x60, 0x1e, 0x17, 0x1c, 0xe5, 0x56, 0x89, 0xe8,
	0x98, 0xcf, 0x09, 0x7d, 0x61, 0xe4, 0x25, 0x8c, 0xcb, 0xea, 0xa5, 0x38, 0x0c, 0x87, 0x79, 0x5c,
	0x40, 0x91, 0x5f, 0x7f, 0x07, 0x78, 0x5a, 0x6e, 0xf2, 0x73, 0x00, 0x67, 0x57, 0x6a, 0xb4, 0xba,
	0x13, 0x15, 0x0a, 0x0f, 0x88, 0x4b, 0x2c, 0xef, 0x1b, 0xf3, 0xfb, 0xdb, 0x52, 0x81, 0x12, 0x7a,
	0xff, 0x30, 0xbf, 0x77, 0x24, 0xce, 0xfc, 0x36, 0xe5, 0x3d, 0xaf, 0x00, 0xfa, 0x6f, 0x00, 0xdf,
	0x90, 0x8a, 0x05, 0xaf, 0xf6, 0xa2, 0xb9, 0xff, 0x15, 0x51, 0xf1, 0xa1, 0x54, 0xf1, 0x2e, 0x5a,
	0x3f, 0x86, 0x8a, 0x61, 0x53, 0x2a, 0x7f, 0x61, 0xd6, 0xa1, 0x2e, 0xdb, 0x69, 0xa2, 0xff, 0x00,
	0xf0, 0xb4, 0x54, 0x56, 0x78, 0xd6, 0xaf, 0x90, 0x8e, 0x6a, 0xf1, 0x88, 0x3a, 0x0a, 0x17, 0x4d,
	0x3e, 0x0f, 0x34, 0x8b, 0xc9, 0x1f, 0x9f, 0xa1, 0x2f, 0x00, 0x5c, 0xb8, 0xbf, 0x4b, 0x5d, 0x59,
	0x99, 0xeb, 0xd4, 0x73, 0x98, 0xed, 0xd1, 0x15, 0x26, 0xbf, 0x61, 0x79, 0xdc, 0x70, 0x68, 0xdf,
	0x10, 0xb2, 0xd0, 0x35, 0x1f, 0x7b, 0x5f, 0x56, 0xd7, 0x0e, 0x4a, 0xa8, 0x98, 0x48, 0x8f, 0x9c,
	0xee, 0x71, 0x09, 0x3f, 0x83, 0xb4, 0xf8, 0x35, 0x62, 0x91, 0x70, 0x37, 0x14, 0x5e, 0x0d, 0x84,
	0x73, 0x21, 0xfc, 0xc7, 0x00, 0xce, 0xc9, 0x13, 0x58, 0xdb, 0x0b, 0xac, 0x13, 0xfd, 0x94, 0x06,
	0x7d, 0xf7, 0xb8, 0xbf, 0xd1, 0x11, 0x91, 0x21, 0xda, 0xdd, 0xf7, 0xa2, 0x9f, 0x93, 0x08, 0x67,
	0xd1, 0x8c, 0x40, 0x18, 0x26, 0xbb, 0x62, 0x55, 0x00, 0x40, 0x7f, 0x0e, 0xe0, 0xf9, 0x04, 0x94,
	0xe4, 0x6f, 0x7d, 0x0e, 0x2f, 0xc6, 0x7b, 0x01, 0x4a, 0xf2, 0x78, 0x05, 0x58, 0xe9, 0x7f, 0x06,
	0x07, 0xa5, 0x9f, 0x02, 0xb4, 0xd5, 0xe7, 0x29, 0x2d, 0xfe, 0xb5, 0x26, 0xce, 0x66, 0xf1, 0xf3,
	0x9a, 0x59, 0xad, 0x61, 0xaf, 0xc6, 0xfc, 0xba, 0x21, 0x8b, 0x81, 0x0a, 0xc5, 0xbe, 0x47, 0x0d,
	0x6c, 0xda, 0xd8, 0xa9, 0x93, 0x2a, 0xc5, 0x6c, 0x4b, 0x96, 0x0d, 0x06, 0xab, 0xfa, 0x16, 0xb5,
	0x83, 0xe7, 0x18, 0x5c, 0x65, 0x96, 0x18, 0xbc, 0x95, 0x7e, 0x08, 0x2f, 0xf4, 0xea, 0x87, 0x44,
	0x52, 0x8f, 0x1e, 0xef, 0x8e, 0x59, 0x4f, 0x15, 0x9e, 0xc1, 0xd3, 0x55, 0x62, 0xd1, 0xfa, 0x0a,
	0xf1, 0x68, 0xc8, 0x63, 0x83, 0x58, 0x14, 0xe9, 0x70, 0x28, 0xf8, 0xb5, 0xd0, 0x71, 0x93, 0x58,
	0xc2, 0x5a, 0xad, 0x24, 0x26, 0x96, 0x0a, 0x3f, 0x84, 0x0b, 0x25, 0x9b, 0xf1, 0x1a, 0x75, 0x43,
	0x49, 0xf2, 0x10, 0xda, 0x09, 0xfd, 0x7b, 0x89, 0xf4, 0x7e, 0x5c, 0xc1, 0x03, 0xe5, 0x9f, 0x8e,
	0x1d, 0x94, 0x7e, 0x32, 0x86, 0xbe, 0x06, 0x70, 0xb6, 0x84, 0xcb, 0xc1, 0x37, 0x97, 0xb1, 0xfb,
	0xfb, 0x09, 0x3c, 0xbd, 0xad, 0x3f, 0x58, 0xc9, 0xde, 0x0e, 0x54, 0xc7, 0x8e, 0xcb, 0x9e, 0xd1,
	0x2a, 0x3f, 0xae, 0xc9, 0xd2, 0xd3, 0x36, 0xb3, 0xe9, 0x07, 0xa1, 0x6a, 0x82, 0x3a, 0xf3, 0x43,
	0x78, 0xba, 0xfc, 0x68, 0x15, 0x5f, 0xcd, 0xae, 0xd4, 0x89, 0xef, 0x51, 0x7c, 0xcf, 0xac, 0x52,
	0xdb, 0xa3, 0xe8, 0xd6, 0xf1, 0x38, 0xe7, 0x2b, 0x75, 0x56, 0xc9, 0x5b, 0xc4, 0xe3, 0xd4, 0xcd,
	0xdf, 0x5b, 0x5f, 0x59, 0xdb, 0x78, 0xb4, 0x96, 0xe3, 0x7b, 0xbc, 0xa0, 0x2c, 0xe5, 0x16, 0x8b,
	0x18, 0xce, 0xed, 0x65, 0x3d, 0x66, 0x51, 0xa9, 0x4d, 0xfb, 0x13, 0x1a, 0x49, 0x0f, 0x35, 0x88,
	0x61, 0x90, 0x8c, 0x02, 0x52, 0x83, 0x85, 0xae, 0xaa, 0xb8, 0x70, 0x26, 0x3e, 0xb3, 0x97, 0xdd,
	0x62, 0x2c, 0x6b, 0x99, 0x16, 0x2d, 0x76, 0x51, 0x16, 0xfb, 0x50, 0xea, 0x0f, 0x44, 0x85, 0x7b,
	0x15, 0xad, 0xc3, 0xdb, 0xdd, 0x15, 0xae, 0xef, 0x51, 0xb7, 0x5d, 0xdd, 0xd6, 0xc8, 0x2e, 0xc5,
	0x0e, 0x75, 0x2d, 0xd3, 0xf3, 0x84, 0xeb, 0x72, 0x86, 0x49, 0xb5, 0x4a, 0x3d, 0x2f, 0x51, 0x0d,
	0xe7, 0xf4, 0x13, 0xd4, 0xcc, 0x23, 0xfa, 0x43, 0xa8, 0x2c, 0x2f, 0x5d, 0x47, 0x77, 0xe0, 0xc4,
	0xfa, 0xdb, 0x16, 0x26, 0x98, 0x53, 0xe2, 0x30, 0x9e, 0x43, 0x37, 0xe0, 0xbb, 0xe9, 0x57, 0xfb,
	0x02, 0xeb, 0xe9, 0x5f, 0x29, 0x70, 0x0a, 0x8e, 0x95, 0x89, 0x67, 0x56, 0xe5, 0xfb, 0x49, 0x6a,
	0x14, 0xc0, 0x7f, 0x00, 0x89, 0x27, 0x95, 0x2f, 0xc0, 0x68, 0x2a, 0x3d, 0xf6, 0x49, 0xb6, 0xf4,
	0x60, 0x3d, 0x7b, 0x97, 0x36, 0x70, 0xea, 0x8e, 0x06, 0x17, 0xf6, 0xb2, 0xc4, 0x22, 0x2f, 0x98,
	0x9d, 0x25, 0x8e, 0x19, 0xca, 0xcc, 0x12, 0x9f, 0xd7, 0x64, 0xfc, 0x1c, 0x4d, 0x0f, 0x33, 0x31,
	0x28, 0xdc, 0xf9, 0x35, 0xf8, 0x66, 0x3f, 0x4a, 0xe6, 0x9a, 0x2f, 0xa8, 0x8b, 0xbe, 0x97, 0xf9,
	0x2e, 0x9c, 0x82, 0x83, 0x72, 0xdf, 0x48, 0x7a, 0x88, 0xb3, 0x1d, 0x6a, 0xc3, 0xcb, 0x70, 0xa1,
	0x4d, 0xa2, 0x53, 0xcf, 0xaf, 0xf3, 0xc7, 0xbc, 0xbe, 0x6e, 0x3f, 0x12, 0x61, 0xda, 0xf0, 0x5a,
	0x4d, 0xc8, 0xc6, 0x07, 0xf0, 0xe7, 0xa0, 0xf5, 0xde, 0xf3, 0xaf, 0x60, 0x54, 0xd1, 0x06, 0x0b,
	0x17, 0x23, 0xe7, 0x8b, 0x79, 0x6a, 0x5e, 0xe2, 0xc9, 0xb7, 0x98, 0x16, 0x2f, 0xf4, 0x27, 0x92,
	0x10, 0xca, 0xbf, 0x01, 0xd3, 0xc1, 0xf3, 0x11, 0x42, 0xb7, 0x5d, 0x62, 0x73, 0x0f, 0x8b, 0x41,
	0x78, 0xa8, 0x70, 0x21, 0x7c, 0x54, 0x42, 0xb3, 0xe1, 0xa2, 0x1c, 0x45, 0xab, 0x2b, 0x70, 0x88,
	0x18, 0x96, 0x69, 0xa3, 0x62, 0x62, 0xab, 0x6d, 0x24, 0xc8, 0xa4, 0x8f, 0x08, 0x32, 0xd3, 0xe3,
	0xa2, 0x7c, 0xdf, 0x15, 0x7d, 0xdb, 0x16, 0x73, 0x2d, 0xe9, 0x86, 0x95, 0x0b, 0x70, 0x22, 0x7e,
	0x30, 0x03, 0x9d, 0x0f, 0x5d, 0x95, 0xcb, 0x7d, 0x9f, 0xba, 0x3a, 0x49, 0xdd, 0x75, 0x78, 0xf6,
	0xa3, 0x76, 0xd8, 0x8c, 0x07, 0x83, 0xe3, 0x06, 0x81, 0x17, 0xe7, 0x21, 0xda, 0xcb, 0xc6, 0x67,
	0xc4, 0x6d, 0x41, 0x43, 0x69, 0xa5, 0x42, 0xdc, 0x17, 0x1a, 0x3c, 0xdb, 0xb1, 0x58, 0x21, 0x2f,
	0xb2, 0x75, 0xd3, 0xe3, 0x68, 0xa2, 0x30, 0x0e, 0x87, 0xd2, 0x0a, 0xb3, 0x29, 0x4c, 0x61, 0xf0,
	0x74, 0xac, 0xe5, 0x8e, 0x95, 0x61, 0x19, 0xcf, 0xae, 0xfe, 0x7f, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x73, 0xd7, 0x18, 0x4f, 0x93, 0x30, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ABitOfEverythingServiceClient is the client API for ABitOfEverythingService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ABitOfEverythingServiceClient interface {
	// Create a new ABitOfEverything
	//
	// This API creates a new ABitOfEverything
	Create(ctx context.Context, in *ABitOfEverything, opts ...grpc.CallOption) (*ABitOfEverything, error)
	CreateBody(ctx context.Context, in *ABitOfEverything, opts ...grpc.CallOption) (*ABitOfEverything, error)
	// Create a book.
	CreateBook(ctx context.Context, in *CreateBookRequest, opts ...grpc.CallOption) (*Book, error)
	Lookup(ctx context.Context, in *sub2.IdMessage, opts ...grpc.CallOption) (*ABitOfEverything, error)
	Update(ctx context.Context, in *ABitOfEverything, opts ...grpc.CallOption) (*empty.Empty, error)
	UpdateV2(ctx context.Context, in *UpdateV2Request, opts ...grpc.CallOption) (*empty.Empty, error)
	Delete(ctx context.Context, in *sub2.IdMessage, opts ...grpc.CallOption) (*empty.Empty, error)
	GetQuery(ctx context.Context, in *ABitOfEverything, opts ...grpc.CallOption) (*empty.Empty, error)
	GetRepeatedQuery(ctx context.Context, in *ABitOfEverythingRepeated, opts ...grpc.CallOption) (*ABitOfEverythingRepeated, error)
	// Echo allows posting a StringMessage value.
	//
	// It also exposes multiple bindings.
	//
	// This makes it useful when validating that the OpenAPI v2 API
	// description exposes documentation correctly on all paths
	// defined as additional_bindings in the proto.
	Echo(ctx context.Context, in *sub.StringMessage, opts ...grpc.CallOption) (*sub.StringMessage, error)
	DeepPathEcho(ctx context.Context, in *ABitOfEverything, opts ...grpc.CallOption) (*ABitOfEverything, error)
	NoBindings(ctx context.Context, in *duration.Duration, opts ...grpc.CallOption) (*empty.Empty, error)
	Timeout(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error)
	ErrorWithDetails(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error)
	GetMessageWithBody(ctx context.Context, in *MessageWithBody, opts ...grpc.CallOption) (*empty.Empty, error)
	PostWithEmptyBody(ctx context.Context, in *Body, opts ...grpc.CallOption) (*empty.Empty, error)
	CheckGetQueryParams(ctx context.Context, in *ABitOfEverything, opts ...grpc.CallOption) (*ABitOfEverything, error)
	CheckNestedEnumGetQueryParams(ctx context.Context, in *ABitOfEverything, opts ...grpc.CallOption) (*ABitOfEverything, error)
	CheckPostQueryParams(ctx context.Context, in *ABitOfEverything, opts ...grpc.CallOption) (*ABitOfEverything, error)
	OverwriteResponseContentType(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*wrappers.StringValue, error)
	CheckExternalPathEnum(ctx context.Context, in *pathenum.MessageWithPathEnum, opts ...grpc.CallOption) (*empty.Empty, error)
	CheckExternalNestedPathEnum(ctx context.Context, in *pathenum.MessageWithNestedPathEnum, opts ...grpc.CallOption) (*empty.Empty, error)
}

type aBitOfEverythingServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewABitOfEverythingServiceClient(cc grpc.ClientConnInterface) ABitOfEverythingServiceClient {
	return &aBitOfEverythingServiceClient{cc}
}

func (c *aBitOfEverythingServiceClient) Create(ctx context.Context, in *ABitOfEverything, opts ...grpc.CallOption) (*ABitOfEverything, error) {
	out := new(ABitOfEverything)
	err := c.cc.Invoke(ctx, "/grpc.gateway.examples.internal.examplepb.ABitOfEverythingService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aBitOfEverythingServiceClient) CreateBody(ctx context.Context, in *ABitOfEverything, opts ...grpc.CallOption) (*ABitOfEverything, error) {
	out := new(ABitOfEverything)
	err := c.cc.Invoke(ctx, "/grpc.gateway.examples.internal.examplepb.ABitOfEverythingService/CreateBody", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aBitOfEverythingServiceClient) CreateBook(ctx context.Context, in *CreateBookRequest, opts ...grpc.CallOption) (*Book, error) {
	out := new(Book)
	err := c.cc.Invoke(ctx, "/grpc.gateway.examples.internal.examplepb.ABitOfEverythingService/CreateBook", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aBitOfEverythingServiceClient) Lookup(ctx context.Context, in *sub2.IdMessage, opts ...grpc.CallOption) (*ABitOfEverything, error) {
	out := new(ABitOfEverything)
	err := c.cc.Invoke(ctx, "/grpc.gateway.examples.internal.examplepb.ABitOfEverythingService/Lookup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aBitOfEverythingServiceClient) Update(ctx context.Context, in *ABitOfEverything, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/grpc.gateway.examples.internal.examplepb.ABitOfEverythingService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aBitOfEverythingServiceClient) UpdateV2(ctx context.Context, in *UpdateV2Request, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/grpc.gateway.examples.internal.examplepb.ABitOfEverythingService/UpdateV2", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aBitOfEverythingServiceClient) Delete(ctx context.Context, in *sub2.IdMessage, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/grpc.gateway.examples.internal.examplepb.ABitOfEverythingService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aBitOfEverythingServiceClient) GetQuery(ctx context.Context, in *ABitOfEverything, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/grpc.gateway.examples.internal.examplepb.ABitOfEverythingService/GetQuery", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aBitOfEverythingServiceClient) GetRepeatedQuery(ctx context.Context, in *ABitOfEverythingRepeated, opts ...grpc.CallOption) (*ABitOfEverythingRepeated, error) {
	out := new(ABitOfEverythingRepeated)
	err := c.cc.Invoke(ctx, "/grpc.gateway.examples.internal.examplepb.ABitOfEverythingService/GetRepeatedQuery", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aBitOfEverythingServiceClient) Echo(ctx context.Context, in *sub.StringMessage, opts ...grpc.CallOption) (*sub.StringMessage, error) {
	out := new(sub.StringMessage)
	err := c.cc.Invoke(ctx, "/grpc.gateway.examples.internal.examplepb.ABitOfEverythingService/Echo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aBitOfEverythingServiceClient) DeepPathEcho(ctx context.Context, in *ABitOfEverything, opts ...grpc.CallOption) (*ABitOfEverything, error) {
	out := new(ABitOfEverything)
	err := c.cc.Invoke(ctx, "/grpc.gateway.examples.internal.examplepb.ABitOfEverythingService/DeepPathEcho", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aBitOfEverythingServiceClient) NoBindings(ctx context.Context, in *duration.Duration, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/grpc.gateway.examples.internal.examplepb.ABitOfEverythingService/NoBindings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aBitOfEverythingServiceClient) Timeout(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/grpc.gateway.examples.internal.examplepb.ABitOfEverythingService/Timeout", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aBitOfEverythingServiceClient) ErrorWithDetails(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/grpc.gateway.examples.internal.examplepb.ABitOfEverythingService/ErrorWithDetails", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aBitOfEverythingServiceClient) GetMessageWithBody(ctx context.Context, in *MessageWithBody, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/grpc.gateway.examples.internal.examplepb.ABitOfEverythingService/GetMessageWithBody", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aBitOfEverythingServiceClient) PostWithEmptyBody(ctx context.Context, in *Body, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/grpc.gateway.examples.internal.examplepb.ABitOfEverythingService/PostWithEmptyBody", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aBitOfEverythingServiceClient) CheckGetQueryParams(ctx context.Context, in *ABitOfEverything, opts ...grpc.CallOption) (*ABitOfEverything, error) {
	out := new(ABitOfEverything)
	err := c.cc.Invoke(ctx, "/grpc.gateway.examples.internal.examplepb.ABitOfEverythingService/CheckGetQueryParams", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aBitOfEverythingServiceClient) CheckNestedEnumGetQueryParams(ctx context.Context, in *ABitOfEverything, opts ...grpc.CallOption) (*ABitOfEverything, error) {
	out := new(ABitOfEverything)
	err := c.cc.Invoke(ctx, "/grpc.gateway.examples.internal.examplepb.ABitOfEverythingService/CheckNestedEnumGetQueryParams", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aBitOfEverythingServiceClient) CheckPostQueryParams(ctx context.Context, in *ABitOfEverything, opts ...grpc.CallOption) (*ABitOfEverything, error) {
	out := new(ABitOfEverything)
	err := c.cc.Invoke(ctx, "/grpc.gateway.examples.internal.examplepb.ABitOfEverythingService/CheckPostQueryParams", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aBitOfEverythingServiceClient) OverwriteResponseContentType(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*wrappers.StringValue, error) {
	out := new(wrappers.StringValue)
	err := c.cc.Invoke(ctx, "/grpc.gateway.examples.internal.examplepb.ABitOfEverythingService/OverwriteResponseContentType", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aBitOfEverythingServiceClient) CheckExternalPathEnum(ctx context.Context, in *pathenum.MessageWithPathEnum, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/grpc.gateway.examples.internal.examplepb.ABitOfEverythingService/CheckExternalPathEnum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aBitOfEverythingServiceClient) CheckExternalNestedPathEnum(ctx context.Context, in *pathenum.MessageWithNestedPathEnum, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/grpc.gateway.examples.internal.examplepb.ABitOfEverythingService/CheckExternalNestedPathEnum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ABitOfEverythingServiceServer is the server API for ABitOfEverythingService service.
type ABitOfEverythingServiceServer interface {
	// Create a new ABitOfEverything
	//
	// This API creates a new ABitOfEverything
	Create(context.Context, *ABitOfEverything) (*ABitOfEverything, error)
	CreateBody(context.Context, *ABitOfEverything) (*ABitOfEverything, error)
	// Create a book.
	CreateBook(context.Context, *CreateBookRequest) (*Book, error)
	Lookup(context.Context, *sub2.IdMessage) (*ABitOfEverything, error)
	Update(context.Context, *ABitOfEverything) (*empty.Empty, error)
	UpdateV2(context.Context, *UpdateV2Request) (*empty.Empty, error)
	Delete(context.Context, *sub2.IdMessage) (*empty.Empty, error)
	GetQuery(context.Context, *ABitOfEverything) (*empty.Empty, error)
	GetRepeatedQuery(context.Context, *ABitOfEverythingRepeated) (*ABitOfEverythingRepeated, error)
	// Echo allows posting a StringMessage value.
	//
	// It also exposes multiple bindings.
	//
	// This makes it useful when validating that the OpenAPI v2 API
	// description exposes documentation correctly on all paths
	// defined as additional_bindings in the proto.
	Echo(context.Context, *sub.StringMessage) (*sub.StringMessage, error)
	DeepPathEcho(context.Context, *ABitOfEverything) (*ABitOfEverything, error)
	NoBindings(context.Context, *duration.Duration) (*empty.Empty, error)
	Timeout(context.Context, *empty.Empty) (*empty.Empty, error)
	ErrorWithDetails(context.Context, *empty.Empty) (*empty.Empty, error)
	GetMessageWithBody(context.Context, *MessageWithBody) (*empty.Empty, error)
	PostWithEmptyBody(context.Context, *Body) (*empty.Empty, error)
	CheckGetQueryParams(context.Context, *ABitOfEverything) (*ABitOfEverything, error)
	CheckNestedEnumGetQueryParams(context.Context, *ABitOfEverything) (*ABitOfEverything, error)
	CheckPostQueryParams(context.Context, *ABitOfEverything) (*ABitOfEverything, error)
	OverwriteResponseContentType(context.Context, *empty.Empty) (*wrappers.StringValue, error)
	CheckExternalPathEnum(context.Context, *pathenum.MessageWithPathEnum) (*empty.Empty, error)
	CheckExternalNestedPathEnum(context.Context, *pathenum.MessageWithNestedPathEnum) (*empty.Empty, error)
}

// UnimplementedABitOfEverythingServiceServer can be embedded to have forward compatible implementations.
type UnimplementedABitOfEverythingServiceServer struct {
}

func (*UnimplementedABitOfEverythingServiceServer) Create(ctx context.Context, req *ABitOfEverything) (*ABitOfEverything, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedABitOfEverythingServiceServer) CreateBody(ctx context.Context, req *ABitOfEverything) (*ABitOfEverything, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateBody not implemented")
}
func (*UnimplementedABitOfEverythingServiceServer) CreateBook(ctx context.Context, req *CreateBookRequest) (*Book, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateBook not implemented")
}
func (*UnimplementedABitOfEverythingServiceServer) Lookup(ctx context.Context, req *sub2.IdMessage) (*ABitOfEverything, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lookup not implemented")
}
func (*UnimplementedABitOfEverythingServiceServer) Update(ctx context.Context, req *ABitOfEverything) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedABitOfEverythingServiceServer) UpdateV2(ctx context.Context, req *UpdateV2Request) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateV2 not implemented")
}
func (*UnimplementedABitOfEverythingServiceServer) Delete(ctx context.Context, req *sub2.IdMessage) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedABitOfEverythingServiceServer) GetQuery(ctx context.Context, req *ABitOfEverything) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetQuery not implemented")
}
func (*UnimplementedABitOfEverythingServiceServer) GetRepeatedQuery(ctx context.Context, req *ABitOfEverythingRepeated) (*ABitOfEverythingRepeated, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRepeatedQuery not implemented")
}
func (*UnimplementedABitOfEverythingServiceServer) Echo(ctx context.Context, req *sub.StringMessage) (*sub.StringMessage, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Echo not implemented")
}
func (*UnimplementedABitOfEverythingServiceServer) DeepPathEcho(ctx context.Context, req *ABitOfEverything) (*ABitOfEverything, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeepPathEcho not implemented")
}
func (*UnimplementedABitOfEverythingServiceServer) NoBindings(ctx context.Context, req *duration.Duration) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NoBindings not implemented")
}
func (*UnimplementedABitOfEverythingServiceServer) Timeout(ctx context.Context, req *empty.Empty) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Timeout not implemented")
}
func (*UnimplementedABitOfEverythingServiceServer) ErrorWithDetails(ctx context.Context, req *empty.Empty) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ErrorWithDetails not implemented")
}
func (*UnimplementedABitOfEverythingServiceServer) GetMessageWithBody(ctx context.Context, req *MessageWithBody) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMessageWithBody not implemented")
}
func (*UnimplementedABitOfEverythingServiceServer) PostWithEmptyBody(ctx context.Context, req *Body) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PostWithEmptyBody not implemented")
}
func (*UnimplementedABitOfEverythingServiceServer) CheckGetQueryParams(ctx context.Context, req *ABitOfEverything) (*ABitOfEverything, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckGetQueryParams not implemented")
}
func (*UnimplementedABitOfEverythingServiceServer) CheckNestedEnumGetQueryParams(ctx context.Context, req *ABitOfEverything) (*ABitOfEverything, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckNestedEnumGetQueryParams not implemented")
}
func (*UnimplementedABitOfEverythingServiceServer) CheckPostQueryParams(ctx context.Context, req *ABitOfEverything) (*ABitOfEverything, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckPostQueryParams not implemented")
}
func (*UnimplementedABitOfEverythingServiceServer) OverwriteResponseContentType(ctx context.Context, req *empty.Empty) (*wrappers.StringValue, error) {
	return nil, status.Errorf(codes.Unimplemented, "method OverwriteResponseContentType not implemented")
}
func (*UnimplementedABitOfEverythingServiceServer) CheckExternalPathEnum(ctx context.Context, req *pathenum.MessageWithPathEnum) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckExternalPathEnum not implemented")
}
func (*UnimplementedABitOfEverythingServiceServer) CheckExternalNestedPathEnum(ctx context.Context, req *pathenum.MessageWithNestedPathEnum) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckExternalNestedPathEnum not implemented")
}

func RegisterABitOfEverythingServiceServer(s *grpc.Server, srv ABitOfEverythingServiceServer) {
	s.RegisterService(&_ABitOfEverythingService_serviceDesc, srv)
}

func _ABitOfEverythingService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ABitOfEverything)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ABitOfEverythingServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.gateway.examples.internal.examplepb.ABitOfEverythingService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ABitOfEverythingServiceServer).Create(ctx, req.(*ABitOfEverything))
	}
	return interceptor(ctx, in, info, handler)
}

func _ABitOfEverythingService_CreateBody_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ABitOfEverything)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ABitOfEverythingServiceServer).CreateBody(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.gateway.examples.internal.examplepb.ABitOfEverythingService/CreateBody",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ABitOfEverythingServiceServer).CreateBody(ctx, req.(*ABitOfEverything))
	}
	return interceptor(ctx, in, info, handler)
}

func _ABitOfEverythingService_CreateBook_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateBookRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ABitOfEverythingServiceServer).CreateBook(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.gateway.examples.internal.examplepb.ABitOfEverythingService/CreateBook",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ABitOfEverythingServiceServer).CreateBook(ctx, req.(*CreateBookRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ABitOfEverythingService_Lookup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(sub2.IdMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ABitOfEverythingServiceServer).Lookup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.gateway.examples.internal.examplepb.ABitOfEverythingService/Lookup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ABitOfEverythingServiceServer).Lookup(ctx, req.(*sub2.IdMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _ABitOfEverythingService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ABitOfEverything)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ABitOfEverythingServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.gateway.examples.internal.examplepb.ABitOfEverythingService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ABitOfEverythingServiceServer).Update(ctx, req.(*ABitOfEverything))
	}
	return interceptor(ctx, in, info, handler)
}

func _ABitOfEverythingService_UpdateV2_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateV2Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ABitOfEverythingServiceServer).UpdateV2(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.gateway.examples.internal.examplepb.ABitOfEverythingService/UpdateV2",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ABitOfEverythingServiceServer).UpdateV2(ctx, req.(*UpdateV2Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _ABitOfEverythingService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(sub2.IdMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ABitOfEverythingServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.gateway.examples.internal.examplepb.ABitOfEverythingService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ABitOfEverythingServiceServer).Delete(ctx, req.(*sub2.IdMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _ABitOfEverythingService_GetQuery_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ABitOfEverything)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ABitOfEverythingServiceServer).GetQuery(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.gateway.examples.internal.examplepb.ABitOfEverythingService/GetQuery",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ABitOfEverythingServiceServer).GetQuery(ctx, req.(*ABitOfEverything))
	}
	return interceptor(ctx, in, info, handler)
}

func _ABitOfEverythingService_GetRepeatedQuery_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ABitOfEverythingRepeated)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ABitOfEverythingServiceServer).GetRepeatedQuery(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.gateway.examples.internal.examplepb.ABitOfEverythingService/GetRepeatedQuery",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ABitOfEverythingServiceServer).GetRepeatedQuery(ctx, req.(*ABitOfEverythingRepeated))
	}
	return interceptor(ctx, in, info, handler)
}

func _ABitOfEverythingService_Echo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(sub.StringMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ABitOfEverythingServiceServer).Echo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.gateway.examples.internal.examplepb.ABitOfEverythingService/Echo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ABitOfEverythingServiceServer).Echo(ctx, req.(*sub.StringMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _ABitOfEverythingService_DeepPathEcho_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ABitOfEverything)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ABitOfEverythingServiceServer).DeepPathEcho(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.gateway.examples.internal.examplepb.ABitOfEverythingService/DeepPathEcho",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ABitOfEverythingServiceServer).DeepPathEcho(ctx, req.(*ABitOfEverything))
	}
	return interceptor(ctx, in, info, handler)
}

func _ABitOfEverythingService_NoBindings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(duration.Duration)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ABitOfEverythingServiceServer).NoBindings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.gateway.examples.internal.examplepb.ABitOfEverythingService/NoBindings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ABitOfEverythingServiceServer).NoBindings(ctx, req.(*duration.Duration))
	}
	return interceptor(ctx, in, info, handler)
}

func _ABitOfEverythingService_Timeout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ABitOfEverythingServiceServer).Timeout(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.gateway.examples.internal.examplepb.ABitOfEverythingService/Timeout",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ABitOfEverythingServiceServer).Timeout(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ABitOfEverythingService_ErrorWithDetails_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ABitOfEverythingServiceServer).ErrorWithDetails(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.gateway.examples.internal.examplepb.ABitOfEverythingService/ErrorWithDetails",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ABitOfEverythingServiceServer).ErrorWithDetails(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ABitOfEverythingService_GetMessageWithBody_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MessageWithBody)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ABitOfEverythingServiceServer).GetMessageWithBody(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.gateway.examples.internal.examplepb.ABitOfEverythingService/GetMessageWithBody",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ABitOfEverythingServiceServer).GetMessageWithBody(ctx, req.(*MessageWithBody))
	}
	return interceptor(ctx, in, info, handler)
}

func _ABitOfEverythingService_PostWithEmptyBody_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Body)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ABitOfEverythingServiceServer).PostWithEmptyBody(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.gateway.examples.internal.examplepb.ABitOfEverythingService/PostWithEmptyBody",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ABitOfEverythingServiceServer).PostWithEmptyBody(ctx, req.(*Body))
	}
	return interceptor(ctx, in, info, handler)
}

func _ABitOfEverythingService_CheckGetQueryParams_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ABitOfEverything)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ABitOfEverythingServiceServer).CheckGetQueryParams(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.gateway.examples.internal.examplepb.ABitOfEverythingService/CheckGetQueryParams",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ABitOfEverythingServiceServer).CheckGetQueryParams(ctx, req.(*ABitOfEverything))
	}
	return interceptor(ctx, in, info, handler)
}

func _ABitOfEverythingService_CheckNestedEnumGetQueryParams_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ABitOfEverything)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ABitOfEverythingServiceServer).CheckNestedEnumGetQueryParams(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.gateway.examples.internal.examplepb.ABitOfEverythingService/CheckNestedEnumGetQueryParams",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ABitOfEverythingServiceServer).CheckNestedEnumGetQueryParams(ctx, req.(*ABitOfEverything))
	}
	return interceptor(ctx, in, info, handler)
}

func _ABitOfEverythingService_CheckPostQueryParams_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ABitOfEverything)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ABitOfEverythingServiceServer).CheckPostQueryParams(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.gateway.examples.internal.examplepb.ABitOfEverythingService/CheckPostQueryParams",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ABitOfEverythingServiceServer).CheckPostQueryParams(ctx, req.(*ABitOfEverything))
	}
	return interceptor(ctx, in, info, handler)
}

func _ABitOfEverythingService_OverwriteResponseContentType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ABitOfEverythingServiceServer).OverwriteResponseContentType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.gateway.examples.internal.examplepb.ABitOfEverythingService/OverwriteResponseContentType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ABitOfEverythingServiceServer).OverwriteResponseContentType(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ABitOfEverythingService_CheckExternalPathEnum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(pathenum.MessageWithPathEnum)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ABitOfEverythingServiceServer).CheckExternalPathEnum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.gateway.examples.internal.examplepb.ABitOfEverythingService/CheckExternalPathEnum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ABitOfEverythingServiceServer).CheckExternalPathEnum(ctx, req.(*pathenum.MessageWithPathEnum))
	}
	return interceptor(ctx, in, info, handler)
}

func _ABitOfEverythingService_CheckExternalNestedPathEnum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(pathenum.MessageWithNestedPathEnum)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ABitOfEverythingServiceServer).CheckExternalNestedPathEnum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.gateway.examples.internal.examplepb.ABitOfEverythingService/CheckExternalNestedPathEnum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ABitOfEverythingServiceServer).CheckExternalNestedPathEnum(ctx, req.(*pathenum.MessageWithNestedPathEnum))
	}
	return interceptor(ctx, in, info, handler)
}

var _ABitOfEverythingService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc.gateway.examples.internal.examplepb.ABitOfEverythingService",
	HandlerType: (*ABitOfEverythingServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _ABitOfEverythingService_Create_Handler,
		},
		{
			MethodName: "CreateBody",
			Handler:    _ABitOfEverythingService_CreateBody_Handler,
		},
		{
			MethodName: "CreateBook",
			Handler:    _ABitOfEverythingService_CreateBook_Handler,
		},
		{
			MethodName: "Lookup",
			Handler:    _ABitOfEverythingService_Lookup_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _ABitOfEverythingService_Update_Handler,
		},
		{
			MethodName: "UpdateV2",
			Handler:    _ABitOfEverythingService_UpdateV2_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _ABitOfEverythingService_Delete_Handler,
		},
		{
			MethodName: "GetQuery",
			Handler:    _ABitOfEverythingService_GetQuery_Handler,
		},
		{
			MethodName: "GetRepeatedQuery",
			Handler:    _ABitOfEverythingService_GetRepeatedQuery_Handler,
		},
		{
			MethodName: "Echo",
			Handler:    _ABitOfEverythingService_Echo_Handler,
		},
		{
			MethodName: "DeepPathEcho",
			Handler:    _ABitOfEverythingService_DeepPathEcho_Handler,
		},
		{
			MethodName: "NoBindings",
			Handler:    _ABitOfEverythingService_NoBindings_Handler,
		},
		{
			MethodName: "Timeout",
			Handler:    _ABitOfEverythingService_Timeout_Handler,
		},
		{
			MethodName: "ErrorWithDetails",
			Handler:    _ABitOfEverythingService_ErrorWithDetails_Handler,
		},
		{
			MethodName: "GetMessageWithBody",
			Handler:    _ABitOfEverythingService_GetMessageWithBody_Handler,
		},
		{
			MethodName: "PostWithEmptyBody",
			Handler:    _ABitOfEverythingService_PostWithEmptyBody_Handler,
		},
		{
			MethodName: "CheckGetQueryParams",
			Handler:    _ABitOfEverythingService_CheckGetQueryParams_Handler,
		},
		{
			MethodName: "CheckNestedEnumGetQueryParams",
			Handler:    _ABitOfEverythingService_CheckNestedEnumGetQueryParams_Handler,
		},
		{
			MethodName: "CheckPostQueryParams",
			Handler:    _ABitOfEverythingService_CheckPostQueryParams_Handler,
		},
		{
			MethodName: "OverwriteResponseContentType",
			Handler:    _ABitOfEverythingService_OverwriteResponseContentType_Handler,
		},
		{
			MethodName: "CheckExternalPathEnum",
			Handler:    _ABitOfEverythingService_CheckExternalPathEnum_Handler,
		},
		{
			MethodName: "CheckExternalNestedPathEnum",
			Handler:    _ABitOfEverythingService_CheckExternalNestedPathEnum_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "examples/internal/proto/examplepb/a_bit_of_everything.proto",
}

// CamelCaseServiceNameClient is the client API for CamelCaseServiceName service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CamelCaseServiceNameClient interface {
	Empty(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error)
}

type camelCaseServiceNameClient struct {
	cc grpc.ClientConnInterface
}

func NewCamelCaseServiceNameClient(cc grpc.ClientConnInterface) CamelCaseServiceNameClient {
	return &camelCaseServiceNameClient{cc}
}

func (c *camelCaseServiceNameClient) Empty(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/grpc.gateway.examples.internal.examplepb.camelCaseServiceName/Empty", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CamelCaseServiceNameServer is the server API for CamelCaseServiceName service.
type CamelCaseServiceNameServer interface {
	Empty(context.Context, *empty.Empty) (*empty.Empty, error)
}

// UnimplementedCamelCaseServiceNameServer can be embedded to have forward compatible implementations.
type UnimplementedCamelCaseServiceNameServer struct {
}

func (*UnimplementedCamelCaseServiceNameServer) Empty(ctx context.Context, req *empty.Empty) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Empty not implemented")
}

func RegisterCamelCaseServiceNameServer(s *grpc.Server, srv CamelCaseServiceNameServer) {
	s.RegisterService(&_CamelCaseServiceName_serviceDesc, srv)
}

func _CamelCaseServiceName_Empty_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CamelCaseServiceNameServer).Empty(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.gateway.examples.internal.examplepb.camelCaseServiceName/Empty",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CamelCaseServiceNameServer).Empty(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _CamelCaseServiceName_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc.gateway.examples.internal.examplepb.camelCaseServiceName",
	HandlerType: (*CamelCaseServiceNameServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Empty",
			Handler:    _CamelCaseServiceName_Empty_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "examples/internal/proto/examplepb/a_bit_of_everything.proto",
}

// AnotherServiceWithNoBindingsClient is the client API for AnotherServiceWithNoBindings service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AnotherServiceWithNoBindingsClient interface {
	NoBindings(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error)
}

type anotherServiceWithNoBindingsClient struct {
	cc grpc.ClientConnInterface
}

func NewAnotherServiceWithNoBindingsClient(cc grpc.ClientConnInterface) AnotherServiceWithNoBindingsClient {
	return &anotherServiceWithNoBindingsClient{cc}
}

func (c *anotherServiceWithNoBindingsClient) NoBindings(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/grpc.gateway.examples.internal.examplepb.AnotherServiceWithNoBindings/NoBindings", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AnotherServiceWithNoBindingsServer is the server API for AnotherServiceWithNoBindings service.
type AnotherServiceWithNoBindingsServer interface {
	NoBindings(context.Context, *empty.Empty) (*empty.Empty, error)
}

// UnimplementedAnotherServiceWithNoBindingsServer can be embedded to have forward compatible implementations.
type UnimplementedAnotherServiceWithNoBindingsServer struct {
}

func (*UnimplementedAnotherServiceWithNoBindingsServer) NoBindings(ctx context.Context, req *empty.Empty) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NoBindings not implemented")
}

func RegisterAnotherServiceWithNoBindingsServer(s *grpc.Server, srv AnotherServiceWithNoBindingsServer) {
	s.RegisterService(&_AnotherServiceWithNoBindings_serviceDesc, srv)
}

func _AnotherServiceWithNoBindings_NoBindings_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnotherServiceWithNoBindingsServer).NoBindings(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.gateway.examples.internal.examplepb.AnotherServiceWithNoBindings/NoBindings",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnotherServiceWithNoBindingsServer).NoBindings(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _AnotherServiceWithNoBindings_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc.gateway.examples.internal.examplepb.AnotherServiceWithNoBindings",
	HandlerType: (*AnotherServiceWithNoBindingsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "NoBindings",
			Handler:    _AnotherServiceWithNoBindings_NoBindings_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "examples/internal/proto/examplepb/a_bit_of_everything.proto",
}
