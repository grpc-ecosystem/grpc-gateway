{
  "components": {
    "requestBodies": {
      ".grpc.gateway.examples.internal.proto.examplepb.ABitOfEverything": {
        "content": {
          "application/json": {
            "schema": {}
          }
        }
      },
      ".grpc.gateway.examples.internal.proto.examplepb.Body": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object"
            }
          }
        }
      },
      ".grpc.gateway.examples.internal.proto.examplepb.CreateBookRequest": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "book": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.Book"
                },
                "book_id": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        }
      },
      ".grpc.gateway.examples.internal.proto.examplepb.MessageWithBody": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "data": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.Body"
                }
              },
              "type": "object"
            }
          }
        }
      },
      ".grpc.gateway.examples.internal.proto.examplepb.NestedProto": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "a": {
                  "properties": {
                    "str": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "b": {
                  "type": "string"
                },
                "c": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        }
      },
      ".grpc.gateway.examples.internal.proto.examplepb.NonEmptyProto": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "b": {
                  "type": "string"
                },
                "c": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        }
      },
      ".grpc.gateway.examples.internal.proto.examplepb.SimpleMessage": {
        "content": {
          "application/json": {
            "schema": {
              "oneOf": [
                {
                  "properties": {
                    "en": {
                      "format": "int64",
                      "type": "string"
                    },
                    "line_num": {
                      "format": "int64",
                      "type": "string"
                    },
                    "n_id": {
                      "properties": {
                        "n_id": {
                          "type": "string"
                        },
                        "val": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "num": {
                      "format": "int64",
                      "type": "string"
                    },
                    "resource_id": {
                      "type": "string"
                    },
                    "status": {
                      "oneOf": [
                        {
                          "properties": {
                            "progress": {
                              "format": "int64",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "properties": {
                            "note": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                {
                  "properties": {
                    "en": {
                      "format": "int64",
                      "type": "string"
                    },
                    "lang": {
                      "type": "string"
                    },
                    "n_id": {
                      "properties": {
                        "n_id": {
                          "type": "string"
                        },
                        "val": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "num": {
                      "format": "int64",
                      "type": "string"
                    },
                    "resource_id": {
                      "type": "string"
                    },
                    "status": {
                      "oneOf": [
                        {
                          "properties": {
                            "progress": {
                              "format": "int64",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "properties": {
                            "note": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                {
                  "properties": {
                    "line_num": {
                      "format": "int64",
                      "type": "string"
                    },
                    "n_id": {
                      "properties": {
                        "n_id": {
                          "type": "string"
                        },
                        "val": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "no": {
                      "oneOf": [
                        {
                          "properties": {
                            "progress": {
                              "format": "int64",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "properties": {
                            "note": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      ]
                    },
                    "num": {
                      "format": "int64",
                      "type": "string"
                    },
                    "resource_id": {
                      "type": "string"
                    },
                    "status": {
                      "oneOf": [
                        {
                          "properties": {
                            "progress": {
                              "format": "int64",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "properties": {
                            "note": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                {
                  "properties": {
                    "lang": {
                      "type": "string"
                    },
                    "n_id": {
                      "properties": {
                        "n_id": {
                          "type": "string"
                        },
                        "val": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "no": {
                      "oneOf": [
                        {
                          "properties": {
                            "progress": {
                              "format": "int64",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "properties": {
                            "note": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      ]
                    },
                    "num": {
                      "format": "int64",
                      "type": "string"
                    },
                    "resource_id": {
                      "type": "string"
                    },
                    "status": {
                      "oneOf": [
                        {
                          "properties": {
                            "progress": {
                              "format": "int64",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "properties": {
                            "note": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              ]
            }
          }
        }
      },
      ".grpc.gateway.examples.internal.proto.examplepb.SingleNestedProto": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "a": {
                  "properties": {
                    "str": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        }
      },
      ".grpc.gateway.examples.internal.proto.examplepb.UpdateBookRequest": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "allow_missing": {
                  "type": "boolean"
                },
                "book": {
                  "properties": {
                    "create_time": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "update_mask": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        }
      },
      ".grpc.gateway.examples.internal.proto.examplepb.UpdateV2Request": {
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "abe": {},
                "update_mask": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        }
      },
      ".grpc.gateway.examples.internal.proto.examplepb.VisibilityRuleSimpleMessage": {
        "content": {
          "application/json": {
            "schema": {
              "oneOf": [
                {
                  "properties": {
                    "ahidden_default_enum": {
                      "enum": [
                        "VISIBILITY_ENUM_HIDDEN_DEFAULT_UNSPECIFIED",
                        "VISIBILITY_ENUM_HIDDEN_DEFAULT_VISIBLE"
                      ],
                      "type": "string"
                    },
                    "an_enum": {
                      "enum": [
                        "VISIBILITY_ENUM_UNSPECIFIED",
                        "VISIBILITY_ENUM_VISIBLE",
                        "VISIBILITY_ENUM_INTERNAL",
                        "VISIBILITY_ENUM_PREVIEW"
                      ],
                      "type": "string"
                    },
                    "en": {
                      "format": "int64",
                      "type": "string"
                    },
                    "internal_field": {
                      "type": "string"
                    },
                    "line_num": {
                      "format": "int64",
                      "type": "string"
                    },
                    "num": {
                      "format": "int64",
                      "type": "string"
                    },
                    "preview_field": {
                      "type": "string"
                    },
                    "status": {
                      "oneOf": [
                        {
                          "properties": {
                            "progress": {
                              "format": "int64",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "properties": {
                            "note": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "properties": {
                            "internal_field": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "properties": {
                            "preview_field": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                {
                  "properties": {
                    "ahidden_default_enum": {
                      "enum": [
                        "VISIBILITY_ENUM_HIDDEN_DEFAULT_UNSPECIFIED",
                        "VISIBILITY_ENUM_HIDDEN_DEFAULT_VISIBLE"
                      ],
                      "type": "string"
                    },
                    "an_enum": {
                      "enum": [
                        "VISIBILITY_ENUM_UNSPECIFIED",
                        "VISIBILITY_ENUM_VISIBLE",
                        "VISIBILITY_ENUM_INTERNAL",
                        "VISIBILITY_ENUM_PREVIEW"
                      ],
                      "type": "string"
                    },
                    "en": {
                      "format": "int64",
                      "type": "string"
                    },
                    "internal_field": {
                      "type": "string"
                    },
                    "lang": {
                      "type": "string"
                    },
                    "num": {
                      "format": "int64",
                      "type": "string"
                    },
                    "preview_field": {
                      "type": "string"
                    },
                    "status": {
                      "oneOf": [
                        {
                          "properties": {
                            "progress": {
                              "format": "int64",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "properties": {
                            "note": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "properties": {
                            "internal_field": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "properties": {
                            "preview_field": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                {
                  "properties": {
                    "ahidden_default_enum": {
                      "enum": [
                        "VISIBILITY_ENUM_HIDDEN_DEFAULT_UNSPECIFIED",
                        "VISIBILITY_ENUM_HIDDEN_DEFAULT_VISIBLE"
                      ],
                      "type": "string"
                    },
                    "an_enum": {
                      "enum": [
                        "VISIBILITY_ENUM_UNSPECIFIED",
                        "VISIBILITY_ENUM_VISIBLE",
                        "VISIBILITY_ENUM_INTERNAL",
                        "VISIBILITY_ENUM_PREVIEW"
                      ],
                      "type": "string"
                    },
                    "internal_field": {
                      "type": "string"
                    },
                    "line_num": {
                      "format": "int64",
                      "type": "string"
                    },
                    "no": {
                      "oneOf": [
                        {
                          "properties": {
                            "progress": {
                              "format": "int64",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "properties": {
                            "note": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "properties": {
                            "internal_field": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "properties": {
                            "preview_field": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      ]
                    },
                    "num": {
                      "format": "int64",
                      "type": "string"
                    },
                    "preview_field": {
                      "type": "string"
                    },
                    "status": {
                      "oneOf": [
                        {
                          "properties": {
                            "progress": {
                              "format": "int64",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "properties": {
                            "note": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "properties": {
                            "internal_field": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "properties": {
                            "preview_field": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                },
                {
                  "properties": {
                    "ahidden_default_enum": {
                      "enum": [
                        "VISIBILITY_ENUM_HIDDEN_DEFAULT_UNSPECIFIED",
                        "VISIBILITY_ENUM_HIDDEN_DEFAULT_VISIBLE"
                      ],
                      "type": "string"
                    },
                    "an_enum": {
                      "enum": [
                        "VISIBILITY_ENUM_UNSPECIFIED",
                        "VISIBILITY_ENUM_VISIBLE",
                        "VISIBILITY_ENUM_INTERNAL",
                        "VISIBILITY_ENUM_PREVIEW"
                      ],
                      "type": "string"
                    },
                    "internal_field": {
                      "type": "string"
                    },
                    "lang": {
                      "type": "string"
                    },
                    "no": {
                      "oneOf": [
                        {
                          "properties": {
                            "progress": {
                              "format": "int64",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "properties": {
                            "note": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "properties": {
                            "internal_field": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "properties": {
                            "preview_field": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      ]
                    },
                    "num": {
                      "format": "int64",
                      "type": "string"
                    },
                    "preview_field": {
                      "type": "string"
                    },
                    "status": {
                      "oneOf": [
                        {
                          "properties": {
                            "progress": {
                              "format": "int64",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "properties": {
                            "note": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "properties": {
                            "internal_field": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        {
                          "properties": {
                            "preview_field": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      ]
                    }
                  },
                  "type": "object"
                }
              ]
            }
          }
        }
      }
    },
    "schemas": {
      ".google.api.HttpBody": {
        "properties": {
          "content_type": {
            "type": "string"
          },
          "data": {
            "format": "byte",
            "type": "string"
          },
          "extensions": {
            "items": {
              "properties": {
                "type_url": {
                  "type": "string"
                },
                "value": {
                  "format": "byte",
                  "type": "string"
                }
              },
              "type": "object"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      ".google.protobuf.Any": {
        "properties": {
          "type_url": {
            "type": "string"
          },
          "value": {
            "format": "byte",
            "type": "string"
          }
        },
        "type": "object"
      },
      ".google.protobuf.BoolValue": {
        "type": "boolean"
      },
      ".google.protobuf.BytesValue": {
        "format": "byte",
        "type": "string"
      },
      ".google.protobuf.DoubleValue": {
        "format": "double",
        "type": "number"
      },
      ".google.protobuf.Duration": {
        "type": "string"
      },
      ".google.protobuf.Empty": {
        "type": "object"
      },
      ".google.protobuf.FieldMask": {
        "type": "string"
      },
      ".google.protobuf.FloatValue": {
        "format": "float",
        "type": "number"
      },
      ".google.protobuf.Int32Value": {
        "format": "int32",
        "type": "integer"
      },
      ".google.protobuf.Int64Value": {
        "format": "int64",
        "type": "string"
      },
      ".google.protobuf.StringValue": {
        "type": "string"
      },
      ".google.protobuf.Struct": {
        "type": "object"
      },
      ".google.protobuf.Timestamp": {
        "format": "date-time",
        "type": "string"
      },
      ".google.protobuf.UInt32Value": {
        "format": "int64",
        "type": "integer"
      },
      ".google.protobuf.UInt64Value": {
        "format": "uint64",
        "type": "string"
      },
      ".google.protobuf.Value": {},
      ".google.rpc.Status": {
        "properties": {
          "code": {
            "format": "int32",
            "type": "integer"
          },
          "details": {
            "items": {
              "$ref": "#/components/schemas/.google.protobuf.Any"
            },
            "type": "array"
          },
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      ".grpc.gateway.examples.internal.examplepb.InMessageA": {
        "properties": {
          "values": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      ".grpc.gateway.examples.internal.examplepb.InMessageB": {
        "properties": {
          "value": {
            "type": "string"
          }
        },
        "type": "object"
      },
      ".grpc.gateway.examples.internal.examplepb.OutMessageA": {
        "properties": {
          "value": {
            "type": "string"
          }
        },
        "type": "object"
      },
      ".grpc.gateway.examples.internal.examplepb.OutMessageB": {
        "properties": {
          "values": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      ".grpc.gateway.examples.internal.examplepb.OutMessageC": {
        "properties": {
          "value": {
            "type": "string"
          }
        },
        "type": "object"
      },
      ".grpc.gateway.examples.internal.pathenum.MessagePathEnum.NestedPathEnum": {
        "enum": [
          "GHI",
          "JKL"
        ],
        "type": "string"
      },
      ".grpc.gateway.examples.internal.pathenum.PathEnum": {
        "enum": [
          "ABC",
          "DEF"
        ],
        "type": "string"
      },
      ".grpc.gateway.examples.internal.pathenum.snake_case_for_import": {
        "enum": [
          "value_x",
          "value_y"
        ],
        "type": "string"
      },
      ".grpc.gateway.examples.internal.proto.examplepb.ABitOfEverything": {},
      ".grpc.gateway.examples.internal.proto.examplepb.ABitOfEverything.MapValueEntry": {
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "enum": [
              "ZERO",
              "ONE"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      ".grpc.gateway.examples.internal.proto.examplepb.ABitOfEverything.MappedNestedValueEntry": {
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "properties": {
              "amount": {
                "format": "int32",
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "ok": {
                "enum": [
                  "FALSE",
                  "TRUE"
                ],
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      ".grpc.gateway.examples.internal.proto.examplepb.ABitOfEverything.MappedStringValueEntry": {
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        },
        "type": "object"
      },
      ".grpc.gateway.examples.internal.proto.examplepb.ABitOfEverything.Nested": {
        "properties": {
          "amount": {
            "format": "int32",
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "ok": {
            "enum": [
              "FALSE",
              "TRUE"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      ".grpc.gateway.examples.internal.proto.examplepb.ABitOfEverything.Nested.DeepEnum": {
        "enum": [
          "FALSE",
          "TRUE"
        ],
        "type": "string"
      },
      ".grpc.gateway.examples.internal.proto.examplepb.ABitOfEverythingRepeated": {
        "properties": {
          "path_repeated_bool_value": {
            "items": {
              "type": "boolean"
            },
            "type": "array"
          },
          "path_repeated_bytes_value": {
            "items": {
              "format": "byte",
              "type": "string"
            },
            "type": "array"
          },
          "path_repeated_double_value": {
            "items": {
              "format": "double",
              "type": "number"
            },
            "type": "array"
          },
          "path_repeated_enum_value": {
            "items": {
              "enum": [
                "ZERO",
                "ONE"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "path_repeated_fixed32_value": {
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "type": "array"
          },
          "path_repeated_fixed64_value": {
            "items": {
              "format": "uint64",
              "type": "string"
            },
            "type": "array"
          },
          "path_repeated_float_value": {
            "items": {
              "format": "float",
              "type": "number"
            },
            "type": "array"
          },
          "path_repeated_int32_value": {
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "type": "array"
          },
          "path_repeated_int64_value": {
            "items": {
              "format": "int64",
              "type": "string"
            },
            "type": "array"
          },
          "path_repeated_sfixed32_value": {
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "type": "array"
          },
          "path_repeated_sfixed64_value": {
            "items": {
              "format": "int64",
              "type": "string"
            },
            "type": "array"
          },
          "path_repeated_sint32_value": {
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "type": "array"
          },
          "path_repeated_sint64_value": {
            "items": {
              "format": "int64",
              "type": "string"
            },
            "type": "array"
          },
          "path_repeated_string_value": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "path_repeated_uint32_value": {
            "items": {
              "format": "int32",
              "type": "integer"
            },
            "type": "array"
          },
          "path_repeated_uint64_value": {
            "items": {
              "format": "uint64",
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      ".grpc.gateway.examples.internal.proto.examplepb.Bar": {
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "type": "object"
      },
      ".grpc.gateway.examples.internal.proto.examplepb.Body": {
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      ".grpc.gateway.examples.internal.proto.examplepb.Book": {
        "properties": {
          "create_time": {
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      ".grpc.gateway.examples.internal.proto.examplepb.CheckStatusResponse": {
        "properties": {
          "status": {
            "properties": {
              "code": {
                "format": "int32",
                "type": "integer"
              },
              "details": {
                "items": {
                  "$ref": "#/components/schemas/.google.protobuf.Any"
                },
                "type": "array"
              },
              "message": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      ".grpc.gateway.examples.internal.proto.examplepb.CreateBookRequest": {
        "properties": {
          "book": {
            "properties": {
              "create_time": {
                "format": "date-time",
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "book_id": {
            "type": "string"
          },
          "parent": {
            "type": "string"
          }
        },
        "type": "object"
      },
      ".grpc.gateway.examples.internal.proto.examplepb.DynamicMessage": {
        "properties": {
          "struct_field": {
            "$ref": "#/components/schemas/.google.protobuf.Struct"
          },
          "value_field": {
            "$ref": "#/components/schemas/.google.protobuf.Value"
          }
        },
        "type": "object"
      },
      ".grpc.gateway.examples.internal.proto.examplepb.DynamicMessageUpdate": {
        "properties": {
          "body": {
            "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.DynamicMessage"
          },
          "update_mask": {
            "type": "string"
          }
        },
        "type": "object"
      },
      ".grpc.gateway.examples.internal.proto.examplepb.Embedded": {
        "oneOf": [
          {
            "properties": {
              "progress": {
                "format": "int64",
                "type": "string"
              }
            },
            "type": "object"
          },
          {
            "properties": {
              "note": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ]
      },
      ".grpc.gateway.examples.internal.proto.examplepb.EmptyProto": {
        "type": "object"
      },
      ".grpc.gateway.examples.internal.proto.examplepb.EnumWithSingleValue": {
        "enum": [
          "ENUM_WITH_SINGLE_VALUE_UNSPECIFIED"
        ],
        "type": "string"
      },
      ".grpc.gateway.examples.internal.proto.examplepb.EnumWithSingleValueServiceEchoRequest": {
        "properties": {
          "value": {
            "enum": [
              "ENUM_WITH_SINGLE_VALUE_UNSPECIFIED"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      ".grpc.gateway.examples.internal.proto.examplepb.EnumWithSingleValueServiceEchoResponse": {
        "type": "object"
      },
      ".grpc.gateway.examples.internal.proto.examplepb.ErrorObject": {
        "properties": {
          "code": {
            "format": "int32",
            "type": "integer"
          },
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      ".grpc.gateway.examples.internal.proto.examplepb.ErrorResponse": {
        "properties": {
          "correlationId": {
            "type": "string"
          },
          "error": {
            "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.ErrorObject"
          }
        },
        "type": "object"
      },
      ".grpc.gateway.examples.internal.proto.examplepb.Foo": {
        "properties": {
          "bar": {
            "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.Bar"
          }
        },
        "type": "object"
      },
      ".grpc.gateway.examples.internal.proto.examplepb.Foo2Reply": {
        "type": "object"
      },
      ".grpc.gateway.examples.internal.proto.examplepb.Foo2Request": {
        "properties": {
          "password": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        },
        "type": "object"
      },
      ".grpc.gateway.examples.internal.proto.examplepb.FooReply": {
        "type": "object"
      },
      ".grpc.gateway.examples.internal.proto.examplepb.FooRequest": {
        "properties": {
          "password": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        },
        "type": "object"
      },
      ".grpc.gateway.examples.internal.proto.examplepb.GenerateUnboundMethodsSimpleMessage": {
        "properties": {
          "duration": {
            "$ref": "#/components/schemas/.google.protobuf.Duration"
          },
          "id": {
            "type": "string"
          },
          "num": {
            "format": "int64",
            "type": "string"
          }
        },
        "type": "object"
      },
      ".grpc.gateway.examples.internal.proto.examplepb.LoginReply": {
        "properties": {
          "access": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      ".grpc.gateway.examples.internal.proto.examplepb.LoginRequest": {
        "properties": {
          "password": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        },
        "type": "object"
      },
      ".grpc.gateway.examples.internal.proto.examplepb.LogoutReply": {
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "type": "object"
      },
      ".grpc.gateway.examples.internal.proto.examplepb.LogoutRequest": {
        "properties": {
          "stringarray": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "test": {
            "format": "int32",
            "type": "integer"
          },
          "timeoflogout": {
            "type": "string"
          }
        },
        "type": "object"
      },
      ".grpc.gateway.examples.internal.proto.examplepb.MessageWithBody": {
        "properties": {
          "data": {
            "properties": {
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "id": {
            "type": "string"
          }
        },
        "type": "object"
      },
      ".grpc.gateway.examples.internal.proto.examplepb.NestedMessage": {
        "properties": {
          "n_id": {
            "type": "string"
          },
          "val": {
            "type": "string"
          }
        },
        "type": "object"
      },
      ".grpc.gateway.examples.internal.proto.examplepb.NestedProto": {
        "properties": {
          "a": {
            "properties": {
              "str": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "b": {
            "type": "string"
          },
          "c": {
            "type": "string"
          }
        },
        "type": "object"
      },
      ".grpc.gateway.examples.internal.proto.examplepb.NonEmptyProto": {
        "properties": {
          "a": {
            "type": "string"
          },
          "b": {
            "type": "string"
          },
          "c": {
            "type": "string"
          }
        },
        "type": "object"
      },
      ".grpc.gateway.examples.internal.proto.examplepb.NonStandardMessage": {
        "properties": {
          "Num": {
            "format": "int64",
            "type": "string"
          },
          "STATUS": {
            "type": "string"
          },
          "en_GB": {
            "format": "int64",
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "langIdent": {
            "type": "string"
          },
          "line_num": {
            "format": "int64",
            "type": "string"
          },
          "no": {
            "type": "string"
          },
          "thing": {
            "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.NonStandardMessage.Thing"
          }
        },
        "type": "object"
      },
      ".grpc.gateway.examples.internal.proto.examplepb.NonStandardMessage.Thing": {
        "properties": {
          "subThing": {
            "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.NonStandardMessage.Thing.SubThing"
          }
        },
        "type": "object"
      },
      ".grpc.gateway.examples.internal.proto.examplepb.NonStandardMessage.Thing.SubThing": {
        "properties": {
          "sub_value": {
            "type": "string"
          }
        },
        "type": "object"
      },
      ".grpc.gateway.examples.internal.proto.examplepb.NonStandardMessageWithJSONNames": {
        "properties": {
          "Num": {
            "format": "int64",
            "type": "string"
          },
          "STATUS": {
            "type": "string"
          },
          "en_GB": {
            "format": "int64",
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "langIdent": {
            "type": "string"
          },
          "line_num": {
            "format": "int64",
            "type": "string"
          },
          "no": {
            "type": "string"
          },
          "thing": {
            "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.NonStandardMessageWithJSONNames.Thing"
          }
        },
        "type": "object"
      },
      ".grpc.gateway.examples.internal.proto.examplepb.NonStandardMessageWithJSONNames.Thing": {
        "properties": {
          "subThing": {
            "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.NonStandardMessageWithJSONNames.Thing.SubThing"
          }
        },
        "type": "object"
      },
      ".grpc.gateway.examples.internal.proto.examplepb.NonStandardMessageWithJSONNames.Thing.SubThing": {
        "properties": {
          "sub_value": {
            "type": "string"
          }
        },
        "type": "object"
      },
      ".grpc.gateway.examples.internal.proto.examplepb.NonStandardUpdateRequest": {
        "properties": {
          "body": {
            "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.NonStandardMessage"
          },
          "update_mask": {
            "type": "string"
          }
        },
        "type": "object"
      },
      ".grpc.gateway.examples.internal.proto.examplepb.NonStandardWithJSONNamesUpdateRequest": {
        "properties": {
          "body": {
            "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.NonStandardMessageWithJSONNames"
          },
          "update_mask": {
            "type": "string"
          }
        },
        "type": "object"
      },
      ".grpc.gateway.examples.internal.proto.examplepb.NumericEnum": {
        "enum": [
          "ZERO",
          "ONE"
        ],
        "type": "string"
      },
      ".grpc.gateway.examples.internal.proto.examplepb.Options": {
        "properties": {
          "error": {
            "type": "boolean"
          }
        },
        "type": "object"
      },
      ".grpc.gateway.examples.internal.proto.examplepb.RepeatedResponseBodyOut": {
        "properties": {
          "response": {
            "items": {
              "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.RepeatedResponseBodyOut.Response"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      ".grpc.gateway.examples.internal.proto.examplepb.RepeatedResponseBodyOut.Response": {
        "properties": {
          "data": {
            "type": "string"
          },
          "type": {
            "enum": [
              "UNKNOWN",
              "A",
              "B"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      ".grpc.gateway.examples.internal.proto.examplepb.RepeatedResponseBodyOut.Response.ResponseType": {
        "enum": [
          "UNKNOWN",
          "A",
          "B"
        ],
        "type": "string"
      },
      ".grpc.gateway.examples.internal.proto.examplepb.RepeatedResponseStrings": {
        "properties": {
          "values": {
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      ".grpc.gateway.examples.internal.proto.examplepb.RequiredMessageTypeRequest": {
        "properties": {
          "foo": {
            "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.Foo"
          },
          "id": {
            "type": "string"
          }
        },
        "type": "object"
      },
      ".grpc.gateway.examples.internal.proto.examplepb.ResponseBodyIn": {
        "properties": {
          "data": {
            "type": "string"
          }
        },
        "type": "object"
      },
      ".grpc.gateway.examples.internal.proto.examplepb.ResponseBodyOut": {
        "properties": {
          "response": {
            "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.ResponseBodyOut.Response"
          }
        },
        "type": "object"
      },
      ".grpc.gateway.examples.internal.proto.examplepb.ResponseBodyOut.Response": {
        "properties": {
          "data": {
            "type": "string"
          }
        },
        "type": "object"
      },
      ".grpc.gateway.examples.internal.proto.examplepb.ResponseBodyValue": {
        "properties": {
          "response_body_value": {
            "type": "string"
          }
        },
        "type": "object"
      },
      ".grpc.gateway.examples.internal.proto.examplepb.SimpleMessage": {
        "oneOf": [
          {
            "properties": {
              "en": {
                "format": "int64",
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "line_num": {
                "format": "int64",
                "type": "string"
              },
              "n_id": {
                "properties": {
                  "n_id": {
                    "type": "string"
                  },
                  "val": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "num": {
                "format": "int64",
                "type": "string"
              },
              "resource_id": {
                "type": "string"
              },
              "status": {
                "oneOf": [
                  {
                    "properties": {
                      "progress": {
                        "format": "int64",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  {
                    "properties": {
                      "note": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                ]
              }
            },
            "type": "object"
          },
          {
            "properties": {
              "en": {
                "format": "int64",
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "lang": {
                "type": "string"
              },
              "n_id": {
                "properties": {
                  "n_id": {
                    "type": "string"
                  },
                  "val": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "num": {
                "format": "int64",
                "type": "string"
              },
              "resource_id": {
                "type": "string"
              },
              "status": {
                "oneOf": [
                  {
                    "properties": {
                      "progress": {
                        "format": "int64",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  {
                    "properties": {
                      "note": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                ]
              }
            },
            "type": "object"
          },
          {
            "properties": {
              "id": {
                "type": "string"
              },
              "line_num": {
                "format": "int64",
                "type": "string"
              },
              "n_id": {
                "properties": {
                  "n_id": {
                    "type": "string"
                  },
                  "val": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "no": {
                "oneOf": [
                  {
                    "properties": {
                      "progress": {
                        "format": "int64",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  {
                    "properties": {
                      "note": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                ]
              },
              "num": {
                "format": "int64",
                "type": "string"
              },
              "resource_id": {
                "type": "string"
              },
              "status": {
                "oneOf": [
                  {
                    "properties": {
                      "progress": {
                        "format": "int64",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  {
                    "properties": {
                      "note": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                ]
              }
            },
            "type": "object"
          },
          {
            "properties": {
              "id": {
                "type": "string"
              },
              "lang": {
                "type": "string"
              },
              "n_id": {
                "properties": {
                  "n_id": {
                    "type": "string"
                  },
                  "val": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "no": {
                "oneOf": [
                  {
                    "properties": {
                      "progress": {
                        "format": "int64",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  {
                    "properties": {
                      "note": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                ]
              },
              "num": {
                "format": "int64",
                "type": "string"
              },
              "resource_id": {
                "type": "string"
              },
              "status": {
                "oneOf": [
                  {
                    "properties": {
                      "progress": {
                        "format": "int64",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  {
                    "properties": {
                      "note": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                ]
              }
            },
            "type": "object"
          }
        ]
      },
      ".grpc.gateway.examples.internal.proto.examplepb.SingleNestedProto": {
        "properties": {
          "a": {
            "properties": {
              "str": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      ".grpc.gateway.examples.internal.proto.examplepb.SnakeEnumRequest": {
        "properties": {
          "what": {
            "enum": [
              "value_c",
              "value_d"
            ],
            "type": "string"
          },
          "where": {
            "enum": [
              "value_x",
              "value_y"
            ],
            "type": "string"
          },
          "who": {
            "enum": [
              "value_e",
              "value_f"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      ".grpc.gateway.examples.internal.proto.examplepb.SnakeEnumResponse": {
        "type": "object"
      },
      ".grpc.gateway.examples.internal.proto.examplepb.UnannotatedEmbedded": {
        "oneOf": [
          {
            "properties": {
              "progress": {
                "format": "int64",
                "type": "string"
              }
            },
            "type": "object"
          },
          {
            "properties": {
              "note": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ]
      },
      ".grpc.gateway.examples.internal.proto.examplepb.UnannotatedNestedMessage": {
        "properties": {
          "n_id": {
            "type": "string"
          },
          "val": {
            "type": "string"
          }
        },
        "type": "object"
      },
      ".grpc.gateway.examples.internal.proto.examplepb.UnannotatedSimpleMessage": {
        "oneOf": [
          {
            "properties": {
              "duration": {
                "$ref": "#/components/schemas/.google.protobuf.Duration"
              },
              "en": {
                "format": "int64",
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "line_num": {
                "format": "int64",
                "type": "string"
              },
              "n_id": {
                "properties": {
                  "n_id": {
                    "type": "string"
                  },
                  "val": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "num": {
                "format": "int64",
                "type": "string"
              },
              "resource_id": {
                "type": "string"
              },
              "status": {
                "oneOf": [
                  {
                    "properties": {
                      "progress": {
                        "format": "int64",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  {
                    "properties": {
                      "note": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                ]
              }
            },
            "type": "object"
          },
          {
            "properties": {
              "duration": {
                "$ref": "#/components/schemas/.google.protobuf.Duration"
              },
              "en": {
                "format": "int64",
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "lang": {
                "type": "string"
              },
              "n_id": {
                "properties": {
                  "n_id": {
                    "type": "string"
                  },
                  "val": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "num": {
                "format": "int64",
                "type": "string"
              },
              "resource_id": {
                "type": "string"
              },
              "status": {
                "oneOf": [
                  {
                    "properties": {
                      "progress": {
                        "format": "int64",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  {
                    "properties": {
                      "note": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                ]
              }
            },
            "type": "object"
          },
          {
            "properties": {
              "duration": {
                "$ref": "#/components/schemas/.google.protobuf.Duration"
              },
              "id": {
                "type": "string"
              },
              "line_num": {
                "format": "int64",
                "type": "string"
              },
              "n_id": {
                "properties": {
                  "n_id": {
                    "type": "string"
                  },
                  "val": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "no": {
                "oneOf": [
                  {
                    "properties": {
                      "progress": {
                        "format": "int64",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  {
                    "properties": {
                      "note": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                ]
              },
              "num": {
                "format": "int64",
                "type": "string"
              },
              "resource_id": {
                "type": "string"
              },
              "status": {
                "oneOf": [
                  {
                    "properties": {
                      "progress": {
                        "format": "int64",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  {
                    "properties": {
                      "note": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                ]
              }
            },
            "type": "object"
          },
          {
            "properties": {
              "duration": {
                "$ref": "#/components/schemas/.google.protobuf.Duration"
              },
              "id": {
                "type": "string"
              },
              "lang": {
                "type": "string"
              },
              "n_id": {
                "properties": {
                  "n_id": {
                    "type": "string"
                  },
                  "val": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "no": {
                "oneOf": [
                  {
                    "properties": {
                      "progress": {
                        "format": "int64",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  {
                    "properties": {
                      "note": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                ]
              },
              "num": {
                "format": "int64",
                "type": "string"
              },
              "resource_id": {
                "type": "string"
              },
              "status": {
                "oneOf": [
                  {
                    "properties": {
                      "progress": {
                        "format": "int64",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  {
                    "properties": {
                      "note": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                ]
              }
            },
            "type": "object"
          }
        ]
      },
      ".grpc.gateway.examples.internal.proto.examplepb.UnaryProto": {
        "properties": {
          "str": {
            "type": "string"
          }
        },
        "type": "object"
      },
      ".grpc.gateway.examples.internal.proto.examplepb.UpdateBookRequest": {
        "properties": {
          "allow_missing": {
            "type": "boolean"
          },
          "book": {
            "properties": {
              "create_time": {
                "format": "date-time",
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "update_mask": {
            "type": "string"
          }
        },
        "type": "object"
      },
      ".grpc.gateway.examples.internal.proto.examplepb.UpdateV2Request": {
        "properties": {
          "abe": {},
          "update_mask": {
            "type": "string"
          }
        },
        "type": "object"
      },
      ".grpc.gateway.examples.internal.proto.examplepb.VisibilityRuleEmbedded": {
        "oneOf": [
          {
            "properties": {
              "progress": {
                "format": "int64",
                "type": "string"
              }
            },
            "type": "object"
          },
          {
            "properties": {
              "note": {
                "type": "string"
              }
            },
            "type": "object"
          },
          {
            "properties": {
              "internal_field": {
                "type": "string"
              }
            },
            "type": "object"
          },
          {
            "properties": {
              "preview_field": {
                "type": "string"
              }
            },
            "type": "object"
          }
        ]
      },
      ".grpc.gateway.examples.internal.proto.examplepb.VisibilityRuleEnumInPreviewMethod": {
        "enum": [
          "VISIBILITY_RULE_ENUM_IN_PREVIEW_METHOD_UNSPECIFIED"
        ],
        "type": "string"
      },
      ".grpc.gateway.examples.internal.proto.examplepb.VisibilityRuleMessageInPreviewMethod": {
        "properties": {
          "enum": {
            "enum": [
              "VISIBILITY_RULE_ENUM_IN_PREVIEW_METHOD_UNSPECIFIED"
            ],
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "sub_message": {
            "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.VisibilityRuleSubMessageInPreviewMethod"
          }
        },
        "type": "object"
      },
      ".grpc.gateway.examples.internal.proto.examplepb.VisibilityRuleSimpleMessage": {
        "oneOf": [
          {
            "properties": {
              "ahidden_default_enum": {
                "enum": [
                  "VISIBILITY_ENUM_HIDDEN_DEFAULT_UNSPECIFIED",
                  "VISIBILITY_ENUM_HIDDEN_DEFAULT_VISIBLE"
                ],
                "type": "string"
              },
              "an_enum": {
                "enum": [
                  "VISIBILITY_ENUM_UNSPECIFIED",
                  "VISIBILITY_ENUM_VISIBLE",
                  "VISIBILITY_ENUM_INTERNAL",
                  "VISIBILITY_ENUM_PREVIEW"
                ],
                "type": "string"
              },
              "en": {
                "format": "int64",
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "internal_field": {
                "type": "string"
              },
              "line_num": {
                "format": "int64",
                "type": "string"
              },
              "num": {
                "format": "int64",
                "type": "string"
              },
              "preview_field": {
                "type": "string"
              },
              "status": {
                "oneOf": [
                  {
                    "properties": {
                      "progress": {
                        "format": "int64",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  {
                    "properties": {
                      "note": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  {
                    "properties": {
                      "internal_field": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  {
                    "properties": {
                      "preview_field": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                ]
              }
            },
            "type": "object"
          },
          {
            "properties": {
              "ahidden_default_enum": {
                "enum": [
                  "VISIBILITY_ENUM_HIDDEN_DEFAULT_UNSPECIFIED",
                  "VISIBILITY_ENUM_HIDDEN_DEFAULT_VISIBLE"
                ],
                "type": "string"
              },
              "an_enum": {
                "enum": [
                  "VISIBILITY_ENUM_UNSPECIFIED",
                  "VISIBILITY_ENUM_VISIBLE",
                  "VISIBILITY_ENUM_INTERNAL",
                  "VISIBILITY_ENUM_PREVIEW"
                ],
                "type": "string"
              },
              "en": {
                "format": "int64",
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "internal_field": {
                "type": "string"
              },
              "lang": {
                "type": "string"
              },
              "num": {
                "format": "int64",
                "type": "string"
              },
              "preview_field": {
                "type": "string"
              },
              "status": {
                "oneOf": [
                  {
                    "properties": {
                      "progress": {
                        "format": "int64",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  {
                    "properties": {
                      "note": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  {
                    "properties": {
                      "internal_field": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  {
                    "properties": {
                      "preview_field": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                ]
              }
            },
            "type": "object"
          },
          {
            "properties": {
              "ahidden_default_enum": {
                "enum": [
                  "VISIBILITY_ENUM_HIDDEN_DEFAULT_UNSPECIFIED",
                  "VISIBILITY_ENUM_HIDDEN_DEFAULT_VISIBLE"
                ],
                "type": "string"
              },
              "an_enum": {
                "enum": [
                  "VISIBILITY_ENUM_UNSPECIFIED",
                  "VISIBILITY_ENUM_VISIBLE",
                  "VISIBILITY_ENUM_INTERNAL",
                  "VISIBILITY_ENUM_PREVIEW"
                ],
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "internal_field": {
                "type": "string"
              },
              "line_num": {
                "format": "int64",
                "type": "string"
              },
              "no": {
                "oneOf": [
                  {
                    "properties": {
                      "progress": {
                        "format": "int64",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  {
                    "properties": {
                      "note": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  {
                    "properties": {
                      "internal_field": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  {
                    "properties": {
                      "preview_field": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                ]
              },
              "num": {
                "format": "int64",
                "type": "string"
              },
              "preview_field": {
                "type": "string"
              },
              "status": {
                "oneOf": [
                  {
                    "properties": {
                      "progress": {
                        "format": "int64",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  {
                    "properties": {
                      "note": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  {
                    "properties": {
                      "internal_field": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  {
                    "properties": {
                      "preview_field": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                ]
              }
            },
            "type": "object"
          },
          {
            "properties": {
              "ahidden_default_enum": {
                "enum": [
                  "VISIBILITY_ENUM_HIDDEN_DEFAULT_UNSPECIFIED",
                  "VISIBILITY_ENUM_HIDDEN_DEFAULT_VISIBLE"
                ],
                "type": "string"
              },
              "an_enum": {
                "enum": [
                  "VISIBILITY_ENUM_UNSPECIFIED",
                  "VISIBILITY_ENUM_VISIBLE",
                  "VISIBILITY_ENUM_INTERNAL",
                  "VISIBILITY_ENUM_PREVIEW"
                ],
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "internal_field": {
                "type": "string"
              },
              "lang": {
                "type": "string"
              },
              "no": {
                "oneOf": [
                  {
                    "properties": {
                      "progress": {
                        "format": "int64",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  {
                    "properties": {
                      "note": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  {
                    "properties": {
                      "internal_field": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  {
                    "properties": {
                      "preview_field": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                ]
              },
              "num": {
                "format": "int64",
                "type": "string"
              },
              "preview_field": {
                "type": "string"
              },
              "status": {
                "oneOf": [
                  {
                    "properties": {
                      "progress": {
                        "format": "int64",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  {
                    "properties": {
                      "note": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  {
                    "properties": {
                      "internal_field": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  {
                    "properties": {
                      "preview_field": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                ]
              }
            },
            "type": "object"
          }
        ]
      },
      ".grpc.gateway.examples.internal.proto.examplepb.VisibilityRuleSimpleMessage.VisibilityEnum": {
        "enum": [
          "VISIBILITY_ENUM_UNSPECIFIED",
          "VISIBILITY_ENUM_VISIBLE",
          "VISIBILITY_ENUM_INTERNAL",
          "VISIBILITY_ENUM_PREVIEW"
        ],
        "type": "string"
      },
      ".grpc.gateway.examples.internal.proto.examplepb.VisibilityRuleSimpleMessage.VisibilityEnumHiddenDefault": {
        "enum": [
          "VISIBILITY_ENUM_HIDDEN_DEFAULT_UNSPECIFIED",
          "VISIBILITY_ENUM_HIDDEN_DEFAULT_VISIBLE"
        ],
        "type": "string"
      },
      ".grpc.gateway.examples.internal.proto.examplepb.VisibilityRuleSubMessageInPreviewMethod": {
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "type": "object"
      },
      ".grpc.gateway.examples.internal.proto.examplepb.Wrappers": {
        "properties": {
          "bool_value": {
            "$ref": "#/components/schemas/.google.protobuf.BoolValue"
          },
          "bytes_value": {
            "$ref": "#/components/schemas/.google.protobuf.BytesValue"
          },
          "double_value": {
            "$ref": "#/components/schemas/.google.protobuf.DoubleValue"
          },
          "float_value": {
            "$ref": "#/components/schemas/.google.protobuf.FloatValue"
          },
          "int32_value": {
            "$ref": "#/components/schemas/.google.protobuf.Int32Value"
          },
          "int64_value": {
            "$ref": "#/components/schemas/.google.protobuf.Int64Value"
          },
          "string_value": {
            "$ref": "#/components/schemas/.google.protobuf.StringValue"
          },
          "uint32_value": {
            "$ref": "#/components/schemas/.google.protobuf.UInt32Value"
          },
          "uint64_value": {
            "$ref": "#/components/schemas/.google.protobuf.UInt64Value"
          }
        },
        "type": "object"
      },
      ".grpc.gateway.examples.internal.proto.examplepb.snake_case_0_enum": {
        "enum": [
          "value_e",
          "value_f"
        ],
        "type": "string"
      },
      ".grpc.gateway.examples.internal.proto.examplepb.snake_case_enum": {
        "enum": [
          "value_c",
          "value_d"
        ],
        "type": "string"
      },
      ".grpc.gateway.examples.internal.proto.oneofenum.ExampleEnum": {
        "enum": [
          "EXAMPLE_ENUM_UNSPECIFIED",
          "EXAMPLE_ENUM_FIRST"
        ],
        "type": "string"
      },
      ".grpc.gateway.examples.internal.proto.oneofenum.OneofEnumMessage": {
        "properties": {
          "example_enum": {
            "enum": [
              "EXAMPLE_ENUM_UNSPECIFIED",
              "EXAMPLE_ENUM_FIRST"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      ".grpc.gateway.examples.internal.proto.sub.StringMessage": {
        "properties": {
          "value": {
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  },
  "info": {
    "title": "examples/internal/proto/examplepb/a_bit_of_everything.proto",
    "version": "versoin is not set"
  },
  "openapi": "3.0.2",
  "paths": {
    "/responsebodies/{data}": {
      "get": {
        "operationId": "ResponseBodyService_ListResponseBodies",
        "parameters": [
          {
            "in": "path",
            "name": "data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.RepeatedResponseBodyOut"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "ResponseBodyService"
        ]
      }
    },
    "/responsebody/samename/{data}": {
      "get": {
        "operationId": "ResponseBodyService_GetResponseBodySameName",
        "parameters": [
          {
            "in": "path",
            "name": "data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.ResponseBodyValue"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "ResponseBodyService"
        ]
      }
    },
    "/responsebody/stream/{data}": {
      "get": {
        "operationId": "ResponseBodyService_GetResponseBodyStream",
        "parameters": [
          {
            "in": "path",
            "name": "data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.ResponseBodyOut"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "ResponseBodyService"
        ]
      }
    },
    "/responsebody/{data}": {
      "get": {
        "operationId": "ResponseBodyService_GetResponseBody",
        "parameters": [
          {
            "in": "path",
            "name": "data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.ResponseBodyOut"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "ResponseBodyService"
        ]
      }
    },
    "/responsestrings/{data}": {
      "get": {
        "operationId": "ResponseBodyService_ListResponseStrings",
        "parameters": [
          {
            "in": "path",
            "name": "data",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.RepeatedResponseStrings"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "ResponseBodyService"
        ]
      }
    },
    "/rpc/body/path/{a}/query/rpc": {
      "post": {
        "operationId": "FlowCombination_RpcBodyRpc_5",
        "parameters": [
          {
            "in": "path",
            "name": "a",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "b",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/.grpc.gateway.examples.internal.proto.examplepb.NonEmptyProto"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.EmptyProto"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "FlowCombination"
        ]
      }
    },
    "/rpc/body/path/{a}/query/stream": {
      "post": {
        "operationId": "FlowCombination_RpcBodyStream_5",
        "parameters": [
          {
            "in": "path",
            "name": "a",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "b",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/.grpc.gateway.examples.internal.proto.examplepb.NonEmptyProto"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.EmptyProto"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "FlowCombination"
        ]
      }
    },
    "/rpc/body/path/{a}/{b}/rpc": {
      "post": {
        "operationId": "FlowCombination_RpcBodyRpc_3",
        "parameters": [
          {
            "in": "path",
            "name": "a",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "b",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/.grpc.gateway.examples.internal.proto.examplepb.NonEmptyProto"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.EmptyProto"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "FlowCombination"
        ]
      }
    },
    "/rpc/body/path/{a}/{b}/stream": {
      "post": {
        "operationId": "FlowCombination_RpcBodyStream_3",
        "parameters": [
          {
            "in": "path",
            "name": "a",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "b",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/.grpc.gateway.examples.internal.proto.examplepb.NonEmptyProto"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.EmptyProto"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "FlowCombination"
        ]
      }
    },
    "/rpc/body/query/rpc": {
      "post": {
        "operationId": "FlowCombination_RpcBodyRpc_4",
        "parameters": [
          {
            "in": "query",
            "name": "a",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "b",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.NonEmptyProto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.EmptyProto"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "FlowCombination"
        ]
      }
    },
    "/rpc/body/query/stream": {
      "post": {
        "operationId": "FlowCombination_RpcBodyStream_4",
        "parameters": [
          {
            "in": "query",
            "name": "a",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "b",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.NonEmptyProto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.EmptyProto"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "FlowCombination"
        ]
      }
    },
    "/rpc/body/rpc": {
      "post": {
        "operationId": "FlowCombination_RpcBodyRpc",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.NonEmptyProto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.EmptyProto"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "FlowCombination"
        ]
      }
    },
    "/rpc/body/stream": {
      "post": {
        "operationId": "FlowCombination_RpcBodyStream",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.NonEmptyProto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.EmptyProto"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "FlowCombination"
        ]
      }
    },
    "/rpc/empty/rpc": {
      "post": {
        "operationId": "FlowCombination_RpcEmptyRpc",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.EmptyProto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.EmptyProto"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "FlowCombination"
        ]
      }
    },
    "/rpc/empty/stream": {
      "post": {
        "operationId": "FlowCombination_RpcEmptyStream",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.EmptyProto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.EmptyProto"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "FlowCombination"
        ]
      }
    },
    "/rpc/excess-body/rpc": {
      "post": {
        "operationId": "ExcessBodyService_NoBodyRpc",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/.google.protobuf.Empty"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.protobuf.Empty"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "ExcessBodyService"
        ]
      }
    },
    "/rpc/excess-body/rpc/with-body": {
      "post": {
        "operationId": "ExcessBodyService_WithBodyRpc",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/.google.protobuf.Empty"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.protobuf.Empty"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "ExcessBodyService"
        ]
      }
    },
    "/rpc/excess-body/stream": {
      "post": {
        "operationId": "ExcessBodyService_NoBodyServerStream",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/.google.protobuf.Empty"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.protobuf.Empty"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "ExcessBodyService"
        ]
      }
    },
    "/rpc/excess-body/stream/with-body": {
      "post": {
        "operationId": "ExcessBodyService_WithBodyServerStream",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/.google.protobuf.Empty"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.protobuf.Empty"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "ExcessBodyService"
        ]
      }
    },
    "/rpc/path-nested/{a.str}/rpc": {
      "post": {
        "operationId": "FlowCombination_RpcPathSingleNestedRpc",
        "parameters": [
          {
            "in": "query",
            "name": "a",
            "schema": {
              "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.UnaryProto"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/.grpc.gateway.examples.internal.proto.examplepb.SingleNestedProto"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.EmptyProto"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "FlowCombination"
        ]
      }
    },
    "/rpc/path-nested/{a.str}/stream": {
      "post": {
        "operationId": "FlowCombination_RpcPathSingleNestedStream",
        "parameters": [
          {
            "in": "query",
            "name": "a",
            "schema": {
              "properties": {
                "str": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/.grpc.gateway.examples.internal.proto.examplepb.SingleNestedProto"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.EmptyProto"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "FlowCombination"
        ]
      }
    },
    "/rpc/path-nested/{a.str}/{b}/rpc": {
      "post": {
        "operationId": "FlowCombination_RpcPathNestedRpc",
        "parameters": [
          {
            "in": "query",
            "name": "a",
            "schema": {
              "properties": {
                "str": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          {
            "in": "path",
            "name": "b",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/.grpc.gateway.examples.internal.proto.examplepb.NestedProto"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.EmptyProto"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "FlowCombination"
        ]
      }
    },
    "/rpc/path-nested/{a.str}/{b}/stream": {
      "post": {
        "operationId": "FlowCombination_RpcPathNestedStream",
        "parameters": [
          {
            "in": "query",
            "name": "a",
            "schema": {
              "properties": {
                "str": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          {
            "in": "path",
            "name": "b",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/.grpc.gateway.examples.internal.proto.examplepb.NestedProto"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.EmptyProto"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "FlowCombination"
        ]
      }
    },
    "/rpc/path-nested1/{a.str}/rpc": {
      "post": {
        "operationId": "FlowCombination_RpcPathNestedRpc_1",
        "parameters": [
          {
            "in": "query",
            "name": "a",
            "schema": {
              "properties": {
                "str": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          {
            "in": "query",
            "name": "b",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "c",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/.grpc.gateway.examples.internal.proto.examplepb.NestedProto"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.EmptyProto"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "FlowCombination"
        ]
      }
    },
    "/rpc/path-nested1/{a.str}/stream": {
      "post": {
        "operationId": "FlowCombination_RpcPathNestedStream_1",
        "parameters": [
          {
            "in": "query",
            "name": "a",
            "schema": {
              "properties": {
                "str": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          {
            "in": "query",
            "name": "b",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "c",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/.grpc.gateway.examples.internal.proto.examplepb.NestedProto"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.EmptyProto"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "FlowCombination"
        ]
      }
    },
    "/rpc/path-nested2/{a.str}/rpc": {
      "post": {
        "operationId": "FlowCombination_RpcPathNestedRpc_2",
        "parameters": [
          {
            "in": "query",
            "name": "a",
            "schema": {
              "properties": {
                "str": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          {
            "in": "query",
            "name": "b",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/.grpc.gateway.examples.internal.proto.examplepb.NestedProto"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.EmptyProto"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "FlowCombination"
        ]
      }
    },
    "/rpc/path-nested2/{a.str}/stream": {
      "post": {
        "operationId": "FlowCombination_RpcPathNestedStream_2",
        "parameters": [
          {
            "in": "query",
            "name": "a",
            "schema": {
              "properties": {
                "str": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          {
            "in": "query",
            "name": "b",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/.grpc.gateway.examples.internal.proto.examplepb.NestedProto"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.EmptyProto"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "FlowCombination"
        ]
      }
    },
    "/rpc/path/{a}/query/rpc": {
      "post": {
        "operationId": "FlowCombination_RpcBodyRpc_6",
        "parameters": [
          {
            "in": "path",
            "name": "a",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "b",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "c",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/.grpc.gateway.examples.internal.proto.examplepb.NonEmptyProto"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.EmptyProto"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "FlowCombination"
        ]
      }
    },
    "/rpc/path/{a}/query/stream": {
      "post": {
        "operationId": "FlowCombination_RpcBodyStream_6",
        "parameters": [
          {
            "in": "path",
            "name": "a",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "b",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "c",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/.grpc.gateway.examples.internal.proto.examplepb.NonEmptyProto"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.EmptyProto"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "FlowCombination"
        ]
      }
    },
    "/rpc/path/{a}/{b}/{c}/rpc": {
      "post": {
        "operationId": "FlowCombination_RpcBodyRpc_1",
        "parameters": [
          {
            "in": "path",
            "name": "a",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "b",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "c",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/.grpc.gateway.examples.internal.proto.examplepb.NonEmptyProto"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.EmptyProto"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "FlowCombination"
        ]
      }
    },
    "/rpc/path/{a}/{b}/{c}/stream": {
      "post": {
        "operationId": "FlowCombination_RpcBodyStream_1",
        "parameters": [
          {
            "in": "path",
            "name": "a",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "b",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "c",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/.grpc.gateway.examples.internal.proto.examplepb.NonEmptyProto"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.EmptyProto"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "FlowCombination"
        ]
      }
    },
    "/rpc/query/rpc": {
      "post": {
        "operationId": "FlowCombination_RpcBodyRpc_2",
        "parameters": [
          {
            "in": "query",
            "name": "a",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "b",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "c",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.NonEmptyProto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.EmptyProto"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "FlowCombination"
        ]
      }
    },
    "/rpc/query/stream": {
      "post": {
        "operationId": "FlowCombination_RpcBodyStream_2",
        "parameters": [
          {
            "in": "query",
            "name": "a",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "b",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "c",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.NonEmptyProto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.EmptyProto"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "FlowCombination"
        ]
      }
    },
    "/stream/empty/rpc": {
      "post": {
        "operationId": "FlowCombination_StreamEmptyRpc",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.EmptyProto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.EmptyProto"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "FlowCombination"
        ]
      }
    },
    "/stream/empty/stream": {
      "post": {
        "operationId": "FlowCombination_StreamEmptyStream",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.EmptyProto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.EmptyProto"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "FlowCombination"
        ]
      }
    },
    "/v1/example/a/1": {
      "post": {
        "operationId": "ServiceA_MethodOne",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/.grpc.gateway.examples.internal.examplepb.InMessageA"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.examplepb.OutMessageA"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "ServiceA"
        ]
      }
    },
    "/v1/example/a/2": {
      "post": {
        "operationId": "ServiceA_MethodTwo",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/.grpc.gateway.examples.internal.examplepb.OutMessageA"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.examplepb.InMessageA"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "ServiceA"
        ]
      }
    },
    "/v1/example/a_bit_of_everything": {
      "get": {
        "operationId": "StreamService_List",
        "parameters": [
          {
            "in": "query",
            "name": "error",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.ABitOfEverything"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "StreamService"
        ]
      },
      "post": {
        "operationId": "ABitOfEverythingService_CreateBody",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.ABitOfEverything"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.ABitOfEverything"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "ABitOfEverythingService"
        ]
      }
    },
    "/v1/example/a_bit_of_everything/bulk": {
      "post": {
        "operationId": "StreamService_BulkCreate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.ABitOfEverything"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.protobuf.Empty"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "StreamService"
        ]
      }
    },
    "/v1/example/a_bit_of_everything/echo": {
      "post": {
        "operationId": "StreamService_BulkEcho",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.sub.StringMessage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.sub.StringMessage"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "StreamService"
        ]
      }
    },
    "/v1/example/a_bit_of_everything/echo/{value}": {
      "get": {
        "operationId": "ABitOfEverythingService_Echo",
        "parameters": [
          {
            "in": "path",
            "name": "value",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.sub.StringMessage"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "ABitOfEverythingService"
        ]
      }
    },
    "/v1/example/a_bit_of_everything/echo_duration": {
      "post": {
        "operationId": "StreamService_BulkEchoDuration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/.google.protobuf.Duration"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.protobuf.Duration"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "StreamService"
        ]
      }
    },
    "/v1/example/a_bit_of_everything/generated_create": {
      "post": {
        "operationId": "GeneratedService_Create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.ABitOfEverything"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.protobuf.Empty"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "GeneratedService"
        ]
      }
    },
    "/v1/example/a_bit_of_everything/params/get/nested_enum/{single_nested.ok}": {
      "get": {
        "operationId": "ABitOfEverythingService_CheckNestedEnumGetQueryParams",
        "parameters": [
          {
            "in": "query",
            "name": "single_nested",
            "schema": {
              "properties": {
                "amount": {
                  "format": "int32",
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "ok": {
                  "enum": [
                    "FALSE",
                    "TRUE"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          {
            "in": "query",
            "name": "uuid",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "nested",
            "schema": {
              "properties": {
                "amount": {
                  "format": "int32",
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "ok": {
                  "enum": [
                    "FALSE",
                    "TRUE"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          {
            "in": "query",
            "name": "float_value",
            "schema": {
              "format": "float",
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "double_value",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "int64_value",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "uint64_value",
            "schema": {
              "format": "uint64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "int32_value",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "fixed64_value",
            "schema": {
              "format": "uint64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "fixed32_value",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "bool_value",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "string_value",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "bytes_value",
            "schema": {
              "format": "byte",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "uint32_value",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "enum_value",
            "schema": {
              "enum": [
                "ZERO",
                "ONE"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "path_enum_value",
            "schema": {
              "enum": [
                "ABC",
                "DEF"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "nested_path_enum_value",
            "schema": {
              "enum": [
                "GHI",
                "JKL"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sfixed32_value",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "sfixed64_value",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sint32_value",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "sint64_value",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "repeated_string_value",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "oneof_empty",
            "schema": {
              "type": "object"
            }
          },
          {
            "in": "query",
            "name": "oneof_string",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "map_value",
            "schema": {
              "properties": {
                "key": {
                  "type": "string"
                },
                "value": {
                  "enum": [
                    "ZERO",
                    "ONE"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          {
            "in": "query",
            "name": "mapped_string_value",
            "schema": {
              "properties": {
                "key": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          {
            "in": "query",
            "name": "mapped_nested_value",
            "schema": {
              "properties": {
                "key": {
                  "type": "string"
                },
                "value": {
                  "properties": {
                    "amount": {
                      "format": "int32",
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "ok": {
                      "enum": [
                        "FALSE",
                        "TRUE"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          {
            "in": "query",
            "name": "nonConventionalNameValue",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "timestamp_value",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "repeated_enum_value",
            "schema": {
              "enum": [
                "ZERO",
                "ONE"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "repeated_enum_annotation",
            "schema": {
              "enum": [
                "ZERO",
                "ONE"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "enum_value_annotation",
            "schema": {
              "enum": [
                "ZERO",
                "ONE"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "repeated_string_annotation",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "repeated_nested_annotation",
            "schema": {
              "properties": {
                "amount": {
                  "format": "int32",
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "ok": {
                  "enum": [
                    "FALSE",
                    "TRUE"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          {
            "in": "query",
            "name": "nested_annotation",
            "schema": {
              "properties": {
                "amount": {
                  "format": "int32",
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "ok": {
                  "enum": [
                    "FALSE",
                    "TRUE"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          {
            "in": "query",
            "name": "int64_override_type",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "required_string_via_field_behavior_annotation",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "output_only_string_via_field_behavior_annotation",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "optional_string_value",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "product_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "optional_string_field",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "required_string_field_1",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "required_string_field_2",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "required_field_behavior_json_name",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "required_field_schema_json_name",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "trailing_only",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "trailing_only_dot",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "trailing_both",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "trailing_multiline",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "uuids",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.ABitOfEverything"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "ABitOfEverythingService"
        ]
      }
    },
    "/v1/example/a_bit_of_everything/params/get/{single_nested.name}": {
      "get": {
        "operationId": "ABitOfEverythingService_CheckGetQueryParams",
        "parameters": [
          {
            "in": "query",
            "name": "single_nested",
            "schema": {
              "properties": {
                "amount": {
                  "format": "int32",
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "ok": {
                  "enum": [
                    "FALSE",
                    "TRUE"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          {
            "in": "query",
            "name": "uuid",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "nested",
            "schema": {
              "properties": {
                "amount": {
                  "format": "int32",
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "ok": {
                  "enum": [
                    "FALSE",
                    "TRUE"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          {
            "in": "query",
            "name": "float_value",
            "schema": {
              "format": "float",
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "double_value",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "int64_value",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "uint64_value",
            "schema": {
              "format": "uint64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "int32_value",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "fixed64_value",
            "schema": {
              "format": "uint64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "fixed32_value",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "bool_value",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "string_value",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "bytes_value",
            "schema": {
              "format": "byte",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "uint32_value",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "enum_value",
            "schema": {
              "enum": [
                "ZERO",
                "ONE"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "path_enum_value",
            "schema": {
              "enum": [
                "ABC",
                "DEF"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "nested_path_enum_value",
            "schema": {
              "enum": [
                "GHI",
                "JKL"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sfixed32_value",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "sfixed64_value",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sint32_value",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "sint64_value",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "repeated_string_value",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "oneof_empty",
            "schema": {
              "type": "object"
            }
          },
          {
            "in": "query",
            "name": "oneof_string",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "map_value",
            "schema": {
              "properties": {
                "key": {
                  "type": "string"
                },
                "value": {
                  "enum": [
                    "ZERO",
                    "ONE"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          {
            "in": "query",
            "name": "mapped_string_value",
            "schema": {
              "properties": {
                "key": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          {
            "in": "query",
            "name": "mapped_nested_value",
            "schema": {
              "properties": {
                "key": {
                  "type": "string"
                },
                "value": {
                  "properties": {
                    "amount": {
                      "format": "int32",
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "ok": {
                      "enum": [
                        "FALSE",
                        "TRUE"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          {
            "in": "query",
            "name": "nonConventionalNameValue",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "timestamp_value",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "repeated_enum_value",
            "schema": {
              "enum": [
                "ZERO",
                "ONE"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "repeated_enum_annotation",
            "schema": {
              "enum": [
                "ZERO",
                "ONE"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "enum_value_annotation",
            "schema": {
              "enum": [
                "ZERO",
                "ONE"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "repeated_string_annotation",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "repeated_nested_annotation",
            "schema": {
              "properties": {
                "amount": {
                  "format": "int32",
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "ok": {
                  "enum": [
                    "FALSE",
                    "TRUE"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          {
            "in": "query",
            "name": "nested_annotation",
            "schema": {
              "properties": {
                "amount": {
                  "format": "int32",
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "ok": {
                  "enum": [
                    "FALSE",
                    "TRUE"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          {
            "in": "query",
            "name": "int64_override_type",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "required_string_via_field_behavior_annotation",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "output_only_string_via_field_behavior_annotation",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "optional_string_value",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "product_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "optional_string_field",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "required_string_field_1",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "required_string_field_2",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "required_field_behavior_json_name",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "required_field_schema_json_name",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "trailing_only",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "trailing_only_dot",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "trailing_both",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "trailing_multiline",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "uuids",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.ABitOfEverything"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "ABitOfEverythingService"
        ]
      }
    },
    "/v1/example/a_bit_of_everything/params/post/{string_value}": {
      "post": {
        "operationId": "ABitOfEverythingService_CheckPostQueryParams",
        "parameters": [
          {
            "in": "query",
            "name": "uuid",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "nested",
            "schema": {
              "properties": {
                "amount": {
                  "format": "int32",
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "ok": {
                  "enum": [
                    "FALSE",
                    "TRUE"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          {
            "in": "query",
            "name": "float_value",
            "schema": {
              "format": "float",
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "double_value",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "int64_value",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "uint64_value",
            "schema": {
              "format": "uint64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "int32_value",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "fixed64_value",
            "schema": {
              "format": "uint64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "fixed32_value",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "bool_value",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "path",
            "name": "string_value",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "bytes_value",
            "schema": {
              "format": "byte",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "uint32_value",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "enum_value",
            "schema": {
              "enum": [
                "ZERO",
                "ONE"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "path_enum_value",
            "schema": {
              "enum": [
                "ABC",
                "DEF"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "nested_path_enum_value",
            "schema": {
              "enum": [
                "GHI",
                "JKL"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sfixed32_value",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "sfixed64_value",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sint32_value",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "sint64_value",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "repeated_string_value",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "oneof_empty",
            "schema": {
              "type": "object"
            }
          },
          {
            "in": "query",
            "name": "oneof_string",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "map_value",
            "schema": {
              "properties": {
                "key": {
                  "type": "string"
                },
                "value": {
                  "enum": [
                    "ZERO",
                    "ONE"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          {
            "in": "query",
            "name": "mapped_string_value",
            "schema": {
              "properties": {
                "key": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          {
            "in": "query",
            "name": "mapped_nested_value",
            "schema": {
              "properties": {
                "key": {
                  "type": "string"
                },
                "value": {
                  "properties": {
                    "amount": {
                      "format": "int32",
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "ok": {
                      "enum": [
                        "FALSE",
                        "TRUE"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          {
            "in": "query",
            "name": "nonConventionalNameValue",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "timestamp_value",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "repeated_enum_value",
            "schema": {
              "enum": [
                "ZERO",
                "ONE"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "repeated_enum_annotation",
            "schema": {
              "enum": [
                "ZERO",
                "ONE"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "enum_value_annotation",
            "schema": {
              "enum": [
                "ZERO",
                "ONE"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "repeated_string_annotation",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "repeated_nested_annotation",
            "schema": {
              "properties": {
                "amount": {
                  "format": "int32",
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "ok": {
                  "enum": [
                    "FALSE",
                    "TRUE"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          {
            "in": "query",
            "name": "nested_annotation",
            "schema": {
              "properties": {
                "amount": {
                  "format": "int32",
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "ok": {
                  "enum": [
                    "FALSE",
                    "TRUE"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          {
            "in": "query",
            "name": "int64_override_type",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "required_string_via_field_behavior_annotation",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "output_only_string_via_field_behavior_annotation",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "optional_string_value",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "product_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "optional_string_field",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "required_string_field_1",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "required_string_field_2",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "required_field_behavior_json_name",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "required_field_schema_json_name",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "trailing_only",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "trailing_only_dot",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "trailing_both",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "trailing_multiline",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "uuids",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/.grpc.gateway.examples.internal.proto.examplepb.ABitOfEverything"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.ABitOfEverything"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "ABitOfEverythingService"
        ]
      }
    },
    "/v1/example/a_bit_of_everything/query/{uuid}": {
      "get": {
        "operationId": "ABitOfEverythingService_GetQuery",
        "parameters": [
          {
            "in": "query",
            "name": "single_nested",
            "schema": {
              "properties": {
                "amount": {
                  "format": "int32",
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "ok": {
                  "enum": [
                    "FALSE",
                    "TRUE"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          {
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "nested",
            "schema": {
              "properties": {
                "amount": {
                  "format": "int32",
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "ok": {
                  "enum": [
                    "FALSE",
                    "TRUE"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          {
            "in": "query",
            "name": "float_value",
            "schema": {
              "format": "float",
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "double_value",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "int64_value",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "uint64_value",
            "schema": {
              "format": "uint64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "int32_value",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "fixed64_value",
            "schema": {
              "format": "uint64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "fixed32_value",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "bool_value",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "string_value",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "bytes_value",
            "schema": {
              "format": "byte",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "uint32_value",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "enum_value",
            "schema": {
              "enum": [
                "ZERO",
                "ONE"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "path_enum_value",
            "schema": {
              "enum": [
                "ABC",
                "DEF"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "nested_path_enum_value",
            "schema": {
              "enum": [
                "GHI",
                "JKL"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sfixed32_value",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "sfixed64_value",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sint32_value",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "sint64_value",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "repeated_string_value",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "oneof_empty",
            "schema": {
              "type": "object"
            }
          },
          {
            "in": "query",
            "name": "oneof_string",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "map_value",
            "schema": {
              "properties": {
                "key": {
                  "type": "string"
                },
                "value": {
                  "enum": [
                    "ZERO",
                    "ONE"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          {
            "in": "query",
            "name": "mapped_string_value",
            "schema": {
              "properties": {
                "key": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          {
            "in": "query",
            "name": "mapped_nested_value",
            "schema": {
              "properties": {
                "key": {
                  "type": "string"
                },
                "value": {
                  "properties": {
                    "amount": {
                      "format": "int32",
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "ok": {
                      "enum": [
                        "FALSE",
                        "TRUE"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          {
            "in": "query",
            "name": "nonConventionalNameValue",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "timestamp_value",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "repeated_enum_value",
            "schema": {
              "enum": [
                "ZERO",
                "ONE"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "repeated_enum_annotation",
            "schema": {
              "enum": [
                "ZERO",
                "ONE"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "enum_value_annotation",
            "schema": {
              "enum": [
                "ZERO",
                "ONE"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "repeated_string_annotation",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "repeated_nested_annotation",
            "schema": {
              "properties": {
                "amount": {
                  "format": "int32",
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "ok": {
                  "enum": [
                    "FALSE",
                    "TRUE"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          {
            "in": "query",
            "name": "nested_annotation",
            "schema": {
              "properties": {
                "amount": {
                  "format": "int32",
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "ok": {
                  "enum": [
                    "FALSE",
                    "TRUE"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          {
            "in": "query",
            "name": "int64_override_type",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "required_string_via_field_behavior_annotation",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "output_only_string_via_field_behavior_annotation",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "optional_string_value",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "product_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "optional_string_field",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "required_string_field_1",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "required_string_field_2",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "required_field_behavior_json_name",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "required_field_schema_json_name",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "trailing_only",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "trailing_only_dot",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "trailing_both",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "trailing_multiline",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "uuids",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.protobuf.Empty"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "ABitOfEverythingService"
        ]
      }
    },
    "/v1/example/a_bit_of_everything/{float_value}/{double_value}/{int64_value}/separator/{uint64_value}/{int32_value}/{fixed64_value}/{fixed32_value}/{bool_value}/{string_value=strprefix/*}/{uint32_value}/{sfixed32_value}/{sfixed64_value}/{sint32_value}/{sint64_value}/{nonConventionalNameValue}/{enum_value}/{path_enum_value}/{nested_path_enum_value}/{enum_value_annotation}": {
      "post": {
        "operationId": "ABitOfEverythingService_Create",
        "parameters": [
          {
            "in": "query",
            "name": "single_nested",
            "schema": {
              "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.ABitOfEverything.Nested"
            }
          },
          {
            "in": "query",
            "name": "uuid",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "nested",
            "schema": {
              "properties": {
                "amount": {
                  "format": "int32",
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "ok": {
                  "enum": [
                    "FALSE",
                    "TRUE"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          {
            "in": "path",
            "name": "float_value",
            "required": true,
            "schema": {
              "format": "float",
              "type": "number"
            }
          },
          {
            "in": "path",
            "name": "double_value",
            "required": true,
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "in": "path",
            "name": "int64_value",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "uint64_value",
            "required": true,
            "schema": {
              "format": "uint64",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "int32_value",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "fixed64_value",
            "required": true,
            "schema": {
              "format": "uint64",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "fixed32_value",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "bool_value",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "path",
            "name": "string_value",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "bytes_value",
            "schema": {
              "format": "byte",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "uint32_value",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "enum_value",
            "required": true,
            "schema": {
              "enum": [
                "ZERO",
                "ONE"
              ],
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "path_enum_value",
            "required": true,
            "schema": {
              "enum": [
                "ABC",
                "DEF"
              ],
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "nested_path_enum_value",
            "required": true,
            "schema": {
              "enum": [
                "GHI",
                "JKL"
              ],
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "sfixed32_value",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "sfixed64_value",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "sint32_value",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "sint64_value",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "repeated_string_value",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "oneof_empty",
            "schema": {
              "$ref": "#/components/schemas/.google.protobuf.Empty"
            }
          },
          {
            "in": "query",
            "name": "oneof_string",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "map_value",
            "schema": {
              "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.ABitOfEverything.MapValueEntry"
            }
          },
          {
            "in": "query",
            "name": "mapped_string_value",
            "schema": {
              "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.ABitOfEverything.MappedStringValueEntry"
            }
          },
          {
            "in": "query",
            "name": "mapped_nested_value",
            "schema": {
              "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.ABitOfEverything.MappedNestedValueEntry"
            }
          },
          {
            "in": "path",
            "name": "nonConventionalNameValue",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "timestamp_value",
            "schema": {
              "$ref": "#/components/schemas/.google.protobuf.Timestamp"
            }
          },
          {
            "in": "query",
            "name": "repeated_enum_value",
            "schema": {
              "enum": [
                "ZERO",
                "ONE"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "repeated_enum_annotation",
            "schema": {
              "enum": [
                "ZERO",
                "ONE"
              ],
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "enum_value_annotation",
            "required": true,
            "schema": {
              "enum": [
                "ZERO",
                "ONE"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "repeated_string_annotation",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "repeated_nested_annotation",
            "schema": {
              "properties": {
                "amount": {
                  "format": "int32",
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "ok": {
                  "enum": [
                    "FALSE",
                    "TRUE"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          {
            "in": "query",
            "name": "nested_annotation",
            "schema": {
              "properties": {
                "amount": {
                  "format": "int32",
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "ok": {
                  "enum": [
                    "FALSE",
                    "TRUE"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          {
            "in": "query",
            "name": "int64_override_type",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "required_string_via_field_behavior_annotation",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "output_only_string_via_field_behavior_annotation",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "optional_string_value",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "product_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "optional_string_field",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "required_string_field_1",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "required_string_field_2",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "required_field_behavior_json_name",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "required_field_schema_json_name",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "trailing_only",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "trailing_only_dot",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "trailing_both",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "trailing_multiline",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "uuids",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/.grpc.gateway.examples.internal.proto.examplepb.ABitOfEverything"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.ABitOfEverything"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "ABitOfEverythingService"
        ]
      }
    },
    "/v1/example/a_bit_of_everything/{uuid}": {
      "delete": {
        "operationId": "ABitOfEverythingService_Delete",
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.protobuf.Empty"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "ABitOfEverythingService"
        ]
      },
      "get": {
        "operationId": "ABitOfEverythingService_Lookup",
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.ABitOfEverything"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "ABitOfEverythingService"
        ]
      },
      "head": {
        "operationId": "ABitOfEverythingService_Exists",
        "parameters": [
          {
            "in": "query",
            "name": "single_nested",
            "schema": {
              "properties": {
                "amount": {
                  "format": "int32",
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "ok": {
                  "enum": [
                    "FALSE",
                    "TRUE"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          {
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "nested",
            "schema": {
              "properties": {
                "amount": {
                  "format": "int32",
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "ok": {
                  "enum": [
                    "FALSE",
                    "TRUE"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          {
            "in": "query",
            "name": "float_value",
            "schema": {
              "format": "float",
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "double_value",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "int64_value",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "uint64_value",
            "schema": {
              "format": "uint64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "int32_value",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "fixed64_value",
            "schema": {
              "format": "uint64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "fixed32_value",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "bool_value",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "string_value",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "bytes_value",
            "schema": {
              "format": "byte",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "uint32_value",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "enum_value",
            "schema": {
              "enum": [
                "ZERO",
                "ONE"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "path_enum_value",
            "schema": {
              "enum": [
                "ABC",
                "DEF"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "nested_path_enum_value",
            "schema": {
              "enum": [
                "GHI",
                "JKL"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sfixed32_value",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "sfixed64_value",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sint32_value",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "sint64_value",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "repeated_string_value",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "oneof_empty",
            "schema": {
              "type": "object"
            }
          },
          {
            "in": "query",
            "name": "oneof_string",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "map_value",
            "schema": {
              "properties": {
                "key": {
                  "type": "string"
                },
                "value": {
                  "enum": [
                    "ZERO",
                    "ONE"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          {
            "in": "query",
            "name": "mapped_string_value",
            "schema": {
              "properties": {
                "key": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          {
            "in": "query",
            "name": "mapped_nested_value",
            "schema": {
              "properties": {
                "key": {
                  "type": "string"
                },
                "value": {
                  "properties": {
                    "amount": {
                      "format": "int32",
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "ok": {
                      "enum": [
                        "FALSE",
                        "TRUE"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          {
            "in": "query",
            "name": "nonConventionalNameValue",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "timestamp_value",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "repeated_enum_value",
            "schema": {
              "enum": [
                "ZERO",
                "ONE"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "repeated_enum_annotation",
            "schema": {
              "enum": [
                "ZERO",
                "ONE"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "enum_value_annotation",
            "schema": {
              "enum": [
                "ZERO",
                "ONE"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "repeated_string_annotation",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "repeated_nested_annotation",
            "schema": {
              "properties": {
                "amount": {
                  "format": "int32",
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "ok": {
                  "enum": [
                    "FALSE",
                    "TRUE"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          {
            "in": "query",
            "name": "nested_annotation",
            "schema": {
              "properties": {
                "amount": {
                  "format": "int32",
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "ok": {
                  "enum": [
                    "FALSE",
                    "TRUE"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          {
            "in": "query",
            "name": "int64_override_type",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "required_string_via_field_behavior_annotation",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "output_only_string_via_field_behavior_annotation",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "optional_string_value",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "product_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "optional_string_field",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "required_string_field_1",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "required_string_field_2",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "required_field_behavior_json_name",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "required_field_schema_json_name",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "trailing_only",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "trailing_only_dot",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "trailing_both",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "trailing_multiline",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "uuids",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.protobuf.Empty"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "ABitOfEverythingService"
        ]
      },
      "options": {
        "operationId": "ABitOfEverythingService_CustomOptionsRequest",
        "parameters": [
          {
            "in": "query",
            "name": "single_nested",
            "schema": {
              "properties": {
                "amount": {
                  "format": "int32",
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "ok": {
                  "enum": [
                    "FALSE",
                    "TRUE"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          {
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "nested",
            "schema": {
              "properties": {
                "amount": {
                  "format": "int32",
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "ok": {
                  "enum": [
                    "FALSE",
                    "TRUE"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          {
            "in": "query",
            "name": "float_value",
            "schema": {
              "format": "float",
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "double_value",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "int64_value",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "uint64_value",
            "schema": {
              "format": "uint64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "int32_value",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "fixed64_value",
            "schema": {
              "format": "uint64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "fixed32_value",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "bool_value",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "string_value",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "bytes_value",
            "schema": {
              "format": "byte",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "uint32_value",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "enum_value",
            "schema": {
              "enum": [
                "ZERO",
                "ONE"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "path_enum_value",
            "schema": {
              "enum": [
                "ABC",
                "DEF"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "nested_path_enum_value",
            "schema": {
              "enum": [
                "GHI",
                "JKL"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sfixed32_value",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "sfixed64_value",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sint32_value",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "sint64_value",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "repeated_string_value",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "oneof_empty",
            "schema": {
              "type": "object"
            }
          },
          {
            "in": "query",
            "name": "oneof_string",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "map_value",
            "schema": {
              "properties": {
                "key": {
                  "type": "string"
                },
                "value": {
                  "enum": [
                    "ZERO",
                    "ONE"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          {
            "in": "query",
            "name": "mapped_string_value",
            "schema": {
              "properties": {
                "key": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          {
            "in": "query",
            "name": "mapped_nested_value",
            "schema": {
              "properties": {
                "key": {
                  "type": "string"
                },
                "value": {
                  "properties": {
                    "amount": {
                      "format": "int32",
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "ok": {
                      "enum": [
                        "FALSE",
                        "TRUE"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          {
            "in": "query",
            "name": "nonConventionalNameValue",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "timestamp_value",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "repeated_enum_value",
            "schema": {
              "enum": [
                "ZERO",
                "ONE"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "repeated_enum_annotation",
            "schema": {
              "enum": [
                "ZERO",
                "ONE"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "enum_value_annotation",
            "schema": {
              "enum": [
                "ZERO",
                "ONE"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "repeated_string_annotation",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "repeated_nested_annotation",
            "schema": {
              "properties": {
                "amount": {
                  "format": "int32",
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "ok": {
                  "enum": [
                    "FALSE",
                    "TRUE"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          {
            "in": "query",
            "name": "nested_annotation",
            "schema": {
              "properties": {
                "amount": {
                  "format": "int32",
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "ok": {
                  "enum": [
                    "FALSE",
                    "TRUE"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          {
            "in": "query",
            "name": "int64_override_type",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "required_string_via_field_behavior_annotation",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "output_only_string_via_field_behavior_annotation",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "optional_string_value",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "product_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "optional_string_field",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "required_string_field_1",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "required_string_field_2",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "required_field_behavior_json_name",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "required_field_schema_json_name",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "trailing_only",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "trailing_only_dot",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "trailing_both",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "trailing_multiline",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "uuids",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.protobuf.Empty"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "ABitOfEverythingService"
        ]
      },
      "put": {
        "operationId": "ABitOfEverythingService_Update",
        "parameters": [
          {
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/.grpc.gateway.examples.internal.proto.examplepb.ABitOfEverything"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.protobuf.Empty"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "ABitOfEverythingService"
        ]
      }
    },
    "/v1/example/a_bit_of_everything/{uuid}:custom": {
      "post": {
        "operationId": "ABitOfEverythingService_Custom",
        "parameters": [
          {
            "in": "query",
            "name": "single_nested",
            "schema": {
              "properties": {
                "amount": {
                  "format": "int32",
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "ok": {
                  "enum": [
                    "FALSE",
                    "TRUE"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          {
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "nested",
            "schema": {
              "properties": {
                "amount": {
                  "format": "int32",
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "ok": {
                  "enum": [
                    "FALSE",
                    "TRUE"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          {
            "in": "query",
            "name": "float_value",
            "schema": {
              "format": "float",
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "double_value",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "int64_value",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "uint64_value",
            "schema": {
              "format": "uint64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "int32_value",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "fixed64_value",
            "schema": {
              "format": "uint64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "fixed32_value",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "bool_value",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "string_value",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "bytes_value",
            "schema": {
              "format": "byte",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "uint32_value",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "enum_value",
            "schema": {
              "enum": [
                "ZERO",
                "ONE"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "path_enum_value",
            "schema": {
              "enum": [
                "ABC",
                "DEF"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "nested_path_enum_value",
            "schema": {
              "enum": [
                "GHI",
                "JKL"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sfixed32_value",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "sfixed64_value",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sint32_value",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "sint64_value",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "repeated_string_value",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "oneof_empty",
            "schema": {
              "type": "object"
            }
          },
          {
            "in": "query",
            "name": "oneof_string",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "map_value",
            "schema": {
              "properties": {
                "key": {
                  "type": "string"
                },
                "value": {
                  "enum": [
                    "ZERO",
                    "ONE"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          {
            "in": "query",
            "name": "mapped_string_value",
            "schema": {
              "properties": {
                "key": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          {
            "in": "query",
            "name": "mapped_nested_value",
            "schema": {
              "properties": {
                "key": {
                  "type": "string"
                },
                "value": {
                  "properties": {
                    "amount": {
                      "format": "int32",
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "ok": {
                      "enum": [
                        "FALSE",
                        "TRUE"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          {
            "in": "query",
            "name": "nonConventionalNameValue",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "timestamp_value",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "repeated_enum_value",
            "schema": {
              "enum": [
                "ZERO",
                "ONE"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "repeated_enum_annotation",
            "schema": {
              "enum": [
                "ZERO",
                "ONE"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "enum_value_annotation",
            "schema": {
              "enum": [
                "ZERO",
                "ONE"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "repeated_string_annotation",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "repeated_nested_annotation",
            "schema": {
              "properties": {
                "amount": {
                  "format": "int32",
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "ok": {
                  "enum": [
                    "FALSE",
                    "TRUE"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          {
            "in": "query",
            "name": "nested_annotation",
            "schema": {
              "properties": {
                "amount": {
                  "format": "int32",
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "ok": {
                  "enum": [
                    "FALSE",
                    "TRUE"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          {
            "in": "query",
            "name": "int64_override_type",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "required_string_via_field_behavior_annotation",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "output_only_string_via_field_behavior_annotation",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "optional_string_value",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "product_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "optional_string_field",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "required_string_field_1",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "required_string_field_2",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "required_field_behavior_json_name",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "required_field_schema_json_name",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "trailing_only",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "trailing_only_dot",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "trailing_both",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "trailing_multiline",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "uuids",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/.grpc.gateway.examples.internal.proto.examplepb.ABitOfEverything"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.ABitOfEverything"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "ABitOfEverythingService"
        ]
      }
    },
    "/v1/example/a_bit_of_everything/{uuid}:custom:custom": {
      "post": {
        "operationId": "ABitOfEverythingService_DoubleColon",
        "parameters": [
          {
            "in": "query",
            "name": "single_nested",
            "schema": {
              "properties": {
                "amount": {
                  "format": "int32",
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "ok": {
                  "enum": [
                    "FALSE",
                    "TRUE"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          {
            "in": "path",
            "name": "uuid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "nested",
            "schema": {
              "properties": {
                "amount": {
                  "format": "int32",
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "ok": {
                  "enum": [
                    "FALSE",
                    "TRUE"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          {
            "in": "query",
            "name": "float_value",
            "schema": {
              "format": "float",
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "double_value",
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "int64_value",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "uint64_value",
            "schema": {
              "format": "uint64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "int32_value",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "fixed64_value",
            "schema": {
              "format": "uint64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "fixed32_value",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "bool_value",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "string_value",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "bytes_value",
            "schema": {
              "format": "byte",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "uint32_value",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "enum_value",
            "schema": {
              "enum": [
                "ZERO",
                "ONE"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "path_enum_value",
            "schema": {
              "enum": [
                "ABC",
                "DEF"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "nested_path_enum_value",
            "schema": {
              "enum": [
                "GHI",
                "JKL"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sfixed32_value",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "sfixed64_value",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sint32_value",
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "sint64_value",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "repeated_string_value",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "oneof_empty",
            "schema": {
              "type": "object"
            }
          },
          {
            "in": "query",
            "name": "oneof_string",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "map_value",
            "schema": {
              "properties": {
                "key": {
                  "type": "string"
                },
                "value": {
                  "enum": [
                    "ZERO",
                    "ONE"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          {
            "in": "query",
            "name": "mapped_string_value",
            "schema": {
              "properties": {
                "key": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          {
            "in": "query",
            "name": "mapped_nested_value",
            "schema": {
              "properties": {
                "key": {
                  "type": "string"
                },
                "value": {
                  "properties": {
                    "amount": {
                      "format": "int32",
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "ok": {
                      "enum": [
                        "FALSE",
                        "TRUE"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          {
            "in": "query",
            "name": "nonConventionalNameValue",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "timestamp_value",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "repeated_enum_value",
            "schema": {
              "enum": [
                "ZERO",
                "ONE"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "repeated_enum_annotation",
            "schema": {
              "enum": [
                "ZERO",
                "ONE"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "enum_value_annotation",
            "schema": {
              "enum": [
                "ZERO",
                "ONE"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "repeated_string_annotation",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "repeated_nested_annotation",
            "schema": {
              "properties": {
                "amount": {
                  "format": "int32",
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "ok": {
                  "enum": [
                    "FALSE",
                    "TRUE"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          {
            "in": "query",
            "name": "nested_annotation",
            "schema": {
              "properties": {
                "amount": {
                  "format": "int32",
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "ok": {
                  "enum": [
                    "FALSE",
                    "TRUE"
                  ],
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          {
            "in": "query",
            "name": "int64_override_type",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "required_string_via_field_behavior_annotation",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "output_only_string_via_field_behavior_annotation",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "optional_string_value",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "product_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "optional_string_field",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "required_string_field_1",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "required_string_field_2",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "required_field_behavior_json_name",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "required_field_schema_json_name",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "trailing_only",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "trailing_only_dot",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "trailing_both",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "trailing_multiline",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "uuids",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/.grpc.gateway.examples.internal.proto.examplepb.ABitOfEverything"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.ABitOfEverything"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "ABitOfEverythingService"
        ]
      }
    },
    "/v1/example/a_bit_of_everything_repeated/{path_repeated_float_value}/{path_repeated_double_value}/{path_repeated_int64_value}/{path_repeated_uint64_value}/{path_repeated_int32_value}/{path_repeated_fixed64_value}/{path_repeated_fixed32_value}/{path_repeated_bool_value}/{path_repeated_string_value}/{path_repeated_bytes_value}/{path_repeated_uint32_value}/{path_repeated_enum_value}/{path_repeated_sfixed32_value}/{path_repeated_sfixed64_value}/{path_repeated_sint32_value}/{path_repeated_sint64_value}": {
      "get": {
        "operationId": "ABitOfEverythingService_GetRepeatedQuery",
        "parameters": [
          {
            "in": "path",
            "name": "path_repeated_float_value",
            "required": true,
            "schema": {
              "format": "float",
              "type": "number"
            }
          },
          {
            "in": "path",
            "name": "path_repeated_double_value",
            "required": true,
            "schema": {
              "format": "double",
              "type": "number"
            }
          },
          {
            "in": "path",
            "name": "path_repeated_int64_value",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "path_repeated_uint64_value",
            "required": true,
            "schema": {
              "format": "uint64",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "path_repeated_int32_value",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "path_repeated_fixed64_value",
            "required": true,
            "schema": {
              "format": "uint64",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "path_repeated_fixed32_value",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "path_repeated_bool_value",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "path",
            "name": "path_repeated_string_value",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "path_repeated_bytes_value",
            "required": true,
            "schema": {
              "format": "byte",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "path_repeated_uint32_value",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "path_repeated_enum_value",
            "required": true,
            "schema": {
              "enum": [
                "ZERO",
                "ONE"
              ],
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "path_repeated_sfixed32_value",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "path_repeated_sfixed64_value",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "path_repeated_sint32_value",
            "required": true,
            "schema": {
              "format": "int32",
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "path_repeated_sint64_value",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.ABitOfEverythingRepeated"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "ABitOfEverythingService"
        ]
      }
    },
    "/v1/example/b/1": {
      "post": {
        "operationId": "ServiceB_MethodOne",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/.grpc.gateway.examples.internal.examplepb.InMessageB"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.examplepb.OutMessageB"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "ServiceB"
        ]
      }
    },
    "/v1/example/b/2": {
      "post": {
        "operationId": "ServiceB_MethodTwo",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/.grpc.gateway.examples.internal.examplepb.OutMessageB"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.examplepb.InMessageB"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "ServiceB"
        ]
      }
    },
    "/v1/example/c/1": {
      "post": {
        "operationId": "ServiceC_MethodOne",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/.grpc.gateway.examples.internal.examplepb.InMessageA"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.examplepb.OutMessageC"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "ServiceC"
        ]
      }
    },
    "/v1/example/c/2": {
      "post": {
        "operationId": "ServiceC_MethodTwo",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/.grpc.gateway.examples.internal.examplepb.OutMessageA"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.examplepb.InMessageA"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "ServiceC"
        ]
      }
    },
    "/v1/example/checkStatus": {
      "get": {
        "operationId": "ABitOfEverythingService_CheckStatus",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.CheckStatusResponse"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "ABitOfEverythingService"
        ]
      }
    },
    "/v1/example/deep_path/{single_nested.name}": {
      "post": {
        "operationId": "ABitOfEverythingService_DeepPathEcho",
        "requestBody": {
          "$ref": "#/components/requestBodies/.grpc.gateway.examples.internal.proto.examplepb.ABitOfEverything"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.ABitOfEverything"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "ABitOfEverythingService"
        ]
      }
    },
    "/v1/example/download": {
      "get": {
        "operationId": "StreamService_Download",
        "parameters": [
          {
            "in": "query",
            "name": "error",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.api.HttpBody"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "StreamService"
        ]
      }
    },
    "/v1/example/echo/nested/{n_id.n_id}": {
      "get": {
        "operationId": "EchoService_Echo_6",
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "num",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "line_num",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "lang",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "oneOf": [
                {
                  "properties": {
                    "progress": {
                      "format": "int64",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                {
                  "properties": {
                    "note": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "en",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "no",
            "schema": {
              "oneOf": [
                {
                  "properties": {
                    "progress": {
                      "format": "int64",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                {
                  "properties": {
                    "note": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "resource_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "n_id",
            "schema": {
              "properties": {
                "n_id": {
                  "type": "string"
                },
                "val": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.SimpleMessage"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "EchoService"
        ]
      }
    },
    "/v1/example/echo/resource/{resource_id}": {
      "get": {
        "operationId": "EchoService_Echo_5",
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "num",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "line_num",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "lang",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "oneOf": [
                {
                  "properties": {
                    "progress": {
                      "format": "int64",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                {
                  "properties": {
                    "note": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "en",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "no",
            "schema": {
              "oneOf": [
                {
                  "properties": {
                    "progress": {
                      "format": "int64",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                {
                  "properties": {
                    "note": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          },
          {
            "in": "path",
            "name": "resource_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "n_id",
            "schema": {
              "properties": {
                "n_id": {
                  "type": "string"
                },
                "val": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.SimpleMessage"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "EchoService"
        ]
      }
    },
    "/v1/example/echo/{id}": {
      "post": {
        "operationId": "VisibilityRuleEchoService_Echo",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "num",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "line_num",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "lang",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.VisibilityRuleEmbedded"
            }
          },
          {
            "in": "query",
            "name": "en",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "no",
            "schema": {
              "oneOf": [
                {
                  "properties": {
                    "progress": {
                      "format": "int64",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                {
                  "properties": {
                    "note": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                {
                  "properties": {
                    "internal_field": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                {
                  "properties": {
                    "preview_field": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "internal_field",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "preview_field",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "an_enum",
            "schema": {
              "enum": [
                "VISIBILITY_ENUM_UNSPECIFIED",
                "VISIBILITY_ENUM_VISIBLE",
                "VISIBILITY_ENUM_INTERNAL",
                "VISIBILITY_ENUM_PREVIEW"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "ahidden_default_enum",
            "schema": {
              "enum": [
                "VISIBILITY_ENUM_HIDDEN_DEFAULT_UNSPECIFIED",
                "VISIBILITY_ENUM_HIDDEN_DEFAULT_VISIBLE"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/.grpc.gateway.examples.internal.proto.examplepb.VisibilityRuleSimpleMessage"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.VisibilityRuleSimpleMessage"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "VisibilityRuleEchoService"
        ]
      }
    },
    "/v1/example/echo/{id}/{num}": {
      "get": {
        "operationId": "EchoService_Echo_1",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "num",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "line_num",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "lang",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "oneOf": [
                {
                  "properties": {
                    "progress": {
                      "format": "int64",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                {
                  "properties": {
                    "note": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "en",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "no",
            "schema": {
              "oneOf": [
                {
                  "properties": {
                    "progress": {
                      "format": "int64",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                {
                  "properties": {
                    "note": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "resource_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "n_id",
            "schema": {
              "properties": {
                "n_id": {
                  "type": "string"
                },
                "val": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.SimpleMessage"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "EchoService"
        ]
      }
    },
    "/v1/example/echo/{id}/{num}/{lang}": {
      "get": {
        "operationId": "EchoService_Echo_2",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "num",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "line_num",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "lang",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "oneOf": [
                {
                  "properties": {
                    "progress": {
                      "format": "int64",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                {
                  "properties": {
                    "note": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "en",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "no",
            "schema": {
              "oneOf": [
                {
                  "properties": {
                    "progress": {
                      "format": "int64",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                {
                  "properties": {
                    "note": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "resource_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "n_id",
            "schema": {
              "properties": {
                "n_id": {
                  "type": "string"
                },
                "val": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.SimpleMessage"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "EchoService"
        ]
      }
    },
    "/v1/example/echo1/{id}/{line_num}/{status.note}": {
      "get": {
        "operationId": "EchoService_Echo_3",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "num",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "line_num",
            "required": true,
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "lang",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "oneOf": [
                {
                  "properties": {
                    "progress": {
                      "format": "int64",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                {
                  "properties": {
                    "note": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "en",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "no",
            "schema": {
              "oneOf": [
                {
                  "properties": {
                    "progress": {
                      "format": "int64",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                {
                  "properties": {
                    "note": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "resource_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "n_id",
            "schema": {
              "properties": {
                "n_id": {
                  "type": "string"
                },
                "val": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.SimpleMessage"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "EchoService"
        ]
      }
    },
    "/v1/example/echo2/{no.note}": {
      "get": {
        "operationId": "EchoService_Echo_4",
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "num",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "line_num",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "lang",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "oneOf": [
                {
                  "properties": {
                    "progress": {
                      "format": "int64",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                {
                  "properties": {
                    "note": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "en",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "no",
            "schema": {
              "oneOf": [
                {
                  "properties": {
                    "progress": {
                      "format": "int64",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                {
                  "properties": {
                    "note": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "resource_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "n_id",
            "schema": {
              "properties": {
                "n_id": {
                  "type": "string"
                },
                "val": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.SimpleMessage"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "EchoService"
        ]
      }
    },
    "/v1/example/echo_body": {
      "post": {
        "operationId": "EchoService_EchoBody",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.SimpleMessage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.SimpleMessage"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "EchoService"
        ]
      }
    },
    "/v1/example/echo_body/{id}": {
      "put": {
        "operationId": "EchoService_EchoBody_1",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "num",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "line_num",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "lang",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "oneOf": [
                {
                  "properties": {
                    "progress": {
                      "format": "int64",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                {
                  "properties": {
                    "note": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "en",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "resource_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "n_id",
            "schema": {
              "properties": {
                "n_id": {
                  "type": "string"
                },
                "val": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/.grpc.gateway.examples.internal.proto.examplepb.SimpleMessage"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.SimpleMessage"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "EchoService"
        ]
      }
    },
    "/v1/example/echo_delete": {
      "delete": {
        "operationId": "EchoService_EchoDelete",
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "num",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "line_num",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "lang",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "oneOf": [
                {
                  "properties": {
                    "progress": {
                      "format": "int64",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                {
                  "properties": {
                    "note": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "en",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "no",
            "schema": {
              "oneOf": [
                {
                  "properties": {
                    "progress": {
                      "format": "int64",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                {
                  "properties": {
                    "note": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "resource_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "n_id",
            "schema": {
              "properties": {
                "n_id": {
                  "type": "string"
                },
                "val": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.SimpleMessage"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "EchoService"
        ]
      }
    },
    "/v1/example/echo_internal": {
      "get": {
        "operationId": "VisibilityRuleEchoService_EchoInternal",
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "num",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "line_num",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "lang",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "oneOf": [
                {
                  "properties": {
                    "progress": {
                      "format": "int64",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                {
                  "properties": {
                    "note": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                {
                  "properties": {
                    "internal_field": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                {
                  "properties": {
                    "preview_field": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "en",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "no",
            "schema": {
              "oneOf": [
                {
                  "properties": {
                    "progress": {
                      "format": "int64",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                {
                  "properties": {
                    "note": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                {
                  "properties": {
                    "internal_field": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                {
                  "properties": {
                    "preview_field": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "internal_field",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "preview_field",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "an_enum",
            "schema": {
              "enum": [
                "VISIBILITY_ENUM_UNSPECIFIED",
                "VISIBILITY_ENUM_VISIBLE",
                "VISIBILITY_ENUM_INTERNAL",
                "VISIBILITY_ENUM_PREVIEW"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "ahidden_default_enum",
            "schema": {
              "enum": [
                "VISIBILITY_ENUM_HIDDEN_DEFAULT_UNSPECIFIED",
                "VISIBILITY_ENUM_HIDDEN_DEFAULT_VISIBLE"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.VisibilityRuleSimpleMessage"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "VisibilityRuleEchoService"
        ]
      }
    },
    "/v1/example/echo_internal_and_preview": {
      "get": {
        "operationId": "VisibilityRuleEchoService_EchoInternalAndPreview",
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "num",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "line_num",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "lang",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "oneOf": [
                {
                  "properties": {
                    "progress": {
                      "format": "int64",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                {
                  "properties": {
                    "note": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                {
                  "properties": {
                    "internal_field": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                {
                  "properties": {
                    "preview_field": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "en",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "no",
            "schema": {
              "oneOf": [
                {
                  "properties": {
                    "progress": {
                      "format": "int64",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                {
                  "properties": {
                    "note": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                {
                  "properties": {
                    "internal_field": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                {
                  "properties": {
                    "preview_field": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "internal_field",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "preview_field",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "an_enum",
            "schema": {
              "enum": [
                "VISIBILITY_ENUM_UNSPECIFIED",
                "VISIBILITY_ENUM_VISIBLE",
                "VISIBILITY_ENUM_INTERNAL",
                "VISIBILITY_ENUM_PREVIEW"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "ahidden_default_enum",
            "schema": {
              "enum": [
                "VISIBILITY_ENUM_HIDDEN_DEFAULT_UNSPECIFIED",
                "VISIBILITY_ENUM_HIDDEN_DEFAULT_VISIBLE"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.VisibilityRuleSimpleMessage"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "VisibilityRuleEchoService"
        ]
      }
    },
    "/v1/example/echo_patch": {
      "patch": {
        "operationId": "EchoService_EchoPatch",
        "parameters": [
          {
            "in": "query",
            "name": "update_mask",
            "schema": {
              "$ref": "#/components/schemas/.google.protobuf.FieldMask"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.DynamicMessageUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.DynamicMessageUpdate"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "EchoService"
        ]
      }
    },
    "/v1/example/echo_preview": {
      "get": {
        "operationId": "VisibilityRuleEchoService_EchoPreview",
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "num",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "line_num",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "lang",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "oneOf": [
                {
                  "properties": {
                    "progress": {
                      "format": "int64",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                {
                  "properties": {
                    "note": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                {
                  "properties": {
                    "internal_field": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                {
                  "properties": {
                    "preview_field": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "en",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "no",
            "schema": {
              "oneOf": [
                {
                  "properties": {
                    "progress": {
                      "format": "int64",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                {
                  "properties": {
                    "note": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                {
                  "properties": {
                    "internal_field": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                {
                  "properties": {
                    "preview_field": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "internal_field",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "preview_field",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "an_enum",
            "schema": {
              "enum": [
                "VISIBILITY_ENUM_UNSPECIFIED",
                "VISIBILITY_ENUM_VISIBLE",
                "VISIBILITY_ENUM_INTERNAL",
                "VISIBILITY_ENUM_PREVIEW"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "ahidden_default_enum",
            "schema": {
              "enum": [
                "VISIBILITY_ENUM_HIDDEN_DEFAULT_UNSPECIFIED",
                "VISIBILITY_ENUM_HIDDEN_DEFAULT_VISIBLE"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.VisibilityRuleMessageInPreviewMethod"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "VisibilityRuleEchoService"
        ]
      }
    },
    "/v1/example/echo_unauthorized": {
      "get": {
        "operationId": "EchoService_EchoUnauthorized",
        "parameters": [
          {
            "in": "query",
            "name": "id",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "num",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "line_num",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "lang",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "oneOf": [
                {
                  "properties": {
                    "progress": {
                      "format": "int64",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                {
                  "properties": {
                    "note": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "en",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "no",
            "schema": {
              "oneOf": [
                {
                  "properties": {
                    "progress": {
                      "format": "int64",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                {
                  "properties": {
                    "note": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "resource_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "n_id",
            "schema": {
              "properties": {
                "n_id": {
                  "type": "string"
                },
                "val": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.SimpleMessage"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "EchoService"
        ]
      }
    },
    "/v1/example/enum-with-single-value/echo": {
      "post": {
        "operationId": "EnumWithSingleValueService_Echo",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.EnumWithSingleValueServiceEchoRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.EnumWithSingleValueServiceEchoResponse"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "EnumWithSingleValueService"
        ]
      }
    },
    "/v1/example/foo": {
      "post": {
        "operationId": "Foo2Service_Foo2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.Foo2Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.Foo2Reply"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "Foo2Service"
        ]
      }
    },
    "/v1/example/internal/echo/{id}": {
      "post": {
        "operationId": "VisibilityRuleInternalEchoService_Echo",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "num",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "line_num",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "lang",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "status",
            "schema": {
              "oneOf": [
                {
                  "properties": {
                    "progress": {
                      "format": "int64",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                {
                  "properties": {
                    "note": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                {
                  "properties": {
                    "internal_field": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                {
                  "properties": {
                    "preview_field": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "en",
            "schema": {
              "format": "int64",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "no",
            "schema": {
              "oneOf": [
                {
                  "properties": {
                    "progress": {
                      "format": "int64",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                {
                  "properties": {
                    "note": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                {
                  "properties": {
                    "internal_field": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                {
                  "properties": {
                    "preview_field": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "internal_field",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "preview_field",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "an_enum",
            "schema": {
              "enum": [
                "VISIBILITY_ENUM_UNSPECIFIED",
                "VISIBILITY_ENUM_VISIBLE",
                "VISIBILITY_ENUM_INTERNAL",
                "VISIBILITY_ENUM_PREVIEW"
              ],
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "ahidden_default_enum",
            "schema": {
              "enum": [
                "VISIBILITY_ENUM_HIDDEN_DEFAULT_UNSPECIFIED",
                "VISIBILITY_ENUM_HIDDEN_DEFAULT_VISIBLE"
              ],
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/.grpc.gateway.examples.internal.proto.examplepb.VisibilityRuleSimpleMessage"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.VisibilityRuleSimpleMessage"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "VisibilityRuleInternalEchoService"
        ]
      }
    },
    "/v1/example/login": {
      "post": {
        "operationId": "LoginService_Login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.LoginReply"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "LoginService"
        ]
      }
    },
    "/v1/example/logout": {
      "post": {
        "operationId": "LoginService_Logout",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.LogoutRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.LogoutReply"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "LoginService"
        ]
      }
    },
    "/v1/example/non_standard/update": {
      "patch": {
        "operationId": "NonStandardService_Update",
        "parameters": [
          {
            "in": "query",
            "name": "update_mask",
            "schema": {
              "$ref": "#/components/schemas/.google.protobuf.FieldMask"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.NonStandardUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.NonStandardMessage"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "NonStandardService"
        ]
      }
    },
    "/v1/example/non_standard/update_with_json_names": {
      "patch": {
        "operationId": "NonStandardService_UpdateWithJSONNames",
        "parameters": [
          {
            "in": "query",
            "name": "update_mask",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.NonStandardWithJSONNamesUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.NonStandardMessageWithJSONNames"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "NonStandardService"
        ]
      }
    },
    "/v1/example/oneofenum": {
      "post": {
        "operationId": "ABitOfEverythingService_PostOneofEnum",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.oneofenum.OneofEnumMessage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.protobuf.Empty"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "ABitOfEverythingService"
        ]
      }
    },
    "/v1/example/requiredmessagetype": {
      "post": {
        "operationId": "ABitOfEverythingService_PostRequiredMessageType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.RequiredMessageTypeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.protobuf.Empty"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "ABitOfEverythingService"
        ]
      }
    },
    "/v1/example/snake/{who}/{what}/{where}": {
      "get": {
        "operationId": "SnakeEnumService_SnakeEnum",
        "parameters": [
          {
            "in": "path",
            "name": "what",
            "required": true,
            "schema": {
              "enum": [
                "value_c",
                "value_d"
              ],
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "who",
            "required": true,
            "schema": {
              "enum": [
                "value_e",
                "value_f"
              ],
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "where",
            "required": true,
            "schema": {
              "enum": [
                "value_x",
                "value_y"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.SnakeEnumResponse"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "SnakeEnumService"
        ]
      }
    },
    "/v1/example/wrappers": {
      "post": {
        "operationId": "WrappersService_Create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.Wrappers"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.Wrappers"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "WrappersService"
        ]
      }
    },
    "/v1/testBool": {
      "post": {
        "operationId": "WrappersService_CreateBoolValue",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/.google.protobuf.BoolValue"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.protobuf.BoolValue"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "WrappersService"
        ]
      }
    },
    "/v1/testBytes": {
      "post": {
        "operationId": "WrappersService_CreateBytesValue",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/.google.protobuf.BytesValue"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.protobuf.BytesValue"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "WrappersService"
        ]
      }
    },
    "/v1/testDouble": {
      "post": {
        "operationId": "WrappersService_CreateDoubleValue",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/.google.protobuf.DoubleValue"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.protobuf.DoubleValue"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "WrappersService"
        ]
      }
    },
    "/v1/testEmpty": {
      "post": {
        "operationId": "WrappersService_CreateEmpty",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/.google.protobuf.Empty"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.protobuf.Empty"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "WrappersService"
        ]
      }
    },
    "/v1/testFloat": {
      "post": {
        "operationId": "WrappersService_CreateFloatValue",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/.google.protobuf.FloatValue"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.protobuf.FloatValue"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "WrappersService"
        ]
      }
    },
    "/v1/testInt32": {
      "post": {
        "operationId": "WrappersService_CreateInt32Value",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/.google.protobuf.Int32Value"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.protobuf.Int32Value"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "WrappersService"
        ]
      }
    },
    "/v1/testInt64": {
      "post": {
        "operationId": "WrappersService_CreateInt64Value",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/.google.protobuf.Int64Value"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.protobuf.Int64Value"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "WrappersService"
        ]
      }
    },
    "/v1/testString": {
      "post": {
        "operationId": "WrappersService_CreateStringValue",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/.google.protobuf.StringValue"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.protobuf.StringValue"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "WrappersService"
        ]
      }
    },
    "/v1/testUint32": {
      "post": {
        "operationId": "WrappersService_CreateUInt32Value",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/.google.protobuf.UInt32Value"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.protobuf.UInt32Value"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "WrappersService"
        ]
      }
    },
    "/v1/testUint64": {
      "post": {
        "operationId": "WrappersService_CreateUInt64Value",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/.google.protobuf.UInt64Value"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.protobuf.UInt64Value"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "WrappersService"
        ]
      }
    },
    "/v1/{book.name=publishers/*/books/*}": {
      "patch": {
        "operationId": "ABitOfEverythingService_UpdateBook",
        "parameters": [
          {
            "in": "query",
            "name": "update_mask",
            "schema": {
              "$ref": "#/components/schemas/.google.protobuf.FieldMask"
            }
          },
          {
            "in": "query",
            "name": "allow_missing",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/.grpc.gateway.examples.internal.proto.examplepb.UpdateBookRequest"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.Book"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "ABitOfEverythingService"
        ]
      }
    },
    "/v1/{parent=publishers/*}/books": {
      "post": {
        "operationId": "ABitOfEverythingService_CreateBook",
        "parameters": [
          {
            "in": "path",
            "name": "parent",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "book_id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/.grpc.gateway.examples.internal.proto.examplepb.CreateBookRequest"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.Book"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "ABitOfEverythingService"
        ]
      }
    },
    "/v2/example/a_bit_of_everything/{abe.uuid}": {
      "patch": {
        "operationId": "ABitOfEverythingService_UpdateV2_1",
        "parameters": [
          {
            "in": "query",
            "name": "update_mask",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/.grpc.gateway.examples.internal.proto.examplepb.UpdateV2Request"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.protobuf.Empty"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "ABitOfEverythingService"
        ]
      },
      "put": {
        "operationId": "ABitOfEverythingService_UpdateV2",
        "parameters": [
          {
            "in": "query",
            "name": "update_mask",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/.grpc.gateway.examples.internal.proto.examplepb.UpdateV2Request"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.protobuf.Empty"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "ABitOfEverythingService"
        ]
      }
    },
    "/v2/example/echo": {
      "get": {
        "operationId": "ABitOfEverythingService_Echo_2",
        "parameters": [
          {
            "in": "query",
            "name": "value",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.sub.StringMessage"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "ABitOfEverythingService"
        ]
      },
      "post": {
        "operationId": "ABitOfEverythingService_Echo_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.sub.StringMessage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.sub.StringMessage"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "ABitOfEverythingService"
        ]
      }
    },
    "/v2/example/empty": {
      "get": {
        "operationId": "camelCaseServiceName_Empty",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.protobuf.Empty"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "camelCaseServiceName"
        ]
      }
    },
    "/v2/example/errorwithdetails": {
      "get": {
        "operationId": "ABitOfEverythingService_ErrorWithDetails",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.protobuf.Empty"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "ABitOfEverythingService"
        ]
      }
    },
    "/v2/example/overwriterequestcontenttype": {
      "post": {
        "operationId": "ABitOfEverythingService_OverwriteRequestContentType",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/.grpc.gateway.examples.internal.proto.examplepb.Body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.protobuf.Empty"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "ABitOfEverythingService"
        ]
      }
    },
    "/v2/example/overwriteresponsecontenttype": {
      "get": {
        "operationId": "ABitOfEverythingService_OverwriteResponseContentType",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.protobuf.StringValue"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "ABitOfEverythingService"
        ]
      }
    },
    "/v2/example/postwithemptybody/{name}": {
      "post": {
        "operationId": "ABitOfEverythingService_PostWithEmptyBody",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/.grpc.gateway.examples.internal.proto.examplepb.Body"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.protobuf.Empty"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "ABitOfEverythingService"
        ]
      }
    },
    "/v2/example/timeout": {
      "get": {
        "operationId": "ABitOfEverythingService_Timeout",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.protobuf.Empty"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "ABitOfEverythingService"
        ]
      }
    },
    "/v2/example/withbody/{id}": {
      "post": {
        "operationId": "ABitOfEverythingService_GetMessageWithBody",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/.grpc.gateway.examples.internal.proto.examplepb.MessageWithBody"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.protobuf.Empty"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "ABitOfEverythingService"
        ]
      }
    },
    "/v2/{value}:check": {
      "get": {
        "operationId": "ABitOfEverythingService_CheckExternalPathEnum",
        "parameters": [
          {
            "in": "path",
            "name": "value",
            "required": true,
            "schema": {
              "enum": [
                "ABC",
                "DEF"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.protobuf.Empty"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "ABitOfEverythingService"
        ]
      }
    },
    "/v2a/example/a_bit_of_everything/{abe.uuid}": {
      "patch": {
        "operationId": "ABitOfEverythingService_UpdateV2_2",
        "requestBody": {
          "$ref": "#/components/requestBodies/.grpc.gateway.examples.internal.proto.examplepb.UpdateV2Request"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.protobuf.Empty"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "ABitOfEverythingService"
        ]
      }
    },
    "/v3/{value}:check": {
      "get": {
        "operationId": "ABitOfEverythingService_CheckExternalNestedPathEnum",
        "parameters": [
          {
            "in": "path",
            "name": "value",
            "required": true,
            "schema": {
              "enum": [
                "GHI",
                "JKL"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.protobuf.Empty"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/.google.rpc.Status"
                }
              }
            }
          }
        },
        "tags": [
          "ABitOfEverythingService"
        ]
      }
    }
  }
}
