# This prototext file is generated from:
# - annotations.proto https://github.com/googleapis/googleapis/blob/a549fb2d8938ddf7e97e8e14f03e83db0dff37e0/google/api/annotations.proto
# - http.proto https://github.com/googleapis/googleapis/blob/a549fb2d8938ddf7e97e8e14f03e83db0dff37e0/google/api/http.proto
# - your_service.proto
# syntax = "proto3";
# package your.service.v1;
#
# import "google/api/annotations.proto";
#
# option go_package = "github.com/yourorg/yourprotos/gen/go/your/service/v1";
#
# message StringMessage {
#   string value = 1;
# }
#
# service YourService {
#   rpc Echo(StringMessage) returns (StringMessage) {
#     option (google.api.http) = {post: "/api/echo"};
#   }
# }

file_to_generate: "your/service/v1/your_service.proto"
parameter: "output_format=yaml"
proto_file: { name: "google/api/http.proto" package: "google.api" message_type: { name: "Http" field: { name: "rules" number: 1 label: LABEL_REPEATED type: TYPE_MESSAGE type_name: ".google.api.HttpRule" json_name: "rules" } field: { name: "fully_decode_reserved_expansion" number: 2 label: LABEL_OPTIONAL type: TYPE_BOOL json_name: "fullyDecodeReservedExpansion" } } message_type: { name: "HttpRule" field: { name: "selector" number: 1 label: LABEL_OPTIONAL type: TYPE_STRING json_name: "selector" } field: { name: "get" number: 2 label: LABEL_OPTIONAL type: TYPE_STRING oneof_index: 0 json_name: "get" } field: { name: "put" number: 3 label: LABEL_OPTIONAL type: TYPE_STRING oneof_index: 0 json_name: "put" } field: { name: "post" number: 4 label: LABEL_OPTIONAL type: TYPE_STRING oneof_index: 0 json_name: "post" } field: { name: "delete" number: 5 label: LABEL_OPTIONAL type: TYPE_STRING oneof_index: 0 json_name: "delete" } field: { name: "patch" number: 6 label: LABEL_OPTIONAL type: TYPE_STRING oneof_index: 0 json_name: "patch" } field: { name: "custom" number: 8 label: LABEL_OPTIONAL type: TYPE_MESSAGE type_name: ".google.api.CustomHttpPattern" oneof_index: 0 json_name: "custom" } field: { name: "body" number: 7 label: LABEL_OPTIONAL type: TYPE_STRING json_name: "body" } field: { name: "response_body" number: 12 label: LABEL_OPTIONAL type: TYPE_STRING json_name: "responseBody" } field: { name: "additional_bindings" number: 11 label: LABEL_REPEATED type: TYPE_MESSAGE type_name: ".google.api.HttpRule" json_name: "additionalBindings" } oneof_decl: { name: "pattern" } } message_type: { name: "CustomHttpPattern" field: { name: "kind" number: 1 label: LABEL_OPTIONAL type: TYPE_STRING json_name: "kind" } field: { name: "path" number: 2 label: LABEL_OPTIONAL type: TYPE_STRING json_name: "path" } } options: { java_package: "com.google.api" java_outer_classname: "HttpProto" java_multiple_files: true go_package: "google.golang.org/genproto/googleapis/api/annotations;annotations" cc_enable_arenas: true objc_class_prefix: "GAPI" } source_code_info: { location: { span: 14 span: 0 span: 378 span: 1 } location: { path: 12 span: 14 span: 0 span: 18 leading_detached_comments: " Copyright 2023 Google LLC\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n" } location: { path: 2 span: 16 span: 0 span: 19 } location: { path: 8 span: 18 span: 0 span: 31 } location: { path: 8 path: 31 span: 18 span: 0 span: 31 } location: { path: 8 span: 19 span: 0 span: 88 } location: { path: 8 path: 11 span: 19 span: 0 span: 88 } location: { path: 8 span: 20 span: 0 span: 34 } location: { path: 8 path: 10 span: 20 span: 0 span: 34 } location: { path: 8 span: 21 span: 0 span: 42 } location: { path: 8 path: 8 span: 21 span: 0 span: 42 } location: { path: 8 span: 22 span: 0 span: 39 } location: { path: 8 path: 1 span: 22 span: 0 span: 39 } location: { path: 8 span: 23 span: 0 span: 34 } location: { path: 8 path: 36 span: 23 span: 0 span: 34 } location: { path: 4 path: 0 span: 28 span: 0 span: 41 span: 1 leading_comments: " Defines the HTTP configuration for an API service. It contains a list of\n [HttpRule][google.api.HttpRule], each specifying the mapping of an RPC method\n to one or more HTTP REST API methods.\n" } location: { path: 4 path: 0 path: 1 span: 28 span: 8 span: 12 } location: { path: 4 path: 0 path: 2 path: 0 span: 32 span: 2 span: 30 leading_comments: " A list of HTTP configuration rules that apply to individual API methods.\n\n **NOTE:** All service configuration rules follow \"last one wins\" order.\n" } location: { path: 4 path: 0 path: 2 path: 0 path: 4 span: 32 span: 2 span: 10 } location: { path: 4 path: 0 path: 2 path: 0 path: 6 span: 32 span: 11 span: 19 } location: { path: 4 path: 0 path: 2 path: 0 path: 1 span: 32 span: 20 span: 25 } location: { path: 4 path: 0 path: 2 path: 0 path: 3 span: 32 span: 28 span: 29 } location: { path: 4 path: 0 path: 2 path: 1 span: 40 span: 2 span: 43 leading_comments: " When set to true, URL path parameters will be fully URI-decoded except in\n cases of single segment matches in reserved expansion, where \"%2F\" will be\n left encoded.\n\n The default behavior is to not decode RFC 6570 reserved characters in multi\n segment matches.\n" } location: { path: 4 path: 0 path: 2 path: 1 path: 5 span: 40 span: 2 span: 6 } location: { path: 4 path: 0 path: 2 path: 1 path: 1 span: 40 span: 7 span: 38 } location: { path: 4 path: 0 path: 2 path: 1 path: 3 span: 40 span: 41 span: 42 } location: { path: 4 path: 1 span: 315 span: 0 span: 369 span: 1 leading_comments: " # gRPC Transcoding\n\n gRPC Transcoding is a feature for mapping between a gRPC method and one or\n more HTTP REST endpoints. It allows developers to build a single API service\n that supports both gRPC APIs and REST APIs. Many systems, including [Google\n APIs](https://github.com/googleapis/googleapis),\n [Cloud Endpoints](https://cloud.google.com/endpoints), [gRPC\n Gateway](https://github.com/grpc-ecosystem/grpc-gateway),\n and [Envoy](https://github.com/envoyproxy/envoy) proxy support this feature\n and use it for large scale production services.\n\n `HttpRule` defines the schema of the gRPC/REST mapping. The mapping specifies\n how different portions of the gRPC request message are mapped to the URL\n path, URL query parameters, and HTTP request body. It also controls how the\n gRPC response message is mapped to the HTTP response body. `HttpRule` is\n typically specified as an `google.api.http` annotation on the gRPC method.\n\n Each mapping specifies a URL path template and an HTTP method. The path\n template may refer to one or more fields in the gRPC request message, as long\n as each field is a non-repeated field with a primitive (non-message) type.\n The path template controls how fields of the request message are mapped to\n the URL path.\n\n Example:\n\n     service Messaging {\n       rpc GetMessage(GetMessageRequest) returns (Message) {\n         option (google.api.http) = {\n             get: \"/v1/{name=messages/*}\"\n         };\n       }\n     }\n     message GetMessageRequest {\n       string name = 1; // Mapped to URL path.\n     }\n     message Message {\n       string text = 1; // The resource content.\n     }\n\n This enables an HTTP REST to gRPC mapping as below:\n\n HTTP | gRPC\n -----|-----\n `GET /v1/messages/123456`  | `GetMessage(name: \"messages/123456\")`\n\n Any fields in the request message which are not bound by the path template\n automatically become HTTP query parameters if there is no HTTP request body.\n For example:\n\n     service Messaging {\n       rpc GetMessage(GetMessageRequest) returns (Message) {\n         option (google.api.http) = {\n             get:\"/v1/messages/{message_id}\"\n         };\n       }\n     }\n     message GetMessageRequest {\n       message SubMessage {\n         string subfield = 1;\n       }\n       string message_id = 1; // Mapped to URL path.\n       int64 revision = 2;    // Mapped to URL query parameter `revision`.\n       SubMessage sub = 3;    // Mapped to URL query parameter `sub.subfield`.\n     }\n\n This enables a HTTP JSON to RPC mapping as below:\n\n HTTP | gRPC\n -----|-----\n `GET /v1/messages/123456?revision=2&sub.subfield=foo` |\n `GetMessage(message_id: \"123456\" revision: 2 sub: SubMessage(subfield:\n \"foo\"))`\n\n Note that fields which are mapped to URL query parameters must have a\n primitive type or a repeated primitive type or a non-repeated message type.\n In the case of a repeated type, the parameter can be repeated in the URL\n as `...?param=A&param=B`. In the case of a message type, each field of the\n message is mapped to a separate parameter, such as\n `...?foo.a=A&foo.b=B&foo.c=C`.\n\n For HTTP methods that allow a request body, the `body` field\n specifies the mapping. Consider a REST update method on the\n message resource collection:\n\n     service Messaging {\n       rpc UpdateMessage(UpdateMessageRequest) returns (Message) {\n         option (google.api.http) = {\n           patch: \"/v1/messages/{message_id}\"\n           body: \"message\"\n         };\n       }\n     }\n     message UpdateMessageRequest {\n       string message_id = 1; // mapped to the URL\n       Message message = 2;   // mapped to the body\n     }\n\n The following HTTP JSON to RPC mapping is enabled, where the\n representation of the JSON in the request body is determined by\n protos JSON encoding:\n\n HTTP | gRPC\n -----|-----\n `PATCH /v1/messages/123456 { \"text\": \"Hi!\" }` | `UpdateMessage(message_id:\n \"123456\" message { text: \"Hi!\" })`\n\n The special name `*` can be used in the body mapping to define that\n every field not bound by the path template should be mapped to the\n request body.  This enables the following alternative definition of\n the update method:\n\n     service Messaging {\n       rpc UpdateMessage(Message) returns (Message) {\n         option (google.api.http) = {\n           patch: \"/v1/messages/{message_id}\"\n           body: \"*\"\n         };\n       }\n     }\n     message Message {\n       string message_id = 1;\n       string text = 2;\n     }\n\n\n The following HTTP JSON to RPC mapping is enabled:\n\n HTTP | gRPC\n -----|-----\n `PATCH /v1/messages/123456 { \"text\": \"Hi!\" }` | `UpdateMessage(message_id:\n \"123456\" text: \"Hi!\")`\n\n Note that when using `*` in the body mapping, it is not possible to\n have HTTP parameters, as all fields not bound by the path end in\n the body. This makes this option more rarely used in practice when\n defining REST APIs. The common usage of `*` is in custom methods\n which don't use the URL at all for transferring data.\n\n It is possible to define multiple HTTP methods for one RPC by using\n the `additional_bindings` option. Example:\n\n     service Messaging {\n       rpc GetMessage(GetMessageRequest) returns (Message) {\n         option (google.api.http) = {\n           get: \"/v1/messages/{message_id}\"\n           additional_bindings {\n             get: \"/v1/users/{user_id}/messages/{message_id}\"\n           }\n         };\n       }\n     }\n     message GetMessageRequest {\n       string message_id = 1;\n       string user_id = 2;\n     }\n\n This enables the following two alternative HTTP JSON to RPC mappings:\n\n HTTP | gRPC\n -----|-----\n `GET /v1/messages/123456` | `GetMessage(message_id: \"123456\")`\n `GET /v1/users/me/messages/123456` | `GetMessage(user_id: \"me\" message_id:\n \"123456\")`\n\n ## Rules for HTTP mapping\n\n 1. Leaf request fields (recursive expansion nested messages in the request\n    message) are classified into three categories:\n    - Fields referred by the path template. They are passed via the URL path.\n    - Fields referred by the [HttpRule.body][google.api.HttpRule.body]. They\n    are passed via the HTTP\n      request body.\n    - All other fields are passed via the URL query parameters, and the\n      parameter name is the field path in the request message. A repeated\n      field can be represented as multiple query parameters under the same\n      name.\n  2. If [HttpRule.body][google.api.HttpRule.body] is \"*\", there is no URL\n  query parameter, all fields\n     are passed via URL path and HTTP request body.\n  3. If [HttpRule.body][google.api.HttpRule.body] is omitted, there is no HTTP\n  request body, all\n     fields are passed via URL path and URL query parameters.\n\n ### Path template syntax\n\n     Template = \"/\" Segments [ Verb ] ;\n     Segments = Segment { \"/\" Segment } ;\n     Segment  = \"*\" | \"**\" | LITERAL | Variable ;\n     Variable = \"{\" FieldPath [ \"=\" Segments ] \"}\" ;\n     FieldPath = IDENT { \".\" IDENT } ;\n     Verb     = \":\" LITERAL ;\n\n The syntax `*` matches a single URL path segment. The syntax `**` matches\n zero or more URL path segments, which must be the last part of the URL path\n except the `Verb`.\n\n The syntax `Variable` matches part of the URL path as specified by its\n template. A variable template must not contain other variables. If a variable\n matches a single path segment, its template may be omitted, e.g. `{var}`\n is equivalent to `{var=*}`.\n\n The syntax `LITERAL` matches literal text in the URL path. If the `LITERAL`\n contains any reserved character, such characters should be percent-encoded\n before the matching.\n\n If a variable contains exactly one path segment, such as `\"{var}\"` or\n `\"{var=*}\"`, when such a variable is expanded into a URL path on the client\n side, all characters except `[-_.~0-9a-zA-Z]` are percent-encoded. The\n server side does the reverse decoding. Such variables show up in the\n [Discovery\n Document](https://developers.google.com/discovery/v1/reference/apis) as\n `{var}`.\n\n If a variable contains multiple path segments, such as `\"{var=foo/*}\"`\n or `\"{var=**}\"`, when such a variable is expanded into a URL path on the\n client side, all characters except `[-_.~/0-9a-zA-Z]` are percent-encoded.\n The server side does the reverse decoding, except \"%2F\" and \"%2f\" are left\n unchanged. Such variables show up in the\n [Discovery\n Document](https://developers.google.com/discovery/v1/reference/apis) as\n `{+var}`.\n\n ## Using gRPC API Service Configuration\n\n gRPC API Service Configuration (service config) is a configuration language\n for configuring a gRPC service to become a user-facing product. The\n service config is simply the YAML representation of the `google.api.Service`\n proto message.\n\n As an alternative to annotating your proto file, you can configure gRPC\n transcoding in your service config YAML files. You do this by specifying a\n `HttpRule` that maps the gRPC method to a REST endpoint, achieving the same\n effect as the proto annotation. This can be particularly useful if you\n have a proto that is reused in multiple services. Note that any transcoding\n specified in the service config will override any matching transcoding\n configuration in the proto.\n\n Example:\n\n     http:\n       rules:\n         # Selects a gRPC method and applies HttpRule to it.\n         - selector: example.v1.Messaging.GetMessage\n           get: /v1/messages/{message_id}/{sub.subfield}\n\n ## Special notes\n\n When gRPC Transcoding is used to map a gRPC to JSON REST endpoints, the\n proto to JSON conversion must follow the [proto3\n specification](https://developers.google.com/protocol-buffers/docs/proto3#json).\n\n While the single segment variable follows the semantics of\n [RFC 6570](https://tools.ietf.org/html/rfc6570) Section 3.2.2 Simple String\n Expansion, the multi segment variable **does not** follow RFC 6570 Section\n 3.2.3 Reserved Expansion. The reason is that the Reserved Expansion\n does not expand special characters like `?` and `#`, which would lead\n to invalid URLs. As the result, gRPC Transcoding uses a custom encoding\n for multi segment variables.\n\n The path variables **must not** refer to any repeated or mapped field,\n because client libraries are not capable of handling such variable expansion.\n\n The path variables **must not** capture the leading \"/\" character. The reason\n is that the most common use case \"{var}\" does not capture the leading \"/\"\n character. For consistency, all path variables must share the same behavior.\n\n Repeated message fields must not be mapped to URL query parameters, because\n no client library can support such complicated mapping.\n\n If an API needs to use a JSON array for request or response body, it can map\n the request or response body to a repeated field. However, some gRPC\n Transcoding implementations may not support this feature.\n" } location: { path: 4 path: 1 path: 1 span: 315 span: 8 span: 16 } location: { path: 4 path: 1 path: 2 path: 0 span: 320 span: 2 span: 22 leading_comments: " Selects a method to which this rule applies.\n\n Refer to [selector][google.api.DocumentationRule.selector] for syntax\n details.\n" } location: { path: 4 path: 1 path: 2 path: 0 path: 5 span: 320 span: 2 span: 8 } location: { path: 4 path: 1 path: 2 path: 0 path: 1 span: 320 span: 9 span: 17 } location: { path: 4 path: 1 path: 2 path: 0 path: 3 span: 320 span: 20 span: 21 } location: { path: 4 path: 1 path: 8 path: 0 span: 325 span: 2 span: 347 span: 3 leading_comments: " Determines the URL pattern is matched by this rules. This pattern can be\n used with any of the {get|put|post|delete|patch} methods. A custom method\n can be defined using the 'custom' field.\n" } location: { path: 4 path: 1 path: 8 path: 0 path: 1 span: 325 span: 8 span: 15 } location: { path: 4 path: 1 path: 2 path: 1 span: 328 span: 4 span: 19 leading_comments: " Maps to HTTP GET. Used for listing and getting information about\n resources.\n" } location: { path: 4 path: 1 path: 2 path: 1 path: 5 span: 328 span: 4 span: 10 } location: { path: 4 path: 1 path: 2 path: 1 path: 1 span: 328 span: 11 span: 14 } location: { path: 4 path: 1 path: 2 path: 1 path: 3 span: 328 span: 17 span: 18 } location: { path: 4 path: 1 path: 2 path: 2 span: 331 span: 4 span: 19 leading_comments: " Maps to HTTP PUT. Used for replacing a resource.\n" } location: { path: 4 path: 1 path: 2 path: 2 path: 5 span: 331 span: 4 span: 10 } location: { path: 4 path: 1 path: 2 path: 2 path: 1 span: 331 span: 11 span: 14 } location: { path: 4 path: 1 path: 2 path: 2 path: 3 span: 331 span: 17 span: 18 } location: { path: 4 path: 1 path: 2 path: 3 span: 334 span: 4 span: 20 leading_comments: " Maps to HTTP POST. Used for creating a resource or performing an action.\n" } location: { path: 4 path: 1 path: 2 path: 3 path: 5 span: 334 span: 4 span: 10 } location: { path: 4 path: 1 path: 2 path: 3 path: 1 span: 334 span: 11 span: 15 } location: { path: 4 path: 1 path: 2 path: 3 path: 3 span: 334 span: 18 span: 19 } location: { path: 4 path: 1 path: 2 path: 4 span: 337 span: 4 span: 22 leading_comments: " Maps to HTTP DELETE. Used for deleting a resource.\n" } location: { path: 4 path: 1 path: 2 path: 4 path: 5 span: 337 span: 4 span: 10 } location: { path: 4 path: 1 path: 2 path: 4 path: 1 span: 337 span: 11 span: 17 } location: { path: 4 path: 1 path: 2 path: 4 path: 3 span: 337 span: 20 span: 21 } location: { path: 4 path: 1 path: 2 path: 5 span: 340 span: 4 span: 21 leading_comments: " Maps to HTTP PATCH. Used for updating a resource.\n" } location: { path: 4 path: 1 path: 2 path: 5 path: 5 span: 340 span: 4 span: 10 } location: { path: 4 path: 1 path: 2 path: 5 path: 1 span: 340 span: 11 span: 16 } location: { path: 4 path: 1 path: 2 path: 5 path: 3 span: 340 span: 19 span: 20 } location: { path: 4 path: 1 path: 2 path: 6 span: 346 span: 4 span: 33 leading_comments: " The custom pattern is used for specifying an HTTP method that is not\n included in the `pattern` field, such as HEAD, or \"*\" to leave the\n HTTP method unspecified for this rule. The wild-card rule is useful\n for services that provide content to Web (HTML) clients.\n" } location: { path: 4 path: 1 path: 2 path: 6 path: 6 span: 346 span: 4 span: 21 } location: { path: 4 path: 1 path: 2 path: 6 path: 1 span: 346 span: 22 span: 28 } location: { path: 4 path: 1 path: 2 path: 6 path: 3 span: 346 span: 31 span: 32 } location: { path: 4 path: 1 path: 2 path: 7 span: 355 span: 2 span: 18 leading_comments: " The name of the request field whose value is mapped to the HTTP request\n body, or `*` for mapping all request fields not captured by the path\n pattern to the HTTP body, or omitted for not having any HTTP request body.\n\n NOTE: the referred field must be present at the top-level of the request\n message type.\n" } location: { path: 4 path: 1 path: 2 path: 7 path: 5 span: 355 span: 2 span: 8 } location: { path: 4 path: 1 path: 2 path: 7 path: 1 span: 355 span: 9 span: 13 } location: { path: 4 path: 1 path: 2 path: 7 path: 3 span: 355 span: 16 span: 17 } location: { path: 4 path: 1 path: 2 path: 8 span: 363 span: 2 span: 28 leading_comments: " Optional. The name of the response field whose value is mapped to the HTTP\n response body. When omitted, the entire response message will be used\n as the HTTP response body.\n\n NOTE: The referred field must be present at the top-level of the response\n message type.\n" } location: { path: 4 path: 1 path: 2 path: 8 path: 5 span: 363 span: 2 span: 8 } location: { path: 4 path: 1 path: 2 path: 8 path: 1 span: 363 span: 9 span: 22 } location: { path: 4 path: 1 path: 2 path: 8 path: 3 span: 363 span: 25 span: 27 } location: { path: 4 path: 1 path: 2 path: 9 span: 368 span: 2 span: 45 leading_comments: " Additional HTTP bindings for the selector. Nested bindings must\n not contain an `additional_bindings` field themselves (that is,\n the nesting may only be one level deep).\n" } location: { path: 4 path: 1 path: 2 path: 9 path: 4 span: 368 span: 2 span: 10 } location: { path: 4 path: 1 path: 2 path: 9 path: 6 span: 368 span: 11 span: 19 } location: { path: 4 path: 1 path: 2 path: 9 path: 1 span: 368 span: 20 span: 39 } location: { path: 4 path: 1 path: 2 path: 9 path: 3 span: 368 span: 42 span: 44 } location: { path: 4 path: 2 span: 372 span: 0 span: 378 span: 1 leading_comments: " A custom pattern is used for defining custom HTTP verb.\n" } location: { path: 4 path: 2 path: 1 span: 372 span: 8 span: 25 } location: { path: 4 path: 2 path: 2 path: 0 span: 374 span: 2 span: 18 leading_comments: " The name of this custom HTTP verb.\n" } location: { path: 4 path: 2 path: 2 path: 0 path: 5 span: 374 span: 2 span: 8 } location: { path: 4 path: 2 path: 2 path: 0 path: 1 span: 374 span: 9 span: 13 } location: { path: 4 path: 2 path: 2 path: 0 path: 3 span: 374 span: 16 span: 17 } location: { path: 4 path: 2 path: 2 path: 1 span: 377 span: 2 span: 18 leading_comments: " The path matched by this custom verb.\n" } location: { path: 4 path: 2 path: 2 path: 1 path: 5 span: 377 span: 2 span: 8 } location: { path: 4 path: 2 path: 2 path: 1 path: 1 span: 377 span: 9 span: 13 } location: { path: 4 path: 2 path: 2 path: 1 path: 3 span: 377 span: 16 span: 17 } } syntax: "proto3" }
proto_file: { name: "google/protobuf/descriptor.proto" package: "google.protobuf" message_type: { name: "FileDescriptorSet" field: { name: "file" number: 1 label: LABEL_REPEATED type: TYPE_MESSAGE type_name: ".google.protobuf.FileDescriptorProto" json_name: "file" } } message_type: { name: "FileDescriptorProto" field: { name: "name" number: 1 label: LABEL_OPTIONAL type: TYPE_STRING json_name: "name" } field: { name: "package" number: 2 label: LABEL_OPTIONAL type: TYPE_STRING json_name: "package" } field: { name: "dependency" number: 3 label: LABEL_REPEATED type: TYPE_STRING json_name: "dependency" } field: { name: "public_dependency" number: 10 label: LABEL_REPEATED type: TYPE_INT32 json_name: "publicDependency" } field: { name: "weak_dependency" number: 11 label: LABEL_REPEATED type: TYPE_INT32 json_name: "weakDependency" } field: { name: "message_type" number: 4 label: LABEL_REPEATED type: TYPE_MESSAGE type_name: ".google.protobuf.DescriptorProto" json_name: "messageType" } field: { name: "enum_type" number: 5 label: LABEL_REPEATED type: TYPE_MESSAGE type_name: ".google.protobuf.EnumDescriptorProto" json_name: "enumType" } field: { name: "service" number: 6 label: LABEL_REPEATED type: TYPE_MESSAGE type_name: ".google.protobuf.ServiceDescriptorProto" json_name: "service" } field: { name: "extension" number: 7 label: LABEL_REPEATED type: TYPE_MESSAGE type_name: ".google.protobuf.FieldDescriptorProto" json_name: "extension" } field: { name: "options" number: 8 label: LABEL_OPTIONAL type: TYPE_MESSAGE type_name: ".google.protobuf.FileOptions" json_name: "options" } field: { name: "source_code_info" number: 9 label: LABEL_OPTIONAL type: TYPE_MESSAGE type_name: ".google.protobuf.SourceCodeInfo" json_name: "sourceCodeInfo" } field: { name: "syntax" number: 12 label: LABEL_OPTIONAL type: TYPE_STRING json_name: "syntax" } field: { name: "edition" number: 13 label: LABEL_OPTIONAL type: TYPE_STRING json_name: "edition" } } message_type: { name: "DescriptorProto" field: { name: "name" number: 1 label: LABEL_OPTIONAL type: TYPE_STRING json_name: "name" } field: { name: "field" number: 2 label: LABEL_REPEATED type: TYPE_MESSAGE type_name: ".google.protobuf.FieldDescriptorProto" json_name: "field" } field: { name: "extension" number: 6 label: LABEL_REPEATED type: TYPE_MESSAGE type_name: ".google.protobuf.FieldDescriptorProto" json_name: "extension" } field: { name: "nested_type" number: 3 label: LABEL_REPEATED type: TYPE_MESSAGE type_name: ".google.protobuf.DescriptorProto" json_name: "nestedType" } field: { name: "enum_type" number: 4 label: LABEL_REPEATED type: TYPE_MESSAGE type_name: ".google.protobuf.EnumDescriptorProto" json_name: "enumType" } field: { name: "extension_range" number: 5 label: LABEL_REPEATED type: TYPE_MESSAGE type_name: ".google.protobuf.DescriptorProto.ExtensionRange" json_name: "extensionRange" } field: { name: "oneof_decl" number: 8 label: LABEL_REPEATED type: TYPE_MESSAGE type_name: ".google.protobuf.OneofDescriptorProto" json_name: "oneofDecl" } field: { name: "options" number: 7 label: LABEL_OPTIONAL type: TYPE_MESSAGE type_name: ".google.protobuf.MessageOptions" json_name: "options" } field: { name: "reserved_range" number: 9 label: LABEL_REPEATED type: TYPE_MESSAGE type_name: ".google.protobuf.DescriptorProto.ReservedRange" json_name: "reservedRange" } field: { name: "reserved_name" number: 10 label: LABEL_REPEATED type: TYPE_STRING json_name: "reservedName" } nested_type: { name: "ExtensionRange" field: { name: "start" number: 1 label: LABEL_OPTIONAL type: TYPE_INT32 json_name: "start" } field: { name: "end" number: 2 label: LABEL_OPTIONAL type: TYPE_INT32 json_name: "end" } field: { name: "options" number: 3 label: LABEL_OPTIONAL type: TYPE_MESSAGE type_name: ".google.protobuf.ExtensionRangeOptions" json_name: "options" } } nested_type: { name: "ReservedRange" field: { name: "start" number: 1 label: LABEL_OPTIONAL type: TYPE_INT32 json_name: "start" } field: { name: "end" number: 2 label: LABEL_OPTIONAL type: TYPE_INT32 json_name: "end" } } } message_type: { name: "ExtensionRangeOptions" field: { name: "uninterpreted_option" number: 999 label: LABEL_REPEATED type: TYPE_MESSAGE type_name: ".google.protobuf.UninterpretedOption" json_name: "uninterpretedOption" } field: { name: "declaration" number: 2 label: LABEL_REPEATED type: TYPE_MESSAGE type_name: ".google.protobuf.ExtensionRangeOptions.Declaration" json_name: "declaration" options: { retention: RETENTION_SOURCE } } field: { name: "features" number: 50 label: LABEL_OPTIONAL type: TYPE_MESSAGE type_name: ".google.protobuf.FeatureSet" json_name: "features" } field: { name: "verification" number: 3 label: LABEL_OPTIONAL type: TYPE_ENUM type_name: ".google.protobuf.ExtensionRangeOptions.VerificationState" default_value: "UNVERIFIED" json_name: "verification" } nested_type: { name: "Declaration" field: { name: "number" number: 1 label: LABEL_OPTIONAL type: TYPE_INT32 json_name: "number" } field: { name: "full_name" number: 2 label: LABEL_OPTIONAL type: TYPE_STRING json_name: "fullName" } field: { name: "type" number: 3 label: LABEL_OPTIONAL type: TYPE_STRING json_name: "type" } field: { name: "reserved" number: 5 label: LABEL_OPTIONAL type: TYPE_BOOL json_name: "reserved" } field: { name: "repeated" number: 6 label: LABEL_OPTIONAL type: TYPE_BOOL json_name: "repeated" } reserved_range: { start: 4 end: 5 } } enum_type: { name: "VerificationState" value: { name: "DECLARATION" number: 0 } value: { name: "UNVERIFIED" number: 1 } } extension_range: { start: 1000 end: 536870912 } } message_type: { name: "FieldDescriptorProto" field: { name: "name" number: 1 label: LABEL_OPTIONAL type: TYPE_STRING json_name: "name" } field: { name: "number" number: 3 label: LABEL_OPTIONAL type: TYPE_INT32 json_name: "number" } field: { name: "label" number: 4 label: LABEL_OPTIONAL type: TYPE_ENUM type_name: ".google.protobuf.FieldDescriptorProto.Label" json_name: "label" } field: { name: "type" number: 5 label: LABEL_OPTIONAL type: TYPE_ENUM type_name: ".google.protobuf.FieldDescriptorProto.Type" json_name: "type" } field: { name: "type_name" number: 6 label: LABEL_OPTIONAL type: TYPE_STRING json_name: "typeName" } field: { name: "extendee" number: 2 label: LABEL_OPTIONAL type: TYPE_STRING json_name: "extendee" } field: { name: "default_value" number: 7 label: LABEL_OPTIONAL type: TYPE_STRING json_name: "defaultValue" } field: { name: "oneof_index" number: 9 label: LABEL_OPTIONAL type: TYPE_INT32 json_name: "oneofIndex" } field: { name: "json_name" number: 10 label: LABEL_OPTIONAL type: TYPE_STRING json_name: "jsonName" } field: { name: "options" number: 8 label: LABEL_OPTIONAL type: TYPE_MESSAGE type_name: ".google.protobuf.FieldOptions" json_name: "options" } field: { name: "proto3_optional" number: 17 label: LABEL_OPTIONAL type: TYPE_BOOL json_name: "proto3Optional" } enum_type: { name: "Type" value: { name: "TYPE_DOUBLE" number: 1 } value: { name: "TYPE_FLOAT" number: 2 } value: { name: "TYPE_INT64" number: 3 } value: { name: "TYPE_UINT64" number: 4 } value: { name: "TYPE_INT32" number: 5 } value: { name: "TYPE_FIXED64" number: 6 } value: { name: "TYPE_FIXED32" number: 7 } value: { name: "TYPE_BOOL" number: 8 } value: { name: "TYPE_STRING" number: 9 } value: { name: "TYPE_GROUP" number: 10 } value: { name: "TYPE_MESSAGE" number: 11 } value: { name: "TYPE_BYTES" number: 12 } value: { name: "TYPE_UINT32" number: 13 } value: { name: "TYPE_ENUM" number: 14 } value: { name: "TYPE_SFIXED32" number: 15 } value: { name: "TYPE_SFIXED64" number: 16 } value: { name: "TYPE_SINT32" number: 17 } value: { name: "TYPE_SINT64" number: 18 } } enum_type: { name: "Label" value: { name: "LABEL_OPTIONAL" number: 1 } value: { name: "LABEL_REQUIRED" number: 2 } value: { name: "LABEL_REPEATED" number: 3 } } } message_type: { name: "OneofDescriptorProto" field: { name: "name" number: 1 label: LABEL_OPTIONAL type: TYPE_STRING json_name: "name" } field: { name: "options" number: 2 label: LABEL_OPTIONAL type: TYPE_MESSAGE type_name: ".google.protobuf.OneofOptions" json_name: "options" } } message_type: { name: "EnumDescriptorProto" field: { name: "name" number: 1 label: LABEL_OPTIONAL type: TYPE_STRING json_name: "name" } field: { name: "value" number: 2 label: LABEL_REPEATED type: TYPE_MESSAGE type_name: ".google.protobuf.EnumValueDescriptorProto" json_name: "value" } field: { name: "options" number: 3 label: LABEL_OPTIONAL type: TYPE_MESSAGE type_name: ".google.protobuf.EnumOptions" json_name: "options" } field: { name: "reserved_range" number: 4 label: LABEL_REPEATED type: TYPE_MESSAGE type_name: ".google.protobuf.EnumDescriptorProto.EnumReservedRange" json_name: "reservedRange" } field: { name: "reserved_name" number: 5 label: LABEL_REPEATED type: TYPE_STRING json_name: "reservedName" } nested_type: { name: "EnumReservedRange" field: { name: "start" number: 1 label: LABEL_OPTIONAL type: TYPE_INT32 json_name: "start" } field: { name: "end" number: 2 label: LABEL_OPTIONAL type: TYPE_INT32 json_name: "end" } } } message_type: { name: "EnumValueDescriptorProto" field: { name: "name" number: 1 label: LABEL_OPTIONAL type: TYPE_STRING json_name: "name" } field: { name: "number" number: 2 label: LABEL_OPTIONAL type: TYPE_INT32 json_name: "number" } field: { name: "options" number: 3 label: LABEL_OPTIONAL type: TYPE_MESSAGE type_name: ".google.protobuf.EnumValueOptions" json_name: "options" } } message_type: { name: "ServiceDescriptorProto" field: { name: "name" number: 1 label: LABEL_OPTIONAL type: TYPE_STRING json_name: "name" } field: { name: "method" number: 2 label: LABEL_REPEATED type: TYPE_MESSAGE type_name: ".google.protobuf.MethodDescriptorProto" json_name: "method" } field: { name: "options" number: 3 label: LABEL_OPTIONAL type: TYPE_MESSAGE type_name: ".google.protobuf.ServiceOptions" json_name: "options" } } message_type: { name: "MethodDescriptorProto" field: { name: "name" number: 1 label: LABEL_OPTIONAL type: TYPE_STRING json_name: "name" } field: { name: "input_type" number: 2 label: LABEL_OPTIONAL type: TYPE_STRING json_name: "inputType" } field: { name: "output_type" number: 3 label: LABEL_OPTIONAL type: TYPE_STRING json_name: "outputType" } field: { name: "options" number: 4 label: LABEL_OPTIONAL type: TYPE_MESSAGE type_name: ".google.protobuf.MethodOptions" json_name: "options" } field: { name: "client_streaming" number: 5 label: LABEL_OPTIONAL type: TYPE_BOOL default_value: "false" json_name: "clientStreaming" } field: { name: "server_streaming" number: 6 label: LABEL_OPTIONAL type: TYPE_BOOL default_value: "false" json_name: "serverStreaming" } } message_type: { name: "FileOptions" field: { name: "java_package" number: 1 label: LABEL_OPTIONAL type: TYPE_STRING json_name: "javaPackage" } field: { name: "java_outer_classname" number: 8 label: LABEL_OPTIONAL type: TYPE_STRING json_name: "javaOuterClassname" } field: { name: "java_multiple_files" number: 10 label: LABEL_OPTIONAL type: TYPE_BOOL default_value: "false" json_name: "javaMultipleFiles" } field: { name: "java_generate_equals_and_hash" number: 20 label: LABEL_OPTIONAL type: TYPE_BOOL json_name: "javaGenerateEqualsAndHash" options: { deprecated: true } } field: { name: "java_string_check_utf8" number: 27 label: LABEL_OPTIONAL type: TYPE_BOOL default_value: "false" json_name: "javaStringCheckUtf8" } field: { name: "optimize_for" number: 9 label: LABEL_OPTIONAL type: TYPE_ENUM type_name: ".google.protobuf.FileOptions.OptimizeMode" default_value: "SPEED" json_name: "optimizeFor" } field: { name: "go_package" number: 11 label: LABEL_OPTIONAL type: TYPE_STRING json_name: "goPackage" } field: { name: "cc_generic_services" number: 16 label: LABEL_OPTIONAL type: TYPE_BOOL default_value: "false" json_name: "ccGenericServices" } field: { name: "java_generic_services" number: 17 label: LABEL_OPTIONAL type: TYPE_BOOL default_value: "false" json_name: "javaGenericServices" } field: { name: "py_generic_services" number: 18 label: LABEL_OPTIONAL type: TYPE_BOOL default_value: "false" json_name: "pyGenericServices" } field: { name: "php_generic_services" number: 42 label: LABEL_OPTIONAL type: TYPE_BOOL default_value: "false" json_name: "phpGenericServices" } field: { name: "deprecated" number: 23 label: LABEL_OPTIONAL type: TYPE_BOOL default_value: "false" json_name: "deprecated" } field: { name: "cc_enable_arenas" number: 31 label: LABEL_OPTIONAL type: TYPE_BOOL default_value: "true" json_name: "ccEnableArenas" } field: { name: "objc_class_prefix" number: 36 label: LABEL_OPTIONAL type: TYPE_STRING json_name: "objcClassPrefix" } field: { name: "csharp_namespace" number: 37 label: LABEL_OPTIONAL type: TYPE_STRING json_name: "csharpNamespace" } field: { name: "swift_prefix" number: 39 label: LABEL_OPTIONAL type: TYPE_STRING json_name: "swiftPrefix" } field: { name: "php_class_prefix" number: 40 label: LABEL_OPTIONAL type: TYPE_STRING json_name: "phpClassPrefix" } field: { name: "php_namespace" number: 41 label: LABEL_OPTIONAL type: TYPE_STRING json_name: "phpNamespace" } field: { name: "php_metadata_namespace" number: 44 label: LABEL_OPTIONAL type: TYPE_STRING json_name: "phpMetadataNamespace" } field: { name: "ruby_package" number: 45 label: LABEL_OPTIONAL type: TYPE_STRING json_name: "rubyPackage" } field: { name: "features" number: 50 label: LABEL_OPTIONAL type: TYPE_MESSAGE type_name: ".google.protobuf.FeatureSet" json_name: "features" } field: { name: "uninterpreted_option" number: 999 label: LABEL_REPEATED type: TYPE_MESSAGE type_name: ".google.protobuf.UninterpretedOption" json_name: "uninterpretedOption" } enum_type: { name: "OptimizeMode" value: { name: "SPEED" number: 1 } value: { name: "CODE_SIZE" number: 2 } value: { name: "LITE_RUNTIME" number: 3 } } extension_range: { start: 1000 end: 536870912 } reserved_range: { start: 38 end: 39 } } message_type: { name: "MessageOptions" field: { name: "message_set_wire_format" number: 1 label: LABEL_OPTIONAL type: TYPE_BOOL default_value: "false" json_name: "messageSetWireFormat" } field: { name: "no_standard_descriptor_accessor" number: 2 label: LABEL_OPTIONAL type: TYPE_BOOL default_value: "false" json_name: "noStandardDescriptorAccessor" } field: { name: "deprecated" number: 3 label: LABEL_OPTIONAL type: TYPE_BOOL default_value: "false" json_name: "deprecated" } field: { name: "map_entry" number: 7 label: LABEL_OPTIONAL type: TYPE_BOOL json_name: "mapEntry" } field: { name: "deprecated_legacy_json_field_conflicts" number: 11 label: LABEL_OPTIONAL type: TYPE_BOOL json_name: "deprecatedLegacyJsonFieldConflicts" options: { deprecated: true } } field: { name: "features" number: 12 label: LABEL_OPTIONAL type: TYPE_MESSAGE type_name: ".google.protobuf.FeatureSet" json_name: "features" } field: { name: "uninterpreted_option" number: 999 label: LABEL_REPEATED type: TYPE_MESSAGE type_name: ".google.protobuf.UninterpretedOption" json_name: "uninterpretedOption" } extension_range: { start: 1000 end: 536870912 } reserved_range: { start: 4 end: 5 } reserved_range: { start: 5 end: 6 } reserved_range: { start: 6 end: 7 } reserved_range: { start: 8 end: 9 } reserved_range: { start: 9 end: 10 } } message_type: { name: "FieldOptions" field: { name: "ctype" number: 1 label: LABEL_OPTIONAL type: TYPE_ENUM type_name: ".google.protobuf.FieldOptions.CType" default_value: "STRING" json_name: "ctype" } field: { name: "packed" number: 2 label: LABEL_OPTIONAL type: TYPE_BOOL json_name: "packed" } field: { name: "jstype" number: 6 label: LABEL_OPTIONAL type: TYPE_ENUM type_name: ".google.protobuf.FieldOptions.JSType" default_value: "JS_NORMAL" json_name: "jstype" } field: { name: "lazy" number: 5 label: LABEL_OPTIONAL type: TYPE_BOOL default_value: "false" json_name: "lazy" } field: { name: "unverified_lazy" number: 15 label: LABEL_OPTIONAL type: TYPE_BOOL default_value: "false" json_name: "unverifiedLazy" } field: { name: "deprecated" number: 3 label: LABEL_OPTIONAL type: TYPE_BOOL default_value: "false" json_name: "deprecated" } field: { name: "weak" number: 10 label: LABEL_OPTIONAL type: TYPE_BOOL default_value: "false" json_name: "weak" } field: { name: "debug_redact" number: 16 label: LABEL_OPTIONAL type: TYPE_BOOL default_value: "false" json_name: "debugRedact" } field: { name: "retention" number: 17 label: LABEL_OPTIONAL type: TYPE_ENUM type_name: ".google.protobuf.FieldOptions.OptionRetention" json_name: "retention" } field: { name: "targets" number: 19 label: LABEL_REPEATED type: TYPE_ENUM type_name: ".google.protobuf.FieldOptions.OptionTargetType" json_name: "targets" } field: { name: "edition_defaults" number: 20 label: LABEL_REPEATED type: TYPE_MESSAGE type_name: ".google.protobuf.FieldOptions.EditionDefault" json_name: "editionDefaults" } field: { name: "features" number: 21 label: LABEL_OPTIONAL type: TYPE_MESSAGE type_name: ".google.protobuf.FeatureSet" json_name: "features" } field: { name: "uninterpreted_option" number: 999 label: LABEL_REPEATED type: TYPE_MESSAGE type_name: ".google.protobuf.UninterpretedOption" json_name: "uninterpretedOption" } nested_type: { name: "EditionDefault" field: { name: "edition" number: 1 label: LABEL_OPTIONAL type: TYPE_STRING json_name: "edition" } field: { name: "value" number: 2 label: LABEL_OPTIONAL type: TYPE_STRING json_name: "value" } } enum_type: { name: "CType" value: { name: "STRING" number: 0 } value: { name: "CORD" number: 1 } value: { name: "STRING_PIECE" number: 2 } } enum_type: { name: "JSType" value: { name: "JS_NORMAL" number: 0 } value: { name: "JS_STRING" number: 1 } value: { name: "JS_NUMBER" number: 2 } } enum_type: { name: "OptionRetention" value: { name: "RETENTION_UNKNOWN" number: 0 } value: { name: "RETENTION_RUNTIME" number: 1 } value: { name: "RETENTION_SOURCE" number: 2 } } enum_type: { name: "OptionTargetType" value: { name: "TARGET_TYPE_UNKNOWN" number: 0 } value: { name: "TARGET_TYPE_FILE" number: 1 } value: { name: "TARGET_TYPE_EXTENSION_RANGE" number: 2 } value: { name: "TARGET_TYPE_MESSAGE" number: 3 } value: { name: "TARGET_TYPE_FIELD" number: 4 } value: { name: "TARGET_TYPE_ONEOF" number: 5 } value: { name: "TARGET_TYPE_ENUM" number: 6 } value: { name: "TARGET_TYPE_ENUM_ENTRY" number: 7 } value: { name: "TARGET_TYPE_SERVICE" number: 8 } value: { name: "TARGET_TYPE_METHOD" number: 9 } } extension_range: { start: 1000 end: 536870912 } reserved_range: { start: 4 end: 5 } reserved_range: { start: 18 end: 19 } } message_type: { name: "OneofOptions" field: { name: "features" number: 1 label: LABEL_OPTIONAL type: TYPE_MESSAGE type_name: ".google.protobuf.FeatureSet" json_name: "features" } field: { name: "uninterpreted_option" number: 999 label: LABEL_REPEATED type: TYPE_MESSAGE type_name: ".google.protobuf.UninterpretedOption" json_name: "uninterpretedOption" } extension_range: { start: 1000 end: 536870912 } } message_type: { name: "EnumOptions" field: { name: "allow_alias" number: 2 label: LABEL_OPTIONAL type: TYPE_BOOL json_name: "allowAlias" } field: { name: "deprecated" number: 3 label: LABEL_OPTIONAL type: TYPE_BOOL default_value: "false" json_name: "deprecated" } field: { name: "deprecated_legacy_json_field_conflicts" number: 6 label: LABEL_OPTIONAL type: TYPE_BOOL json_name: "deprecatedLegacyJsonFieldConflicts" options: { deprecated: true } } field: { name: "features" number: 7 label: LABEL_OPTIONAL type: TYPE_MESSAGE type_name: ".google.protobuf.FeatureSet" json_name: "features" } field: { name: "uninterpreted_option" number: 999 label: LABEL_REPEATED type: TYPE_MESSAGE type_name: ".google.protobuf.UninterpretedOption" json_name: "uninterpretedOption" } extension_range: { start: 1000 end: 536870912 } reserved_range: { start: 5 end: 6 } } message_type: { name: "EnumValueOptions" field: { name: "deprecated" number: 1 label: LABEL_OPTIONAL type: TYPE_BOOL default_value: "false" json_name: "deprecated" } field: { name: "features" number: 2 label: LABEL_OPTIONAL type: TYPE_MESSAGE type_name: ".google.protobuf.FeatureSet" json_name: "features" } field: { name: "debug_redact" number: 3 label: LABEL_OPTIONAL type: TYPE_BOOL default_value: "false" json_name: "debugRedact" } field: { name: "uninterpreted_option" number: 999 label: LABEL_REPEATED type: TYPE_MESSAGE type_name: ".google.protobuf.UninterpretedOption" json_name: "uninterpretedOption" } extension_range: { start: 1000 end: 536870912 } } message_type: { name: "ServiceOptions" field: { name: "features" number: 34 label: LABEL_OPTIONAL type: TYPE_MESSAGE type_name: ".google.protobuf.FeatureSet" json_name: "features" } field: { name: "deprecated" number: 33 label: LABEL_OPTIONAL type: TYPE_BOOL default_value: "false" json_name: "deprecated" } field: { name: "uninterpreted_option" number: 999 label: LABEL_REPEATED type: TYPE_MESSAGE type_name: ".google.protobuf.UninterpretedOption" json_name: "uninterpretedOption" } extension_range: { start: 1000 end: 536870912 } } message_type: { name: "MethodOptions" field: { name: "deprecated" number: 33 label: LABEL_OPTIONAL type: TYPE_BOOL default_value: "false" json_name: "deprecated" } field: { name: "idempotency_level" number: 34 label: LABEL_OPTIONAL type: TYPE_ENUM type_name: ".google.protobuf.MethodOptions.IdempotencyLevel" default_value: "IDEMPOTENCY_UNKNOWN" json_name: "idempotencyLevel" } field: { name: "features" number: 35 label: LABEL_OPTIONAL type: TYPE_MESSAGE type_name: ".google.protobuf.FeatureSet" json_name: "features" } field: { name: "uninterpreted_option" number: 999 label: LABEL_REPEATED type: TYPE_MESSAGE type_name: ".google.protobuf.UninterpretedOption" json_name: "uninterpretedOption" } enum_type: { name: "IdempotencyLevel" value: { name: "IDEMPOTENCY_UNKNOWN" number: 0 } value: { name: "NO_SIDE_EFFECTS" number: 1 } value: { name: "IDEMPOTENT" number: 2 } } extension_range: { start: 1000 end: 536870912 } } message_type: { name: "UninterpretedOption" field: { name: "name" number: 2 label: LABEL_REPEATED type: TYPE_MESSAGE type_name: ".google.protobuf.UninterpretedOption.NamePart" json_name: "name" } field: { name: "identifier_value" number: 3 label: LABEL_OPTIONAL type: TYPE_STRING json_name: "identifierValue" } field: { name: "positive_int_value" number: 4 label: LABEL_OPTIONAL type: TYPE_UINT64 json_name: "positiveIntValue" } field: { name: "negative_int_value" number: 5 label: LABEL_OPTIONAL type: TYPE_INT64 json_name: "negativeIntValue" } field: { name: "double_value" number: 6 label: LABEL_OPTIONAL type: TYPE_DOUBLE json_name: "doubleValue" } field: { name: "string_value" number: 7 label: LABEL_OPTIONAL type: TYPE_BYTES json_name: "stringValue" } field: { name: "aggregate_value" number: 8 label: LABEL_OPTIONAL type: TYPE_STRING json_name: "aggregateValue" } nested_type: { name: "NamePart" field: { name: "name_part" number: 1 label: LABEL_REQUIRED type: TYPE_STRING json_name: "namePart" } field: { name: "is_extension" number: 2 label: LABEL_REQUIRED type: TYPE_BOOL json_name: "isExtension" } } } message_type: { name: "FeatureSet" field: { name: "field_presence" number: 1 label: LABEL_OPTIONAL type: TYPE_ENUM type_name: ".google.protobuf.FeatureSet.FieldPresence" json_name: "fieldPresence" options: { retention: RETENTION_RUNTIME targets: TARGET_TYPE_FIELD targets: TARGET_TYPE_FILE } } field: { name: "enum_type" number: 2 label: LABEL_OPTIONAL type: TYPE_ENUM type_name: ".google.protobuf.FeatureSet.EnumType" json_name: "enumType" options: { retention: RETENTION_RUNTIME targets: TARGET_TYPE_ENUM targets: TARGET_TYPE_FILE } } field: { name: "repeated_field_encoding" number: 3 label: LABEL_OPTIONAL type: TYPE_ENUM type_name: ".google.protobuf.FeatureSet.RepeatedFieldEncoding" json_name: "repeatedFieldEncoding" options: { retention: RETENTION_RUNTIME targets: TARGET_TYPE_FIELD targets: TARGET_TYPE_FILE } } field: { name: "string_field_validation" number: 4 label: LABEL_OPTIONAL type: TYPE_ENUM type_name: ".google.protobuf.FeatureSet.StringFieldValidation" json_name: "stringFieldValidation" options: { retention: RETENTION_RUNTIME targets: TARGET_TYPE_FIELD targets: TARGET_TYPE_FILE } } field: { name: "message_encoding" number: 5 label: LABEL_OPTIONAL type: TYPE_ENUM type_name: ".google.protobuf.FeatureSet.MessageEncoding" json_name: "messageEncoding" options: { retention: RETENTION_RUNTIME targets: TARGET_TYPE_FIELD targets: TARGET_TYPE_FILE } } field: { name: "json_format" number: 6 label: LABEL_OPTIONAL type: TYPE_ENUM type_name: ".google.protobuf.FeatureSet.JsonFormat" json_name: "jsonFormat" options: { retention: RETENTION_RUNTIME targets: TARGET_TYPE_MESSAGE targets: TARGET_TYPE_ENUM targets: TARGET_TYPE_FILE } } field: { name: "raw_features" number: 999 label: LABEL_OPTIONAL type: TYPE_MESSAGE type_name: ".google.protobuf.FeatureSet" json_name: "rawFeatures" options: { targets: TARGET_TYPE_UNKNOWN } } enum_type: { name: "FieldPresence" value: { name: "FIELD_PRESENCE_UNKNOWN" number: 0 } value: { name: "EXPLICIT" number: 1 } value: { name: "IMPLICIT" number: 2 } value: { name: "LEGACY_REQUIRED" number: 3 } } enum_type: { name: "EnumType" value: { name: "ENUM_TYPE_UNKNOWN" number: 0 } value: { name: "OPEN" number: 1 } value: { name: "CLOSED" number: 2 } } enum_type: { name: "RepeatedFieldEncoding" value: { name: "REPEATED_FIELD_ENCODING_UNKNOWN" number: 0 } value: { name: "PACKED" number: 1 } value: { name: "EXPANDED" number: 2 } } enum_type: { name: "StringFieldValidation" value: { name: "STRING_FIELD_VALIDATION_UNKNOWN" number: 0 } value: { name: "MANDATORY" number: 1 } value: { name: "HINT" number: 2 } value: { name: "NONE" number: 3 } } enum_type: { name: "MessageEncoding" value: { name: "MESSAGE_ENCODING_UNKNOWN" number: 0 } value: { name: "LENGTH_PREFIXED" number: 1 } value: { name: "DELIMITED" number: 2 } } enum_type: { name: "JsonFormat" value: { name: "JSON_FORMAT_UNKNOWN" number: 0 } value: { name: "ALLOW" number: 1 } value: { name: "LEGACY_BEST_EFFORT" number: 2 } } extension_range: { start: 1000 end: 1001 } extension_range: { start: 1001 end: 1002 } extension_range: { start: 9995 end: 10000 } } message_type: { name: "SourceCodeInfo" field: { name: "location" number: 1 label: LABEL_REPEATED type: TYPE_MESSAGE type_name: ".google.protobuf.SourceCodeInfo.Location" json_name: "location" } nested_type: { name: "Location" field: { name: "path" number: 1 label: LABEL_REPEATED type: TYPE_INT32 json_name: "path" options: { packed: true } } field: { name: "span" number: 2 label: LABEL_REPEATED type: TYPE_INT32 json_name: "span" options: { packed: true } } field: { name: "leading_comments" number: 3 label: LABEL_OPTIONAL type: TYPE_STRING json_name: "leadingComments" } field: { name: "trailing_comments" number: 4 label: LABEL_OPTIONAL type: TYPE_STRING json_name: "trailingComments" } field: { name: "leading_detached_comments" number: 6 label: LABEL_REPEATED type: TYPE_STRING json_name: "leadingDetachedComments" } } } message_type: { name: "GeneratedCodeInfo" field: { name: "annotation" number: 1 label: LABEL_REPEATED type: TYPE_MESSAGE type_name: ".google.protobuf.GeneratedCodeInfo.Annotation" json_name: "annotation" } nested_type: { name: "Annotation" field: { name: "path" number: 1 label: LABEL_REPEATED type: TYPE_INT32 json_name: "path" options: { packed: true } } field: { name: "source_file" number: 2 label: LABEL_OPTIONAL type: TYPE_STRING json_name: "sourceFile" } field: { name: "begin" number: 3 label: LABEL_OPTIONAL type: TYPE_INT32 json_name: "begin" } field: { name: "end" number: 4 label: LABEL_OPTIONAL type: TYPE_INT32 json_name: "end" } field: { name: "semantic" number: 5 label: LABEL_OPTIONAL type: TYPE_ENUM type_name: ".google.protobuf.GeneratedCodeInfo.Annotation.Semantic" json_name: "semantic" } enum_type: { name: "Semantic" value: { name: "NONE" number: 0 } value: { name: "SET" number: 1 } value: { name: "ALIAS" number: 2 } } } } options: { java_package: "com.google.protobuf" java_outer_classname: "DescriptorProtos" optimize_for: SPEED go_package: "google.golang.org/protobuf/types/descriptorpb" cc_enable_arenas: true objc_class_prefix: "GPB" csharp_namespace: "Google.Protobuf.Reflection" } source_code_info: { location: { span: 38 span: 0 span: 1156 span: 1 } location: { path: 12 span: 38 span: 0 span: 18 leading_detached_comments: " Protocol Buffers - Google's data interchange format\n Copyright 2008 Google Inc.  All rights reserved.\n https://developers.google.com/protocol-buffers/\n\n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are\n met:\n\n     * Redistributions of source code must retain the above copyright\n notice, this list of conditions and the following disclaimer.\n     * Redistributions in binary form must reproduce the above\n copyright notice, this list of conditions and the following disclaimer\n in the documentation and/or other materials provided with the\n distribution.\n     * Neither the name of Google Inc. nor the names of its\n contributors may be used to endorse or promote products derived from\n this software without specific prior written permission.\n\n THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n" leading_detached_comments: " Author: kenton@google.com (Kenton Varda)\n  Based on original Protocol Buffers design by\n  Sanjay Ghemawat, Jeff Dean, and others.\n\n The messages in this file describe the definitions found in .proto files.\n A valid .proto file can be translated directly to a FileDescriptorProto\n without any other information (e.g. without reading its imports).\n" } location: { path: 2 span: 40 span: 0 span: 24 } location: { path: 8 span: 42 span: 0 span: 68 } location: { path: 8 path: 11 span: 42 span: 0 span: 68 } location: { path: 8 span: 43 span: 0 span: 44 } location: { path: 8 path: 1 span: 43 span: 0 span: 44 } location: { path: 8 span: 44 span: 0 span: 49 } location: { path: 8 path: 8 span: 44 span: 0 span: 49 } location: { path: 8 span: 45 span: 0 span: 55 } location: { path: 8 path: 37 span: 45 span: 0 span: 55 } location: { path: 8 span: 46 span: 0 span: 33 } location: { path: 8 path: 36 span: 46 span: 0 span: 33 } location: { path: 8 span: 47 span: 0 span: 31 } location: { path: 8 path: 31 span: 47 span: 0 span: 31 } location: { path: 8 span: 51 span: 0 span: 28 } location: { path: 8 path: 9 span: 51 span: 0 span: 28 leading_comments: " descriptor.proto must be optimized for speed because reflection-based\n algorithms don't work during bootstrapping.\n" } location: { path: 4 path: 0 span: 55 span: 0 span: 57 span: 1 leading_comments: " The protocol compiler can output a FileDescriptorSet containing the .proto\n files it parses.\n" } location: { path: 4 path: 0 path: 1 span: 55 span: 8 span: 25 } location: { path: 4 path: 0 path: 2 path: 0 span: 56 span: 2 span: 40 } location: { path: 4 path: 0 path: 2 path: 0 path: 4 span: 56 span: 2 span: 10 } location: { path: 4 path: 0 path: 2 path: 0 path: 6 span: 56 span: 11 span: 30 } location: { path: 4 path: 0 path: 2 path: 0 path: 1 span: 56 span: 31 span: 35 } location: { path: 4 path: 0 path: 2 path: 0 path: 3 span: 56 span: 38 span: 39 } location: { path: 4 path: 1 span: 60 span: 0 span: 94 span: 1 leading_comments: " Describes a complete .proto file.\n" } location: { path: 4 path: 1 path: 1 span: 60 span: 8 span: 27 } location: { path: 4 path: 1 path: 2 path: 0 span: 61 span: 2 span: 27 trailing_comments: " file name, relative to root of source tree\n" } location: { path: 4 path: 1 path: 2 path: 0 path: 4 span: 61 span: 2 span: 10 } location: { path: 4 path: 1 path: 2 path: 0 path: 5 span: 61 span: 11 span: 17 } location: { path: 4 path: 1 path: 2 path: 0 path: 1 span: 61 span: 18 span: 22 } location: { path: 4 path: 1 path: 2 path: 0 path: 3 span: 61 span: 25 span: 26 } location: { path: 4 path: 1 path: 2 path: 1 span: 62 span: 2 span: 30 trailing_comments: " e.g. \"foo\", \"foo.bar\", etc.\n" } location: { path: 4 path: 1 path: 2 path: 1 path: 4 span: 62 span: 2 span: 10 } location: { path: 4 path: 1 path: 2 path: 1 path: 5 span: 62 span: 11 span: 17 } location: { path: 4 path: 1 path: 2 path: 1 path: 1 span: 62 span: 18 span: 25 } location: { path: 4 path: 1 path: 2 path: 1 path: 3 span: 62 span: 28 span: 29 } location: { path: 4 path: 1 path: 2 path: 2 span: 65 span: 2 span: 33 leading_comments: " Names of files imported by this file.\n" } location: { path: 4 path: 1 path: 2 path: 2 path: 4 span: 65 span: 2 span: 10 } location: { path: 4 path: 1 path: 2 path: 2 path: 5 span: 65 span: 11 span: 17 } location: { path: 4 path: 1 path: 2 path: 2 path: 1 span: 65 span: 18 span: 28 } location: { path: 4 path: 1 path: 2 path: 2 path: 3 span: 65 span: 31 span: 32 } location: { path: 4 path: 1 path: 2 path: 3 span: 67 span: 2 span: 40 leading_comments: " Indexes of the public imported files in the dependency list above.\n" } location: { path: 4 path: 1 path: 2 path: 3 path: 4 span: 67 span: 2 span: 10 } location: { path: 4 path: 1 path: 2 path: 3 path: 5 span: 67 span: 11 span: 16 } location: { path: 4 path: 1 path: 2 path: 3 path: 1 span: 67 span: 17 span: 34 } location: { path: 4 path: 1 path: 2 path: 3 path: 3 span: 67 span: 37 span: 39 } location: { path: 4 path: 1 path: 2 path: 4 span: 70 span: 2 span: 38 leading_comments: " Indexes of the weak imported files in the dependency list.\n For Google-internal migration only. Do not use.\n" } location: { path: 4 path: 1 path: 2 path: 4 path: 4 span: 70 span: 2 span: 10 } location: { path: 4 path: 1 path: 2 path: 4 path: 5 span: 70 span: 11 span: 16 } location: { path: 4 path: 1 path: 2 path: 4 path: 1 span: 70 span: 17 span: 32 } location: { path: 4 path: 1 path: 2 path: 4 path: 3 span: 70 span: 35 span: 37 } location: { path: 4 path: 1 path: 2 path: 5 span: 73 span: 2 span: 44 leading_comments: " All top-level definitions in this file.\n" } location: { path: 4 path: 1 path: 2 path: 5 path: 4 span: 73 span: 2 span: 10 } location: { path: 4 path: 1 path: 2 path: 5 path: 6 span: 73 span: 11 span: 26 } location: { path: 4 path: 1 path: 2 path: 5 path: 1 span: 73 span: 27 span: 39 } location: { path: 4 path: 1 path: 2 path: 5 path: 3 span: 73 span: 42 span: 43 } location: { path: 4 path: 1 path: 2 path: 6 span: 74 span: 2 span: 45 } location: { path: 4 path: 1 path: 2 path: 6 path: 4 span: 74 span: 2 span: 10 } location: { path: 4 path: 1 path: 2 path: 6 path: 6 span: 74 span: 11 span: 30 } location: { path: 4 path: 1 path: 2 path: 6 path: 1 span: 74 span: 31 span: 40 } location: { path: 4 path: 1 path: 2 path: 6 path: 3 span: 74 span: 43 span: 44 } location: { path: 4 path: 1 path: 2 path: 7 span: 75 span: 2 span: 46 } location: { path: 4 path: 1 path: 2 path: 7 path: 4 span: 75 span: 2 span: 10 } location: { path: 4 path: 1 path: 2 path: 7 path: 6 span: 75 span: 11 span: 33 } location: { path: 4 path: 1 path: 2 path: 7 path: 1 span: 75 span: 34 span: 41 } location: { path: 4 path: 1 path: 2 path: 7 path: 3 span: 75 span: 44 span: 45 } location: { path: 4 path: 1 path: 2 path: 8 span: 76 span: 2 span: 46 } location: { path: 4 path: 1 path: 2 path: 8 path: 4 span: 76 span: 2 span: 10 } location: { path: 4 path: 1 path: 2 path: 8 path: 6 span: 76 span: 11 span: 31 } location: { path: 4 path: 1 path: 2 path: 8 path: 1 span: 76 span: 32 span: 41 } location: { path: 4 path: 1 path: 2 path: 8 path: 3 span: 76 span: 44 span: 45 } location: { path: 4 path: 1 path: 2 path: 9 span: 78 span: 2 span: 35 } location: { path: 4 path: 1 path: 2 path: 9 path: 4 span: 78 span: 2 span: 10 } location: { path: 4 path: 1 path: 2 path: 9 path: 6 span: 78 span: 11 span: 22 } location: { path: 4 path: 1 path: 2 path: 9 path: 1 span: 78 span: 23 span: 30 } location: { path: 4 path: 1 path: 2 path: 9 path: 3 span: 78 span: 33 span: 34 } location: { path: 4 path: 1 path: 2 path: 10 span: 84 span: 2 span: 47 leading_comments: " This field contains optional information about the original source code.\n You may safely remove this entire field without harming runtime\n functionality of the descriptors -- the information is needed only by\n development tools.\n" } location: { path: 4 path: 1 path: 2 path: 10 path: 4 span: 84 span: 2 span: 10 } location: { path: 4 path: 1 path: 2 path: 10 path: 6 span: 84 span: 11 span: 25 } location: { path: 4 path: 1 path: 2 path: 10 path: 1 span: 84 span: 26 span: 42 } location: { path: 4 path: 1 path: 2 path: 10 path: 3 span: 84 span: 45 span: 46 } location: { path: 4 path: 1 path: 2 path: 11 span: 90 span: 2 span: 30 leading_comments: " The syntax of the proto file.\n The supported values are \"proto2\", \"proto3\", and \"editions\".\n\n If `edition` is present, this value must be \"editions\".\n" } location: { path: 4 path: 1 path: 2 path: 11 path: 4 span: 90 span: 2 span: 10 } location: { path: 4 path: 1 path: 2 path: 11 path: 5 span: 90 span: 11 span: 17 } location: { path: 4 path: 1 path: 2 path: 11 path: 1 span: 90 span: 18 span: 24 } location: { path: 4 path: 1 path: 2 path: 11 path: 3 span: 90 span: 27 span: 29 } location: { path: 4 path: 1 path: 2 path: 12 span: 93 span: 2 span: 31 leading_comments: " The edition of the proto file, which is an opaque string.\n" } location: { path: 4 path: 1 path: 2 path: 12 path: 4 span: 93 span: 2 span: 10 } location: { path: 4 path: 1 path: 2 path: 12 path: 5 span: 93 span: 11 span: 17 } location: { path: 4 path: 1 path: 2 path: 12 path: 1 span: 93 span: 18 span: 25 } location: { path: 4 path: 1 path: 2 path: 12 path: 3 span: 93 span: 28 span: 30 } location: { path: 4 path: 2 span: 97 span: 0 span: 129 span: 1 leading_comments: " Describes a message type.\n" } location: { path: 4 path: 2 path: 1 span: 97 span: 8 span: 23 } location: { path: 4 path: 2 path: 2 path: 0 span: 98 span: 2 span: 27 } location: { path: 4 path: 2 path: 2 path: 0 path: 4 span: 98 span: 2 span: 10 } location: { path: 4 path: 2 path: 2 path: 0 path: 5 span: 98 span: 11 span: 17 } location: { path: 4 path: 2 path: 2 path: 0 path: 1 span: 98 span: 18 span: 22 } location: { path: 4 path: 2 path: 2 path: 0 path: 3 span: 98 span: 25 span: 26 } location: { path: 4 path: 2 path: 2 path: 1 span: 100 span: 2 span: 42 } location: { path: 4 path: 2 path: 2 path: 1 path: 4 span: 100 span: 2 span: 10 } location: { path: 4 path: 2 path: 2 path: 1 path: 6 span: 100 span: 11 span: 31 } location: { path: 4 path: 2 path: 2 path: 1 path: 1 span: 100 span: 32 span: 37 } location: { path: 4 path: 2 path: 2 path: 1 path: 3 span: 100 span: 40 span: 41 } location: { path: 4 path: 2 path: 2 path: 2 span: 101 span: 2 span: 46 } location: { path: 4 path: 2 path: 2 path: 2 path: 4 span: 101 span: 2 span: 10 } location: { path: 4 path: 2 path: 2 path: 2 path: 6 span: 101 span: 11 span: 31 } location: { path: 4 path: 2 path: 2 path: 2 path: 1 span: 101 span: 32 span: 41 } location: { path: 4 path: 2 path: 2 path: 2 path: 3 span: 101 span: 44 span: 45 } location: { path: 4 path: 2 path: 2 path: 3 span: 103 span: 2 span: 43 } location: { path: 4 path: 2 path: 2 path: 3 path: 4 span: 103 span: 2 span: 10 } location: { path: 4 path: 2 path: 2 path: 3 path: 6 span: 103 span: 11 span: 26 } location: { path: 4 path: 2 path: 2 path: 3 path: 1 span: 103 span: 27 span: 38 } location: { path: 4 path: 2 path: 2 path: 3 path: 3 span: 103 span: 41 span: 42 } location: { path: 4 path: 2 path: 2 path: 4 span: 104 span: 2 span: 45 } location: { path: 4 path: 2 path: 2 path: 4 path: 4 span: 104 span: 2 span: 10 } location: { path: 4 path: 2 path: 2 path: 4 path: 6 span: 104 span: 11 span: 30 } location: { path: 4 path: 2 path: 2 path: 4 path: 1 span: 104 span: 31 span: 40 } location: { path: 4 path: 2 path: 2 path: 4 path: 3 span: 104 span: 43 span: 44 } location: { path: 4 path: 2 path: 3 path: 0 span: 106 span: 2 span: 111 span: 3 } location: { path: 4 path: 2 path: 3 path: 0 path: 1 span: 106 span: 10 span: 24 } location: { path: 4 path: 2 path: 3 path: 0 path: 2 path: 0 span: 107 span: 4 span: 29 trailing_comments: " Inclusive.\n" } location: { path: 4 path: 2 path: 3 path: 0 path: 2 path: 0 path: 4 span: 107 span: 4 span: 12 } location: { path: 4 path: 2 path: 3 path: 0 path: 2 path: 0 path: 5 span: 107 span: 13 span: 18 } location: { path: 4 path: 2 path: 3 path: 0 path: 2 path: 0 path: 1 span: 107 span: 19 span: 24 } location: { path: 4 path: 2 path: 3 path: 0 path: 2 path: 0 path: 3 span: 107 span: 27 span: 28 } location: { path: 4 path: 2 path: 3 path: 0 path: 2 path: 1 span: 108 span: 4 span: 27 trailing_comments: " Exclusive.\n" } location: { path: 4 path: 2 path: 3 path: 0 path: 2 path: 1 path: 4 span: 108 span: 4 span: 12 } location: { path: 4 path: 2 path: 3 path: 0 path: 2 path: 1 path: 5 span: 108 span: 13 span: 18 } location: { path: 4 path: 2 path: 3 path: 0 path: 2 path: 1 path: 1 span: 108 span: 19 span: 22 } location: { path: 4 path: 2 path: 3 path: 0 path: 2 path: 1 path: 3 span: 108 span: 25 span: 26 } location: { path: 4 path: 2 path: 3 path: 0 path: 2 path: 2 span: 110 span: 4 span: 47 } location: { path: 4 path: 2 path: 3 path: 0 path: 2 path: 2 path: 4 span: 110 span: 4 span: 12 } location: { path: 4 path: 2 path: 3 path: 0 path: 2 path: 2 path: 6 span: 110 span: 13 span: 34 } location: { path: 4 path: 2 path: 3 path: 0 path: 2 path: 2 path: 1 span: 110 span: 35 span: 42 } location: { path: 4 path: 2 path: 3 path: 0 path: 2 path: 2 path: 3 span: 110 span: 45 span: 46 } location: { path: 4 path: 2 path: 2 path: 5 span: 112 span: 2 span: 46 } location: { path: 4 path: 2 path: 2 path: 5 path: 4 span: 112 span: 2 span: 10 } location: { path: 4 path: 2 path: 2 path: 5 path: 6 span: 112 span: 11 span: 25 } location: { path: 4 path: 2 path: 2 path: 5 path: 1 span: 112 span: 26 span: 41 } location: { path: 4 path: 2 path: 2 path: 5 path: 3 span: 112 span: 44 span: 45 } location: { path: 4 path: 2 path: 2 path: 6 span: 114 span: 2 span: 47 } location: { path: 4 path: 2 path: 2 path: 6 path: 4 span: 114 span: 2 span: 10 } location: { path: 4 path: 2 path: 2 path: 6 path: 6 span: 114 span: 11 span: 31 } location: { path: 4 path: 2 path: 2 path: 6 path: 1 span: 114 span: 32 span: 42 } location: { path: 4 path: 2 path: 2 path: 6 path: 3 span: 114 span: 45 span: 46 } location: { path: 4 path: 2 path: 2 path: 7 span: 116 span: 2 span: 38 } location: { path: 4 path: 2 path: 2 path: 7 path: 4 span: 116 span: 2 span: 10 } location: { path: 4 path: 2 path: 2 path: 7 path: 6 span: 116 span: 11 span: 25 } location: { path: 4 path: 2 path: 2 path: 7 path: 1 span: 116 span: 26 span: 33 } location: { path: 4 path: 2 path: 2 path: 7 path: 3 span: 116 span: 36 span: 37 } location: { path: 4 path: 2 path: 3 path: 1 span: 121 span: 2 span: 124 span: 3 leading_comments: " Range of reserved tag numbers. Reserved tag numbers may not be used by\n fields or extension ranges in the same message. Reserved ranges may\n not overlap.\n" } location: { path: 4 path: 2 path: 3 path: 1 path: 1 span: 121 span: 10 span: 23 } location: { path: 4 path: 2 path: 3 path: 1 path: 2 path: 0 span: 122 span: 4 span: 29 trailing_comments: " Inclusive.\n" } location: { path: 4 path: 2 path: 3 path: 1 path: 2 path: 0 path: 4 span: 122 span: 4 span: 12 } location: { path: 4 path: 2 path: 3 path: 1 path: 2 path: 0 path: 5 span: 122 span: 13 span: 18 } location: { path: 4 path: 2 path: 3 path: 1 path: 2 path: 0 path: 1 span: 122 span: 19 span: 24 } location: { path: 4 path: 2 path: 3 path: 1 path: 2 path: 0 path: 3 span: 122 span: 27 span: 28 } location: { path: 4 path: 2 path: 3 path: 1 path: 2 path: 1 span: 123 span: 4 span: 27 trailing_comments: " Exclusive.\n" } location: { path: 4 path: 2 path: 3 path: 1 path: 2 path: 1 path: 4 span: 123 span: 4 span: 12 } location: { path: 4 path: 2 path: 3 path: 1 path: 2 path: 1 path: 5 span: 123 span: 13 span: 18 } location: { path: 4 path: 2 path: 3 path: 1 path: 2 path: 1 path: 1 span: 123 span: 19 span: 22 } location: { path: 4 path: 2 path: 3 path: 1 path: 2 path: 1 path: 3 span: 123 span: 25 span: 26 } location: { path: 4 path: 2 path: 2 path: 8 span: 125 span: 2 span: 44 } location: { path: 4 path: 2 path: 2 path: 8 path: 4 span: 125 span: 2 span: 10 } location: { path: 4 path: 2 path: 2 path: 8 path: 6 span: 125 span: 11 span: 24 } location: { path: 4 path: 2 path: 2 path: 8 path: 1 span: 125 span: 25 span: 39 } location: { path: 4 path: 2 path: 2 path: 8 path: 3 span: 125 span: 42 span: 43 } location: { path: 4 path: 2 path: 2 path: 9 span: 128 span: 2 span: 37 leading_comments: " Reserved field names, which may not be used by fields in the same message.\n A given name may only be reserved once.\n" } location: { path: 4 path: 2 path: 2 path: 9 path: 4 span: 128 span: 2 span: 10 } location: { path: 4 path: 2 path: 2 path: 9 path: 5 span: 128 span: 11 span: 17 } location: { path: 4 path: 2 path: 2 path: 9 path: 1 span: 128 span: 18 span: 31 } location: { path: 4 path: 2 path: 2 path: 9 path: 3 span: 128 span: 34 span: 36 } location: { path: 4 path: 3 span: 131 span: 0 span: 182 span: 1 } location: { path: 4 path: 3 path: 1 span: 131 span: 8 span: 29 } location: { path: 4 path: 3 path: 2 path: 0 span: 133 span: 2 span: 58 leading_comments: " The parser stores options it doesn't recognize here. See above.\n" } location: { path: 4 path: 3 path: 2 path: 0 path: 4 span: 133 span: 2 span: 10 } location: { path: 4 path: 3 path: 2 path: 0 path: 6 span: 133 span: 11 span: 30 } location: { path: 4 path: 3 path: 2 path: 0 path: 1 span: 133 span: 31 span: 51 } location: { path: 4 path: 3 path: 2 path: 0 path: 3 span: 133 span: 54 span: 57 } location: { path: 4 path: 3 path: 3 path: 0 span: 135 span: 2 span: 158 span: 3 } location: { path: 4 path: 3 path: 3 path: 0 path: 1 span: 135 span: 10 span: 21 } location: { path: 4 path: 3 path: 3 path: 0 path: 2 path: 0 span: 137 span: 4 span: 30 leading_comments: " The extension number declared within the extension range.\n" } location: { path: 4 path: 3 path: 3 path: 0 path: 2 path: 0 path: 4 span: 137 span: 4 span: 12 } location: { path: 4 path: 3 path: 3 path: 0 path: 2 path: 0 path: 5 span: 137 span: 13 span: 18 } location: { path: 4 path: 3 path: 3 path: 0 path: 2 path: 0 path: 1 span: 137 span: 19 span: 25 } location: { path: 4 path: 3 path: 3 path: 0 path: 2 path: 0 path: 3 span: 137 span: 28 span: 29 } location: { path: 4 path: 3 path: 3 path: 0 path: 2 path: 1 span: 141 span: 4 span: 34 leading_comments: " The fully-qualified name of the extension field. There must be a leading\n dot in front of the full name.\n" } location: { path: 4 path: 3 path: 3 path: 0 path: 2 path: 1 path: 4 span: 141 span: 4 span: 12 } location: { path: 4 path: 3 path: 3 path: 0 path: 2 path: 1 path: 5 span: 141 span: 13 span: 19 } location: { path: 4 path: 3 path: 3 path: 0 path: 2 path: 1 path: 1 span: 141 span: 20 span: 29 } location: { path: 4 path: 3 path: 3 path: 0 path: 2 path: 1 path: 3 span: 141 span: 32 span: 33 } location: { path: 4 path: 3 path: 3 path: 0 path: 2 path: 2 span: 146 span: 4 span: 29 leading_comments: " The fully-qualified type name of the extension field. Unlike\n Metadata.type, Declaration.type must have a leading dot for messages\n and enums.\n" } location: { path: 4 path: 3 path: 3 path: 0 path: 2 path: 2 path: 4 span: 146 span: 4 span: 12 } location: { path: 4 path: 3 path: 3 path: 0 path: 2 path: 2 path: 5 span: 146 span: 13 span: 19 } location: { path: 4 path: 3 path: 3 path: 0 path: 2 path: 2 path: 1 span: 146 span: 20 span: 24 } location: { path: 4 path: 3 path: 3 path: 0 path: 2 path: 2 path: 3 span: 146 span: 27 span: 28 } location: { path: 4 path: 3 path: 3 path: 0 path: 2 path: 3 span: 151 span: 4 span: 31 leading_comments: " If true, indicates that the number is reserved in the extension range,\n and any extension field with the number will fail to compile. Set this\n when a declared extension field is deleted.\n" } location: { path: 4 path: 3 path: 3 path: 0 path: 2 path: 3 path: 4 span: 151 span: 4 span: 12 } location: { path: 4 path: 3 path: 3 path: 0 path: 2 path: 3 path: 5 span: 151 span: 13 span: 17 } location: { path: 4 path: 3 path: 3 path: 0 path: 2 path: 3 path: 1 span: 151 span: 18 span: 26 } location: { path: 4 path: 3 path: 3 path: 0 path: 2 path: 3 path: 3 span: 151 span: 29 span: 30 } location: { path: 4 path: 3 path: 3 path: 0 path: 2 path: 4 span: 155 span: 4 span: 31 leading_comments: " If true, indicates that the extension must be defined as repeated.\n Otherwise the extension must be defined as optional.\n" } location: { path: 4 path: 3 path: 3 path: 0 path: 2 path: 4 path: 4 span: 155 span: 4 span: 12 } location: { path: 4 path: 3 path: 3 path: 0 path: 2 path: 4 path: 5 span: 155 span: 13 span: 17 } location: { path: 4 path: 3 path: 3 path: 0 path: 2 path: 4 path: 1 span: 155 span: 18 span: 26 } location: { path: 4 path: 3 path: 3 path: 0 path: 2 path: 4 path: 3 span: 155 span: 29 span: 30 } location: { path: 4 path: 3 path: 3 path: 0 path: 9 span: 157 span: 4 span: 15 trailing_comments: " removed is_repeated\n" } location: { path: 4 path: 3 path: 3 path: 0 path: 9 path: 0 span: 157 span: 13 span: 14 } location: { path: 4 path: 3 path: 3 path: 0 path: 9 path: 0 path: 1 span: 157 span: 13 span: 14 } location: { path: 4 path: 3 path: 3 path: 0 path: 9 path: 0 path: 2 span: 157 span: 13 span: 14 } location: { path: 4 path: 3 path: 2 path: 1 span: 163 span: 2 span: 70 leading_comments: " For external users: DO NOT USE. We are in the process of open sourcing\n extension declaration and executing internal cleanups before it can be\n used externally.\n" } location: { path: 4 path: 3 path: 2 path: 1 path: 4 span: 163 span: 2 span: 10 } location: { path: 4 path: 3 path: 2 path: 1 path: 6 span: 163 span: 11 span: 22 } location: { path: 4 path: 3 path: 2 path: 1 path: 1 span: 163 span: 23 span: 34 } location: { path: 4 path: 3 path: 2 path: 1 path: 3 span: 163 span: 37 span: 38 } location: { path: 4 path: 3 path: 2 path: 1 path: 8 span: 163 span: 39 span: 69 } location: { path: 4 path: 3 path: 2 path: 1 path: 8 path: 17 span: 163 span: 40 span: 68 } location: { path: 4 path: 3 path: 2 path: 2 span: 166 span: 2 span: 36 leading_comments: " Any features defined in the specific edition.\n" } location: { path: 4 path: 3 path: 2 path: 2 path: 4 span: 166 span: 2 span: 10 } location: { path: 4 path: 3 path: 2 path: 2 path: 6 span: 166 span: 11 span: 21 } location: { path: 4 path: 3 path: 2 path: 2 path: 1 span: 166 span: 22 span: 30 } location: { path: 4 path: 3 path: 2 path: 2 path: 3 span: 166 span: 33 span: 35 } location: { path: 4 path: 3 path: 4 path: 0 span: 169 span: 2 span: 173 span: 3 leading_comments: " The verification state of the extension range.\n" } location: { path: 4 path: 3 path: 4 path: 0 path: 1 span: 169 span: 7 span: 24 } location: { path: 4 path: 3 path: 4 path: 0 path: 2 path: 0 span: 171 span: 4 span: 20 leading_comments: " All the extensions of the range must be declared.\n" } location: { path: 4 path: 3 path: 4 path: 0 path: 2 path: 0 path: 1 span: 171 span: 4 span: 15 } location: { path: 4 path: 3 path: 4 path: 0 path: 2 path: 0 path: 2 span: 171 span: 18 span: 19 } location: { path: 4 path: 3 path: 4 path: 0 path: 2 path: 1 span: 172 span: 4 span: 19 } location: { path: 4 path: 3 path: 4 path: 0 path: 2 path: 1 path: 1 span: 172 span: 4 span: 14 } location: { path: 4 path: 3 path: 4 path: 0 path: 2 path: 1 path: 2 span: 172 span: 17 span: 18 } location: { path: 4 path: 3 path: 2 path: 3 span: 178 span: 2 span: 69 leading_comments: " The verification state of the range.\n TODO(b/278783756): flip the default to DECLARATION once all empty ranges\n are marked as UNVERIFIED.\n" } location: { path: 4 path: 3 path: 2 path: 3 path: 4 span: 178 span: 2 span: 10 } location: { path: 4 path: 3 path: 2 path: 3 path: 6 span: 178 span: 11 span: 28 } location: { path: 4 path: 3 path: 2 path: 3 path: 1 span: 178 span: 29 span: 41 } location: { path: 4 path: 3 path: 2 path: 3 path: 3 span: 178 span: 44 span: 45 } location: { path: 4 path: 3 path: 2 path: 3 path: 8 span: 178 span: 46 span: 68 } location: { path: 4 path: 3 path: 2 path: 3 path: 7 span: 178 span: 57 span: 67 } location: { path: 4 path: 3 path: 5 span: 181 span: 2 span: 25 leading_comments: " Clients can define custom options in extensions of this message. See above.\n" } location: { path: 4 path: 3 path: 5 path: 0 span: 181 span: 13 span: 24 } location: { path: 4 path: 3 path: 5 path: 0 path: 1 span: 181 span: 13 span: 17 } location: { path: 4 path: 3 path: 5 path: 0 path: 2 span: 181 span: 21 span: 24 } location: { path: 4 path: 4 span: 185 span: 0 span: 285 span: 1 leading_comments: " Describes a field within a message.\n" } location: { path: 4 path: 4 path: 1 span: 185 span: 8 span: 28 } location: { path: 4 path: 4 path: 4 path: 0 span: 186 span: 2 span: 217 span: 3 } location: { path: 4 path: 4 path: 4 path: 0 path: 1 span: 186 span: 7 span: 11 } location: { path: 4 path: 4 path: 4 path: 0 path: 2 path: 0 span: 189 span: 4 span: 20 leading_comments: " 0 is reserved for errors.\n Order is weird for historical reasons.\n" } location: { path: 4 path: 4 path: 4 path: 0 path: 2 path: 0 path: 1 span: 189 span: 4 span: 15 } location: { path: 4 path: 4 path: 4 path: 0 path: 2 path: 0 path: 2 span: 189 span: 18 span: 19 } location: { path: 4 path: 4 path: 4 path: 0 path: 2 path: 1 span: 190 span: 4 span: 19 } location: { path: 4 path: 4 path: 4 path: 0 path: 2 path: 1 path: 1 span: 190 span: 4 span: 14 } location: { path: 4 path: 4 path: 4 path: 0 path: 2 path: 1 path: 2 span: 190 span: 17 span: 18 } location: { path: 4 path: 4 path: 4 path: 0 path: 2 path: 2 span: 193 span: 4 span: 19 leading_comments: " Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT64 if\n negative values are likely.\n" } location: { path: 4 path: 4 path: 4 path: 0 path: 2 path: 2 path: 1 span: 193 span: 4 span: 14 } location: { path: 4 path: 4 path: 4 path: 0 path: 2 path: 2 path: 2 span: 193 span: 17 span: 18 } location: { path: 4 path: 4 path: 4 path: 0 path: 2 path: 3 span: 194 span: 4 span: 20 } location: { path: 4 path: 4 path: 4 path: 0 path: 2 path: 3 path: 1 span: 194 span: 4 span: 15 } location: { path: 4 path: 4 path: 4 path: 0 path: 2 path: 3 path: 2 span: 194 span: 18 span: 19 } location: { path: 4 path: 4 path: 4 path: 0 path: 2 path: 4 span: 197 span: 4 span: 19 leading_comments: " Not ZigZag encoded.  Negative numbers take 10 bytes.  Use TYPE_SINT32 if\n negative values are likely.\n" } location: { path: 4 path: 4 path: 4 path: 0 path: 2 path: 4 path: 1 span: 197 span: 4 span: 14 } location: { path: 4 path: 4 path: 4 path: 0 path: 2 path: 4 path: 2 span: 197 span: 17 span: 18 } location: { path: 4 path: 4 path: 4 path: 0 path: 2 path: 5 span: 198 span: 4 span: 21 } location: { path: 4 path: 4 path: 4 path: 0 path: 2 path: 5 path: 1 span: 198 span: 4 span: 16 } location: { path: 4 path: 4 path: 4 path: 0 path: 2 path: 5 path: 2 span: 198 span: 19 span: 20 } location: { path: 4 path: 4 path: 4 path: 0 path: 2 path: 6 span: 199 span: 4 span: 21 } location: { path: 4 path: 4 path: 4 path: 0 path: 2 path: 6 path: 1 span: 199 span: 4 span: 16 } location: { path: 4 path: 4 path: 4 path: 0 path: 2 path: 6 path: 2 span: 199 span: 19 span: 20 } location: { path: 4 path: 4 path: 4 path: 0 path: 2 path: 7 span: 200 span: 4 span: 18 } location: { path: 4 path: 4 path: 4 path: 0 path: 2 path: 7 path: 1 span: 200 span: 4 span: 13 } location: { path: 4 path: 4 path: 4 path: 0 path: 2 path: 7 path: 2 span: 200 span: 16 span: 17 } location: { path: 4 path: 4 path: 4 path: 0 path: 2 path: 8 span: 201 span: 4 span: 20 } location: { path: 4 path: 4 path: 4 path: 0 path: 2 path: 8 path: 1 span: 201 span: 4 span: 15 } location: { path: 4 path: 4 path: 4 path: 0 path: 2 path: 8 path: 2 span: 201 span: 18 span: 19 } location: { path: 4 path: 4 path: 4 path: 0 path: 2 path: 9 span: 206 span: 4 span: 20 leading_comments: " Tag-delimited aggregate.\n Group type is deprecated and not supported in proto3. However, Proto3\n implementations should still be able to parse the group wire format and\n treat group fields as unknown fields.\n" } location: { path: 4 path: 4 path: 4 path: 0 path: 2 path: 9 path: 1 span: 206 span: 4 span: 14 } location: { path: 4 path: 4 path: 4 path: 0 path: 2 path: 9 path: 2 span: 206 span: 17 span: 19 } location: { path: 4 path: 4 path: 4 path: 0 path: 2 path: 10 span: 207 span: 4 span: 22 trailing_comments: " Length-delimited aggregate.\n" } location: { path: 4 path: 4 path: 4 path: 0 path: 2 path: 10 path: 1 span: 207 span: 4 span: 16 } location: { path: 4 path: 4 path: 4 path: 0 path: 2 path: 10 path: 2 span: 207 span: 19 span: 21 } location: { path: 4 path: 4 path: 4 path: 0 path: 2 path: 11 span: 210 span: 4 span: 20 leading_comments: " New in version 2.\n" } location: { path: 4 path: 4 path: 4 path: 0 path: 2 path: 11 path: 1 span: 210 span: 4 span: 14 } location: { path: 4 path: 4 path: 4 path: 0 path: 2 path: 11 path: 2 span: 210 span: 17 span: 19 } location: { path: 4 path: 4 path: 4 path: 0 path: 2 path: 12 span: 211 span: 4 span: 21 } location: { path: 4 path: 4 path: 4 path: 0 path: 2 path: 12 path: 1 span: 211 span: 4 span: 15 } location: { path: 4 path: 4 path: 4 path: 0 path: 2 path: 12 path: 2 span: 211 span: 18 span: 20 } location: { path: 4 path: 4 path: 4 path: 0 path: 2 path: 13 span: 212 span: 4 span: 19 } location: { path: 4 path: 4 path: 4 path: 0 path: 2 path: 13 path: 1 span: 212 span: 4 span: 13 } location: { path: 4 path: 4 path: 4 path: 0 path: 2 path: 13 path: 2 span: 212 span: 16 span: 18 } location: { path: 4 path: 4 path: 4 path: 0 path: 2 path: 14 span: 213 span: 4 span: 23 } location: { path: 4 path: 4 path: 4 path: 0 path: 2 path: 14 path: 1 span: 213 span: 4 span: 17 } location: { path: 4 path: 4 path: 4 path: 0 path: 2 path: 14 path: 2 span: 213 span: 20 span: 22 } location: { path: 4 path: 4 path: 4 path: 0 path: 2 path: 15 span: 214 span: 4 span: 23 } location: { path: 4 path: 4 path: 4 path: 0 path: 2 path: 15 path: 1 span: 214 span: 4 span: 17 } location: { path: 4 path: 4 path: 4 path: 0 path: 2 path: 15 path: 2 span: 214 span: 20 span: 22 } location: { path: 4 path: 4 path: 4 path: 0 path: 2 path: 16 span: 215 span: 4 span: 21 trailing_comments: " Uses ZigZag encoding.\n" } location: { path: 4 path: 4 path: 4 path: 0 path: 2 path: 16 path: 1 span: 215 span: 4 span: 15 } location: { path: 4 path: 4 path: 4 path: 0 path: 2 path: 16 path: 2 span: 215 span: 18 span: 20 } location: { path: 4 path: 4 path: 4 path: 0 path: 2 path: 17 span: 216 span: 4 span: 21 trailing_comments: " Uses ZigZag encoding.\n" } location: { path: 4 path: 4 path: 4 path: 0 path: 2 path: 17 path: 1 span: 216 span: 4 span: 15 } location: { path: 4 path: 4 path: 4 path: 0 path: 2 path: 17 path: 2 span: 216 span: 18 span: 20 } location: { path: 4 path: 4 path: 4 path: 1 span: 219 span: 2 span: 224 span: 3 } location: { path: 4 path: 4 path: 4 path: 1 path: 1 span: 219 span: 7 span: 12 } location: { path: 4 path: 4 path: 4 path: 1 path: 2 path: 0 span: 221 span: 4 span: 23 leading_comments: " 0 is reserved for errors\n" } location: { path: 4 path: 4 path: 4 path: 1 path: 2 path: 0 path: 1 span: 221 span: 4 span: 18 } location: { path: 4 path: 4 path: 4 path: 1 path: 2 path: 0 path: 2 span: 221 span: 21 span: 22 } location: { path: 4 path: 4 path: 4 path: 1 path: 2 path: 1 span: 222 span: 4 span: 23 } location: { path: 4 path: 4 path: 4 path: 1 path: 2 path: 1 path: 1 span: 222 span: 4 span: 18 } location: { path: 4 path: 4 path: 4 path: 1 path: 2 path: 1 path: 2 span: 222 span: 21 span: 22 } location: { path: 4 path: 4 path: 4 path: 1 path: 2 path: 2 span: 223 span: 4 span: 23 } location: { path: 4 path: 4 path: 4 path: 1 path: 2 path: 2 path: 1 span: 223 span: 4 span: 18 } location: { path: 4 path: 4 path: 4 path: 1 path: 2 path: 2 path: 2 span: 223 span: 21 span: 22 } location: { path: 4 path: 4 path: 2 path: 0 span: 226 span: 2 span: 27 } location: { path: 4 path: 4 path: 2 path: 0 path: 4 span: 226 span: 2 span: 10 } location: { path: 4 path: 4 path: 2 path: 0 path: 5 span: 226 span: 11 span: 17 } location: { path: 4 path: 4 path: 2 path: 0 path: 1 span: 226 span: 18 span: 22 } location: { path: 4 path: 4 path: 2 path: 0 path: 3 span: 226 span: 25 span: 26 } location: { path: 4 path: 4 path: 2 path: 1 span: 227 span: 2 span: 28 } location: { path: 4 path: 4 path: 2 path: 1 path: 4 span: 227 span: 2 span: 10 } location: { path: 4 path: 4 path: 2 path: 1 path: 5 span: 227 span: 11 span: 16 } location: { path: 4 path: 4 path: 2 path: 1 path: 1 span: 227 span: 17 span: 23 } location: { path: 4 path: 4 path: 2 path: 1 path: 3 span: 227 span: 26 span: 27 } location: { path: 4 path: 4 path: 2 path: 2 span: 228 span: 2 span: 27 } location: { path: 4 path: 4 path: 2 path: 2 path: 4 span: 228 span: 2 span: 10 } location: { path: 4 path: 4 path: 2 path: 2 path: 6 span: 228 span: 11 span: 16 } location: { path: 4 path: 4 path: 2 path: 2 path: 1 span: 228 span: 17 span: 22 } location: { path: 4 path: 4 path: 2 path: 2 path: 3 span: 228 span: 25 span: 26 } location: { path: 4 path: 4 path: 2 path: 3 span: 232 span: 2 span: 25 leading_comments: " If type_name is set, this need not be set.  If both this and type_name\n are set, this must be one of TYPE_ENUM, TYPE_MESSAGE or TYPE_GROUP.\n" } location: { path: 4 path: 4 path: 2 path: 3 path: 4 span: 232 span: 2 span: 10 } location: { path: 4 path: 4 path: 2 path: 3 path: 6 span: 232 span: 11 span: 15 } location: { path: 4 path: 4 path: 2 path: 3 path: 1 span: 232 span: 16 span: 20 } location: { path: 4 path: 4 path: 2 path: 3 path: 3 span: 232 span: 23 span: 24 } location: { path: 4 path: 4 path: 2 path: 4 span: 239 span: 2 span: 32 leading_comments: " For message and enum types, this is the name of the type.  If the name\n starts with a '.', it is fully-qualified.  Otherwise, C++-like scoping\n rules are used to find the type (i.e. first the nested types within this\n message are searched, then within the parent, on up to the root\n namespace).\n" } location: { path: 4 path: 4 path: 2 path: 4 path: 4 span: 239 span: 2 span: 10 } location: { path: 4 path: 4 path: 2 path: 4 path: 5 span: 239 span: 11 span: 17 } location: { path: 4 path: 4 path: 2 path: 4 path: 1 span: 239 span: 18 span: 27 } location: { path: 4 path: 4 path: 2 path: 4 path: 3 span: 239 span: 30 span: 31 } location: { path: 4 path: 4 path: 2 path: 5 span: 243 span: 2 span: 31 leading_comments: " For extensions, this is the name of the type being extended.  It is\n resolved in the same manner as type_name.\n" } location: { path: 4 path: 4 path: 2 path: 5 path: 4 span: 243 span: 2 span: 10 } location: { path: 4 path: 4 path: 2 path: 5 path: 5 span: 243 span: 11 span: 17 } location: { path: 4 path: 4 path: 2 path: 5 path: 1 span: 243 span: 18 span: 26 } location: { path: 4 path: 4 path: 2 path: 5 path: 3 span: 243 span: 29 span: 30 } location: { path: 4 path: 4 path: 2 path: 6 span: 249 span: 2 span: 36 leading_comments: " For numeric types, contains the original text representation of the value.\n For booleans, \"true\" or \"false\".\n For strings, contains the default text contents (not escaped in any way).\n For bytes, contains the C escaped value.  All bytes >= 128 are escaped.\n" } location: { path: 4 path: 4 path: 2 path: 6 path: 4 span: 249 span: 2 span: 10 } location: { path: 4 path: 4 path: 2 path: 6 path: 5 span: 249 span: 11 span: 17 } location: { path: 4 path: 4 path: 2 path: 6 path: 1 span: 249 span: 18 span: 31 } location: { path: 4 path: 4 path: 2 path: 6 path: 3 span: 249 span: 34 span: 35 } location: { path: 4 path: 4 path: 2 path: 7 span: 253 span: 2 span: 33 leading_comments: " If set, gives the index of a oneof in the containing type's oneof_decl\n list.  This field is a member of that oneof.\n" } location: { path: 4 path: 4 path: 2 path: 7 path: 4 span: 253 span: 2 span: 10 } location: { path: 4 path: 4 path: 2 path: 7 path: 5 span: 253 span: 11 span: 16 } location: { path: 4 path: 4 path: 2 path: 7 path: 1 span: 253 span: 17 span: 28 } location: { path: 4 path: 4 path: 2 path: 7 path: 3 span: 253 span: 31 span: 32 } location: { path: 4 path: 4 path: 2 path: 8 span: 259 span: 2 span: 33 leading_comments: " JSON name of this field. The value is set by protocol compiler. If the\n user has set a \"json_name\" option on this field, that option's value\n will be used. Otherwise, it's deduced from the field's name by converting\n it to camelCase.\n" } location: { path: 4 path: 4 path: 2 path: 8 path: 4 span: 259 span: 2 span: 10 } location: { path: 4 path: 4 path: 2 path: 8 path: 5 span: 259 span: 11 span: 17 } location: { path: 4 path: 4 path: 2 path: 8 path: 1 span: 259 span: 18 span: 27 } location: { path: 4 path: 4 path: 2 path: 8 path: 3 span: 259 span: 30 span: 32 } location: { path: 4 path: 4 path: 2 path: 9 span: 261 span: 2 span: 36 } location: { path: 4 path: 4 path: 2 path: 9 path: 4 span: 261 span: 2 span: 10 } location: { path: 4 path: 4 path: 2 path: 9 path: 6 span: 261 span: 11 span: 23 } location: { path: 4 path: 4 path: 2 path: 9 path: 1 span: 261 span: 24 span: 31 } location: { path: 4 path: 4 path: 2 path: 9 path: 3 span: 261 span: 34 span: 35 } location: { path: 4 path: 4 path: 2 path: 10 span: 284 span: 2 span: 37 leading_comments: " If true, this is a proto3 \"optional\". When a proto3 field is optional, it\n tracks presence regardless of field type.\n\n When proto3_optional is true, this field must be belong to a oneof to\n signal to old proto3 clients that presence is tracked for this field. This\n oneof is known as a \"synthetic\" oneof, and this field must be its sole\n member (each proto3 optional field gets its own synthetic oneof). Synthetic\n oneofs exist in the descriptor only, and do not generate any API. Synthetic\n oneofs must be ordered after all \"real\" oneofs.\n\n For message fields, proto3_optional doesn't create any semantic change,\n since non-repeated message fields always track presence. However it still\n indicates the semantic detail of whether the user wrote \"optional\" or not.\n This can be useful for round-tripping the .proto file. For consistency we\n give message fields a synthetic oneof also, even though it is not required\n to track presence. This is especially important because the parser can't\n tell if a field is a message or an enum, so it must always create a\n synthetic oneof.\n\n Proto2 optional fields do not set this flag, because they already indicate\n optional with `LABEL_OPTIONAL`.\n" } location: { path: 4 path: 4 path: 2 path: 10 path: 4 span: 284 span: 2 span: 10 } location: { path: 4 path: 4 path: 2 path: 10 path: 5 span: 284 span: 11 span: 15 } location: { path: 4 path: 4 path: 2 path: 10 path: 1 span: 284 span: 16 span: 31 } location: { path: 4 path: 4 path: 2 path: 10 path: 3 span: 284 span: 34 span: 36 } location: { path: 4 path: 5 span: 288 span: 0 span: 291 span: 1 leading_comments: " Describes a oneof.\n" } location: { path: 4 path: 5 path: 1 span: 288 span: 8 span: 28 } location: { path: 4 path: 5 path: 2 path: 0 span: 289 span: 2 span: 27 } location: { path: 4 path: 5 path: 2 path: 0 path: 4 span: 289 span: 2 span: 10 } location: { path: 4 path: 5 path: 2 path: 0 path: 5 span: 289 span: 11 span: 17 } location: { path: 4 path: 5 path: 2 path: 0 path: 1 span: 289 span: 18 span: 22 } location: { path: 4 path: 5 path: 2 path: 0 path: 3 span: 289 span: 25 span: 26 } location: { path: 4 path: 5 path: 2 path: 1 span: 290 span: 2 span: 36 } location: { path: 4 path: 5 path: 2 path: 1 path: 4 span: 290 span: 2 span: 10 } location: { path: 4 path: 5 path: 2 path: 1 path: 6 span: 290 span: 11 span: 23 } location: { path: 4 path: 5 path: 2 path: 1 path: 1 span: 290 span: 24 span: 31 } location: { path: 4 path: 5 path: 2 path: 1 path: 3 span: 290 span: 34 span: 35 } location: { path: 4 path: 6 span: 294 span: 0 span: 320 span: 1 leading_comments: " Describes an enum type.\n" } location: { path: 4 path: 6 path: 1 span: 294 span: 8 span: 27 } location: { path: 4 path: 6 path: 2 path: 0 span: 295 span: 2 span: 27 } location: { path: 4 path: 6 path: 2 path: 0 path: 4 span: 295 span: 2 span: 10 } location: { path: 4 path: 6 path: 2 path: 0 path: 5 span: 295 span: 11 span: 17 } location: { path: 4 path: 6 path: 2 path: 0 path: 1 span: 295 span: 18 span: 22 } location: { path: 4 path: 6 path: 2 path: 0 path: 3 span: 295 span: 25 span: 26 } location: { path: 4 path: 6 path: 2 path: 1 span: 297 span: 2 span: 46 } location: { path: 4 path: 6 path: 2 path: 1 path: 4 span: 297 span: 2 span: 10 } location: { path: 4 path: 6 path: 2 path: 1 path: 6 span: 297 span: 11 span: 35 } location: { path: 4 path: 6 path: 2 path: 1 path: 1 span: 297 span: 36 span: 41 } location: { path: 4 path: 6 path: 2 path: 1 path: 3 span: 297 span: 44 span: 45 } location: { path: 4 path: 6 path: 2 path: 2 span: 299 span: 2 span: 35 } location: { path: 4 path: 6 path: 2 path: 2 path: 4 span: 299 span: 2 span: 10 } location: { path: 4 path: 6 path: 2 path: 2 path: 6 span: 299 span: 11 span: 22 } location: { path: 4 path: 6 path: 2 path: 2 path: 1 span: 299 span: 23 span: 30 } location: { path: 4 path: 6 path: 2 path: 2 path: 3 span: 299 span: 33 span: 34 } location: { path: 4 path: 6 path: 3 path: 0 span: 307 span: 2 span: 310 span: 3 leading_comments: " Range of reserved numeric values. Reserved values may not be used by\n entries in the same enum. Reserved ranges may not overlap.\n\n Note that this is distinct from DescriptorProto.ReservedRange in that it\n is inclusive such that it can appropriately represent the entire int32\n domain.\n" } location: { path: 4 path: 6 path: 3 path: 0 path: 1 span: 307 span: 10 span: 27 } location: { path: 4 path: 6 path: 3 path: 0 path: 2 path: 0 span: 308 span: 4 span: 29 trailing_comments: " Inclusive.\n" } location: { path: 4 path: 6 path: 3 path: 0 path: 2 path: 0 path: 4 span: 308 span: 4 span: 12 } location: { path: 4 path: 6 path: 3 path: 0 path: 2 path: 0 path: 5 span: 308 span: 13 span: 18 } location: { path: 4 path: 6 path: 3 path: 0 path: 2 path: 0 path: 1 span: 308 span: 19 span: 24 } location: { path: 4 path: 6 path: 3 path: 0 path: 2 path: 0 path: 3 span: 308 span: 27 span: 28 } location: { path: 4 path: 6 path: 3 path: 0 path: 2 path: 1 span: 309 span: 4 span: 27 trailing_comments: " Inclusive.\n" } location: { path: 4 path: 6 path: 3 path: 0 path: 2 path: 1 path: 4 span: 309 span: 4 span: 12 } location: { path: 4 path: 6 path: 3 path: 0 path: 2 path: 1 path: 5 span: 309 span: 13 span: 18 } location: { path: 4 path: 6 path: 3 path: 0 path: 2 path: 1 path: 1 span: 309 span: 19 span: 22 } location: { path: 4 path: 6 path: 3 path: 0 path: 2 path: 1 path: 3 span: 309 span: 25 span: 26 } location: { path: 4 path: 6 path: 2 path: 3 span: 315 span: 2 span: 48 leading_comments: " Range of reserved numeric values. Reserved numeric values may not be used\n by enum values in the same enum declaration. Reserved ranges may not\n overlap.\n" } location: { path: 4 path: 6 path: 2 path: 3 path: 4 span: 315 span: 2 span: 10 } location: { path: 4 path: 6 path: 2 path: 3 path: 6 span: 315 span: 11 span: 28 } location: { path: 4 path: 6 path: 2 path: 3 path: 1 span: 315 span: 29 span: 43 } location: { path: 4 path: 6 path: 2 path: 3 path: 3 span: 315 span: 46 span: 47 } location: { path: 4 path: 6 path: 2 path: 4 span: 319 span: 2 span: 36 leading_comments: " Reserved enum value names, which may not be reused. A given name may only\n be reserved once.\n" } location: { path: 4 path: 6 path: 2 path: 4 path: 4 span: 319 span: 2 span: 10 } location: { path: 4 path: 6 path: 2 path: 4 path: 5 span: 319 span: 11 span: 17 } location: { path: 4 path: 6 path: 2 path: 4 path: 1 span: 319 span: 18 span: 31 } location: { path: 4 path: 6 path: 2 path: 4 path: 3 span: 319 span: 34 span: 35 } location: { path: 4 path: 7 span: 323 span: 0 span: 328 span: 1 leading_comments: " Describes a value within an enum.\n" } location: { path: 4 path: 7 path: 1 span: 323 span: 8 span: 32 } location: { path: 4 path: 7 path: 2 path: 0 span: 324 span: 2 span: 27 } location: { path: 4 path: 7 path: 2 path: 0 path: 4 span: 324 span: 2 span: 10 } location: { path: 4 path: 7 path: 2 path: 0 path: 5 span: 324 span: 11 span: 17 } location: { path: 4 path: 7 path: 2 path: 0 path: 1 span: 324 span: 18 span: 22 } location: { path: 4 path: 7 path: 2 path: 0 path: 3 span: 324 span: 25 span: 26 } location: { path: 4 path: 7 path: 2 path: 1 span: 325 span: 2 span: 28 } location: { path: 4 path: 7 path: 2 path: 1 path: 4 span: 325 span: 2 span: 10 } location: { path: 4 path: 7 path: 2 path: 1 path: 5 span: 325 span: 11 span: 16 } location: { path: 4 path: 7 path: 2 path: 1 path: 1 span: 325 span: 17 span: 23 } location: { path: 4 path: 7 path: 2 path: 1 path: 3 span: 325 span: 26 span: 27 } location: { path: 4 path: 7 path: 2 path: 2 span: 327 span: 2 span: 40 } location: { path: 4 path: 7 path: 2 path: 2 path: 4 span: 327 span: 2 span: 10 } location: { path: 4 path: 7 path: 2 path: 2 path: 6 span: 327 span: 11 span: 27 } location: { path: 4 path: 7 path: 2 path: 2 path: 1 span: 327 span: 28 span: 35 } location: { path: 4 path: 7 path: 2 path: 2 path: 3 span: 327 span: 38 span: 39 } location: { path: 4 path: 8 span: 331 span: 0 span: 336 span: 1 leading_comments: " Describes a service.\n" } location: { path: 4 path: 8 path: 1 span: 331 span: 8 span: 30 } location: { path: 4 path: 8 path: 2 path: 0 span: 332 span: 2 span: 27 } location: { path: 4 path: 8 path: 2 path: 0 path: 4 span: 332 span: 2 span: 10 } location: { path: 4 path: 8 path: 2 path: 0 path: 5 span: 332 span: 11 span: 17 } location: { path: 4 path: 8 path: 2 path: 0 path: 1 span: 332 span: 18 span: 22 } location: { path: 4 path: 8 path: 2 path: 0 path: 3 span: 332 span: 25 span: 26 } location: { path: 4 path: 8 path: 2 path: 1 span: 333 span: 2 span: 44 } location: { path: 4 path: 8 path: 2 path: 1 path: 4 span: 333 span: 2 span: 10 } location: { path: 4 path: 8 path: 2 path: 1 path: 6 span: 333 span: 11 span: 32 } location: { path: 4 path: 8 path: 2 path: 1 path: 1 span: 333 span: 33 span: 39 } location: { path: 4 path: 8 path: 2 path: 1 path: 3 span: 333 span: 42 span: 43 } location: { path: 4 path: 8 path: 2 path: 2 span: 335 span: 2 span: 38 } location: { path: 4 path: 8 path: 2 path: 2 path: 4 span: 335 span: 2 span: 10 } location: { path: 4 path: 8 path: 2 path: 2 path: 6 span: 335 span: 11 span: 25 } location: { path: 4 path: 8 path: 2 path: 2 path: 1 span: 335 span: 26 span: 33 } location: { path: 4 path: 8 path: 2 path: 2 path: 3 span: 335 span: 36 span: 37 } location: { path: 4 path: 9 span: 339 span: 0 span: 353 span: 1 leading_comments: " Describes a method of a service.\n" } location: { path: 4 path: 9 path: 1 span: 339 span: 8 span: 29 } location: { path: 4 path: 9 path: 2 path: 0 span: 340 span: 2 span: 27 } location: { path: 4 path: 9 path: 2 path: 0 path: 4 span: 340 span: 2 span: 10 } location: { path: 4 path: 9 path: 2 path: 0 path: 5 span: 340 span: 11 span: 17 } location: { path: 4 path: 9 path: 2 path: 0 path: 1 span: 340 span: 18 span: 22 } location: { path: 4 path: 9 path: 2 path: 0 path: 3 span: 340 span: 25 span: 26 } location: { path: 4 path: 9 path: 2 path: 1 span: 344 span: 2 span: 33 leading_comments: " Input and output type names.  These are resolved in the same way as\n FieldDescriptorProto.type_name, but must refer to a message type.\n" } location: { path: 4 path: 9 path: 2 path: 1 path: 4 span: 344 span: 2 span: 10 } location: { path: 4 path: 9 path: 2 path: 1 path: 5 span: 344 span: 11 span: 17 } location: { path: 4 path: 9 path: 2 path: 1 path: 1 span: 344 span: 18 span: 28 } location: { path: 4 path: 9 path: 2 path: 1 path: 3 span: 344 span: 31 span: 32 } location: { path: 4 path: 9 path: 2 path: 2 span: 345 span: 2 span: 34 } location: { path: 4 path: 9 path: 2 path: 2 path: 4 span: 345 span: 2 span: 10 } location: { path: 4 path: 9 path: 2 path: 2 path: 5 span: 345 span: 11 span: 17 } location: { path: 4 path: 9 path: 2 path: 2 path: 1 span: 345 span: 18 span: 29 } location: { path: 4 path: 9 path: 2 path: 2 path: 3 span: 345 span: 32 span: 33 } location: { path: 4 path: 9 path: 2 path: 3 span: 347 span: 2 span: 37 } location: { path: 4 path: 9 path: 2 path: 3 path: 4 span: 347 span: 2 span: 10 } location: { path: 4 path: 9 path: 2 path: 3 path: 6 span: 347 span: 11 span: 24 } location: { path: 4 path: 9 path: 2 path: 3 path: 1 span: 347 span: 25 span: 32 } location: { path: 4 path: 9 path: 2 path: 3 path: 3 span: 347 span: 35 span: 36 } location: { path: 4 path: 9 path: 2 path: 4 span: 350 span: 2 span: 55 leading_comments: " Identifies if client streams multiple client messages\n" } location: { path: 4 path: 9 path: 2 path: 4 path: 4 span: 350 span: 2 span: 10 } location: { path: 4 path: 9 path: 2 path: 4 path: 5 span: 350 span: 11 span: 15 } location: { path: 4 path: 9 path: 2 path: 4 path: 1 span: 350 span: 16 span: 32 } location: { path: 4 path: 9 path: 2 path: 4 path: 3 span: 350 span: 35 span: 36 } location: { path: 4 path: 9 path: 2 path: 4 path: 8 span: 350 span: 37 span: 54 } location: { path: 4 path: 9 path: 2 path: 4 path: 7 span: 350 span: 48 span: 53 } location: { path: 4 path: 9 path: 2 path: 5 span: 352 span: 2 span: 55 leading_comments: " Identifies if server streams multiple server messages\n" } location: { path: 4 path: 9 path: 2 path: 5 path: 4 span: 352 span: 2 span: 10 } location: { path: 4 path: 9 path: 2 path: 5 path: 5 span: 352 span: 11 span: 15 } location: { path: 4 path: 9 path: 2 path: 5 path: 1 span: 352 span: 16 span: 32 } location: { path: 4 path: 9 path: 2 path: 5 path: 3 span: 352 span: 35 span: 36 } location: { path: 4 path: 9 path: 2 path: 5 path: 8 span: 352 span: 37 span: 54 } location: { path: 4 path: 9 path: 2 path: 5 path: 7 span: 352 span: 48 span: 53 } location: { path: 4 path: 10 span: 387 span: 0 span: 506 span: 1 leading_detached_comments: " ===================================================================\n Options\n" leading_detached_comments: " Each of the definitions above may have \"options\" attached.  These are\n just annotations which may cause code to be generated slightly differently\n or may contain hints for code that manipulates protocol messages.\n\n Clients may define custom options as extensions of the *Options messages.\n These extensions may not yet be known at parsing time, so the parser cannot\n store the values in them.  Instead it stores them in a field in the *Options\n message called uninterpreted_option. This field must have the same name\n across all *Options messages. We then use this field to populate the\n extensions when we build a descriptor, at which point all protos have been\n parsed and so all extensions are known.\n\n Extension numbers for custom options may be chosen as follows:\n * For options which will only be used within a single application or\n   organization, or for experimental options, use field numbers 50000\n   through 99999.  It is up to you to ensure that you do not use the\n   same number for multiple options.\n * For options which will be published and used publicly by multiple\n   independent entities, e-mail protobuf-global-extension-registry@google.com\n   to reserve extension numbers. Simply provide your project name (e.g.\n   Objective-C plugin) and your project website (if available) -- there's no\n   need to explain how you intend to use them. Usually you only need one\n   extension number. You can declare multiple options with only one extension\n   number by putting them in a sub-message. See the Custom Options section of\n   the docs for examples:\n   https://developers.google.com/protocol-buffers/docs/proto#options\n   If this turns out to be popular, a web service will be set up\n   to automatically assign option numbers.\n" } location: { path: 4 path: 10 path: 1 span: 387 span: 8 span: 19 } location: { path: 4 path: 10 path: 2 path: 0 span: 393 span: 2 span: 35 leading_comments: " Sets the Java package where classes generated from this .proto will be\n placed.  By default, the proto package is used, but this is often\n inappropriate because proto packages do not normally start with backwards\n domain names.\n" } location: { path: 4 path: 10 path: 2 path: 0 path: 4 span: 393 span: 2 span: 10 } location: { path: 4 path: 10 path: 2 path: 0 path: 5 span: 393 span: 11 span: 17 } location: { path: 4 path: 10 path: 2 path: 0 path: 1 span: 393 span: 18 span: 30 } location: { path: 4 path: 10 path: 2 path: 0 path: 3 span: 393 span: 33 span: 34 } location: { path: 4 path: 10 path: 2 path: 1 span: 400 span: 2 span: 43 leading_comments: " Controls the name of the wrapper Java class generated for the .proto file.\n That class will always contain the .proto file's getDescriptor() method as\n well as any top-level extensions defined in the .proto file.\n If java_multiple_files is disabled, then all the other classes from the\n .proto file will be nested inside the single wrapper outer class.\n" } location: { path: 4 path: 10 path: 2 path: 1 path: 4 span: 400 span: 2 span: 10 } location: { path: 4 path: 10 path: 2 path: 1 path: 5 span: 400 span: 11 span: 17 } location: { path: 4 path: 10 path: 2 path: 1 path: 1 span: 400 span: 18 span: 38 } location: { path: 4 path: 10 path: 2 path: 1 path: 3 span: 400 span: 41 span: 42 } location: { path: 4 path: 10 path: 2 path: 2 span: 408 span: 2 span: 59 leading_comments: " If enabled, then the Java code generator will generate a separate .java\n file for each top-level message, enum, and service defined in the .proto\n file.  Thus, these types will *not* be nested inside the wrapper class\n named by java_outer_classname.  However, the wrapper class will still be\n generated to contain the file's getDescriptor() method as well as any\n top-level extensions defined in the file.\n" } location: { path: 4 path: 10 path: 2 path: 2 path: 4 span: 408 span: 2 span: 10 } location: { path: 4 path: 10 path: 2 path: 2 path: 5 span: 408 span: 11 span: 15 } location: { path: 4 path: 10 path: 2 path: 2 path: 1 span: 408 span: 16 span: 35 } location: { path: 4 path: 10 path: 2 path: 2 path: 3 span: 408 span: 38 span: 40 } location: { path: 4 path: 10 path: 2 path: 2 path: 8 span: 408 span: 41 span: 58 } location: { path: 4 path: 10 path: 2 path: 2 path: 7 span: 408 span: 52 span: 57 } location: { path: 4 path: 10 path: 2 path: 3 span: 411 span: 2 span: 69 leading_comments: " This option does nothing.\n" } location: { path: 4 path: 10 path: 2 path: 3 path: 4 span: 411 span: 2 span: 10 } location: { path: 4 path: 10 path: 2 path: 3 path: 5 span: 411 span: 11 span: 15 } location: { path: 4 path: 10 path: 2 path: 3 path: 1 span: 411 span: 16 span: 45 } location: { path: 4 path: 10 path: 2 path: 3 path: 3 span: 411 span: 48 span: 50 } location: { path: 4 path: 10 path: 2 path: 3 path: 8 span: 411 span: 51 span: 68 } location: { path: 4 path: 10 path: 2 path: 3 path: 8 path: 3 span: 411 span: 52 span: 67 } location: { path: 4 path: 10 path: 2 path: 4 span: 419 span: 2 span: 62 leading_comments: " If set true, then the Java2 code generator will generate code that\n throws an exception whenever an attempt is made to assign a non-UTF-8\n byte sequence to a string field.\n Message reflection will do the same.\n However, an extension field still accepts non-UTF-8 byte sequences.\n This option has no effect on when used with the lite runtime.\n" } location: { path: 4 path: 10 path: 2 path: 4 path: 4 span: 419 span: 2 span: 10 } location: { path: 4 path: 10 path: 2 path: 4 path: 5 span: 419 span: 11 span: 15 } location: { path: 4 path: 10 path: 2 path: 4 path: 1 span: 419 span: 16 span: 38 } location: { path: 4 path: 10 path: 2 path: 4 path: 3 span: 419 span: 41 span: 43 } location: { path: 4 path: 10 path: 2 path: 4 path: 8 span: 419 span: 44 span: 61 } location: { path: 4 path: 10 path: 2 path: 4 path: 7 span: 419 span: 55 span: 60 } location: { path: 4 path: 10 path: 4 path: 0 span: 422 span: 2 span: 427 span: 3 leading_comments: " Generated classes can be optimized for speed or code size.\n" } location: { path: 4 path: 10 path: 4 path: 0 path: 1 span: 422 span: 7 span: 19 } location: { path: 4 path: 10 path: 4 path: 0 path: 2 path: 0 span: 423 span: 4 span: 14 trailing_comments: " Generate complete code for parsing, serialization,\n" } location: { path: 4 path: 10 path: 4 path: 0 path: 2 path: 0 path: 1 span: 423 span: 4 span: 9 } location: { path: 4 path: 10 path: 4 path: 0 path: 2 path: 0 path: 2 span: 423 span: 12 span: 13 } location: { path: 4 path: 10 path: 4 path: 0 path: 2 path: 1 span: 425 span: 4 span: 18 leading_comments: " etc.\n" trailing_comments: " Use ReflectionOps to implement these methods.\n" } location: { path: 4 path: 10 path: 4 path: 0 path: 2 path: 1 path: 1 span: 425 span: 4 span: 13 } location: { path: 4 path: 10 path: 4 path: 0 path: 2 path: 1 path: 2 span: 425 span: 16 span: 17 } location: { path: 4 path: 10 path: 4 path: 0 path: 2 path: 2 span: 426 span: 4 span: 21 trailing_comments: " Generate code using MessageLite and the lite runtime.\n" } location: { path: 4 path: 10 path: 4 path: 0 path: 2 path: 2 path: 1 span: 426 span: 4 span: 16 } location: { path: 4 path: 10 path: 4 path: 0 path: 2 path: 2 path: 2 span: 426 span: 19 span: 20 } location: { path: 4 path: 10 path: 2 path: 5 span: 428 span: 2 span: 59 } location: { path: 4 path: 10 path: 2 path: 5 path: 4 span: 428 span: 2 span: 10 } location: { path: 4 path: 10 path: 2 path: 5 path: 6 span: 428 span: 11 span: 23 } location: { path: 4 path: 10 path: 2 path: 5 path: 1 span: 428 span: 24 span: 36 } location: { path: 4 path: 10 path: 2 path: 5 path: 3 span: 428 span: 39 span: 40 } location: { path: 4 path: 10 path: 2 path: 5 path: 8 span: 428 span: 41 span: 58 } location: { path: 4 path: 10 path: 2 path: 5 path: 7 span: 428 span: 52 span: 57 } location: { path: 4 path: 10 path: 2 path: 6 span: 435 span: 2 span: 34 leading_comments: " Sets the Go package where structs generated from this .proto will be\n placed. If omitted, the Go package will be derived from the following:\n   - The basename of the package import path, if provided.\n   - Otherwise, the package statement in the .proto file, if present.\n   - Otherwise, the basename of the .proto file, without extension.\n" } location: { path: 4 path: 10 path: 2 path: 6 path: 4 span: 435 span: 2 span: 10 } location: { path: 4 path: 10 path: 2 path: 6 path: 5 span: 435 span: 11 span: 17 } location: { path: 4 path: 10 path: 2 path: 6 path: 1 span: 435 span: 18 span: 28 } location: { path: 4 path: 10 path: 2 path: 6 path: 3 span: 435 span: 31 span: 33 } location: { path: 4 path: 10 path: 2 path: 7 span: 447 span: 2 span: 59 leading_comments: " Should generic services be generated in each language?  \"Generic\" services\n are not specific to any particular RPC system.  They are generated by the\n main code generators in each language (without additional plugins).\n Generic services were the only kind of service generation supported by\n early versions of google.protobuf.\n\n Generic services are now considered deprecated in favor of using plugins\n that generate code specific to your particular RPC system.  Therefore,\n these default to false.  Old code which depends on generic services should\n explicitly set them to true.\n" } location: { path: 4 path: 10 path: 2 path: 7 path: 4 span: 447 span: 2 span: 10 } location: { path: 4 path: 10 path: 2 path: 7 path: 5 span: 447 span: 11 span: 15 } location: { path: 4 path: 10 path: 2 path: 7 path: 1 span: 447 span: 16 span: 35 } location: { path: 4 path: 10 path: 2 path: 7 path: 3 span: 447 span: 38 span: 40 } location: { path: 4 path: 10 path: 2 path: 7 path: 8 span: 447 span: 41 span: 58 } location: { path: 4 path: 10 path: 2 path: 7 path: 7 span: 447 span: 52 span: 57 } location: { path: 4 path: 10 path: 2 path: 8 span: 448 span: 2 span: 61 } location: { path: 4 path: 10 path: 2 path: 8 path: 4 span: 448 span: 2 span: 10 } location: { path: 4 path: 10 path: 2 path: 8 path: 5 span: 448 span: 11 span: 15 } location: { path: 4 path: 10 path: 2 path: 8 path: 1 span: 448 span: 16 span: 37 } location: { path: 4 path: 10 path: 2 path: 8 path: 3 span: 448 span: 40 span: 42 } location: { path: 4 path: 10 path: 2 path: 8 path: 8 span: 448 span: 43 span: 60 } location: { path: 4 path: 10 path: 2 path: 8 path: 7 span: 448 span: 54 span: 59 } location: { path: 4 path: 10 path: 2 path: 9 span: 449 span: 2 span: 59 } location: { path: 4 path: 10 path: 2 path: 9 path: 4 span: 449 span: 2 span: 10 } location: { path: 4 path: 10 path: 2 path: 9 path: 5 span: 449 span: 11 span: 15 } location: { path: 4 path: 10 path: 2 path: 9 path: 1 span: 449 span: 16 span: 35 } location: { path: 4 path: 10 path: 2 path: 9 path: 3 span: 449 span: 38 span: 40 } location: { path: 4 path: 10 path: 2 path: 9 path: 8 span: 449 span: 41 span: 58 } location: { path: 4 path: 10 path: 2 path: 9 path: 7 span: 449 span: 52 span: 57 } location: { path: 4 path: 10 path: 2 path: 10 span: 450 span: 2 span: 60 } location: { path: 4 path: 10 path: 2 path: 10 path: 4 span: 450 span: 2 span: 10 } location: { path: 4 path: 10 path: 2 path: 10 path: 5 span: 450 span: 11 span: 15 } location: { path: 4 path: 10 path: 2 path: 10 path: 1 span: 450 span: 16 span: 36 } location: { path: 4 path: 10 path: 2 path: 10 path: 3 span: 450 span: 39 span: 41 } location: { path: 4 path: 10 path: 2 path: 10 path: 8 span: 450 span: 42 span: 59 } location: { path: 4 path: 10 path: 2 path: 10 path: 7 span: 450 span: 53 span: 58 } location: { path: 4 path: 10 path: 2 path: 11 span: 456 span: 2 span: 50 leading_comments: " Is this file deprecated?\n Depending on the target platform, this can emit Deprecated annotations\n for everything in the file, or it will be completely ignored; in the very\n least, this is a formalization for deprecating files.\n" } location: { path: 4 path: 10 path: 2 path: 11 path: 4 span: 456 span: 2 span: 10 } location: { path: 4 path: 10 path: 2 path: 11 path: 5 span: 456 span: 11 span: 15 } location: { path: 4 path: 10 path: 2 path: 11 path: 1 span: 456 span: 16 span: 26 } location: { path: 4 path: 10 path: 2 path: 11 path: 3 span: 456 span: 29 span: 31 } location: { path: 4 path: 10 path: 2 path: 11 path: 8 span: 456 span: 32 span: 49 } location: { path: 4 path: 10 path: 2 path: 11 path: 7 span: 456 span: 43 span: 48 } location: { path: 4 path: 10 path: 2 path: 12 span: 460 span: 2 span: 55 leading_comments: " Enables the use of arenas for the proto messages in this file. This applies\n only to generated classes for C++.\n" } location: { path: 4 path: 10 path: 2 path: 12 path: 4 span: 460 span: 2 span: 10 } location: { path: 4 path: 10 path: 2 path: 12 path: 5 span: 460 span: 11 span: 15 } location: { path: 4 path: 10 path: 2 path: 12 path: 1 span: 460 span: 16 span: 32 } location: { path: 4 path: 10 path: 2 path: 12 path: 3 span: 460 span: 35 span: 37 } location: { path: 4 path: 10 path: 2 path: 12 path: 8 span: 460 span: 38 span: 54 } location: { path: 4 path: 10 path: 2 path: 12 path: 7 span: 460 span: 49 span: 53 } location: { path: 4 path: 10 path: 2 path: 13 span: 464 span: 2 span: 41 leading_comments: " Sets the objective c class prefix which is prepended to all objective c\n generated classes from this .proto. There is no default.\n" } location: { path: 4 path: 10 path: 2 path: 13 path: 4 span: 464 span: 2 span: 10 } location: { path: 4 path: 10 path: 2 path: 13 path: 5 span: 464 span: 11 span: 17 } location: { path: 4 path: 10 path: 2 path: 13 path: 1 span: 464 span: 18 span: 35 } location: { path: 4 path: 10 path: 2 path: 13 path: 3 span: 464 span: 38 span: 40 } location: { path: 4 path: 10 path: 2 path: 14 span: 467 span: 2 span: 40 leading_comments: " Namespace for generated classes; defaults to the package.\n" } location: { path: 4 path: 10 path: 2 path: 14 path: 4 span: 467 span: 2 span: 10 } location: { path: 4 path: 10 path: 2 path: 14 path: 5 span: 467 span: 11 span: 17 } location: { path: 4 path: 10 path: 2 path: 14 path: 1 span: 467 span: 18 span: 34 } location: { path: 4 path: 10 path: 2 path: 14 path: 3 span: 467 span: 37 span: 39 } location: { path: 4 path: 10 path: 2 path: 15 span: 473 span: 2 span: 36 leading_comments: " By default Swift generators will take the proto package and CamelCase it\n replacing '.' with underscore and use that to prefix the types/symbols\n defined. When this options is provided, they will use this value instead\n to prefix the types/symbols defined.\n" } location: { path: 4 path: 10 path: 2 path: 15 path: 4 span: 473 span: 2 span: 10 } location: { path: 4 path: 10 path: 2 path: 15 path: 5 span: 473 span: 11 span: 17 } location: { path: 4 path: 10 path: 2 path: 15 path: 1 span: 473 span: 18 span: 30 } location: { path: 4 path: 10 path: 2 path: 15 path: 3 span: 473 span: 33 span: 35 } location: { path: 4 path: 10 path: 2 path: 16 span: 477 span: 2 span: 40 leading_comments: " Sets the php class prefix which is prepended to all php generated classes\n from this .proto. Default is empty.\n" } location: { path: 4 path: 10 path: 2 path: 16 path: 4 span: 477 span: 2 span: 10 } location: { path: 4 path: 10 path: 2 path: 16 path: 5 span: 477 span: 11 span: 17 } location: { path: 4 path: 10 path: 2 path: 16 path: 1 span: 477 span: 18 span: 34 } location: { path: 4 path: 10 path: 2 path: 16 path: 3 span: 477 span: 37 span: 39 } location: { path: 4 path: 10 path: 2 path: 17 span: 482 span: 2 span: 37 leading_comments: " Use this option to change the namespace of php generated classes. Default\n is empty. When this option is empty, the package name will be used for\n determining the namespace.\n" } location: { path: 4 path: 10 path: 2 path: 17 path: 4 span: 482 span: 2 span: 10 } location: { path: 4 path: 10 path: 2 path: 17 path: 5 span: 482 span: 11 span: 17 } location: { path: 4 path: 10 path: 2 path: 17 path: 1 span: 482 span: 18 span: 31 } location: { path: 4 path: 10 path: 2 path: 17 path: 3 span: 482 span: 34 span: 36 } location: { path: 4 path: 10 path: 2 path: 18 span: 487 span: 2 span: 46 leading_comments: " Use this option to change the namespace of php generated metadata classes.\n Default is empty. When this option is empty, the proto file name will be\n used for determining the namespace.\n" } location: { path: 4 path: 10 path: 2 path: 18 path: 4 span: 487 span: 2 span: 10 } location: { path: 4 path: 10 path: 2 path: 18 path: 5 span: 487 span: 11 span: 17 } location: { path: 4 path: 10 path: 2 path: 18 path: 1 span: 487 span: 18 span: 40 } location: { path: 4 path: 10 path: 2 path: 18 path: 3 span: 487 span: 43 span: 45 } location: { path: 4 path: 10 path: 2 path: 19 span: 492 span: 2 span: 36 leading_comments: " Use this option to change the package of ruby generated classes. Default\n is empty. When this option is not set, the package name will be used for\n determining the ruby package.\n" } location: { path: 4 path: 10 path: 2 path: 19 path: 4 span: 492 span: 2 span: 10 } location: { path: 4 path: 10 path: 2 path: 19 path: 5 span: 492 span: 11 span: 17 } location: { path: 4 path: 10 path: 2 path: 19 path: 1 span: 492 span: 18 span: 30 } location: { path: 4 path: 10 path: 2 path: 19 path: 3 span: 492 span: 33 span: 35 } location: { path: 4 path: 10 path: 2 path: 20 span: 495 span: 2 span: 36 leading_comments: " Any features defined in the specific edition.\n" } location: { path: 4 path: 10 path: 2 path: 20 path: 4 span: 495 span: 2 span: 10 } location: { path: 4 path: 10 path: 2 path: 20 path: 6 span: 495 span: 11 span: 21 } location: { path: 4 path: 10 path: 2 path: 20 path: 1 span: 495 span: 22 span: 30 } location: { path: 4 path: 10 path: 2 path: 20 path: 3 span: 495 span: 33 span: 35 } location: { path: 4 path: 10 path: 2 path: 21 span: 499 span: 2 span: 58 leading_comments: " The parser stores options it doesn't recognize here.\n See the documentation for the \"Options\" section above.\n" } location: { path: 4 path: 10 path: 2 path: 21 path: 4 span: 499 span: 2 span: 10 } location: { path: 4 path: 10 path: 2 path: 21 path: 6 span: 499 span: 11 span: 30 } location: { path: 4 path: 10 path: 2 path: 21 path: 1 span: 499 span: 31 span: 51 } location: { path: 4 path: 10 path: 2 path: 21 path: 3 span: 499 span: 54 span: 57 } location: { path: 4 path: 10 path: 5 span: 503 span: 2 span: 25 leading_comments: " Clients can define custom options in extensions of this message.\n See the documentation for the \"Options\" section above.\n" } location: { path: 4 path: 10 path: 5 path: 0 span: 503 span: 13 span: 24 } location: { path: 4 path: 10 path: 5 path: 0 path: 1 span: 503 span: 13 span: 17 } location: { path: 4 path: 10 path: 5 path: 0 path: 2 span: 503 span: 21 span: 24 } location: { path: 4 path: 10 path: 9 span: 505 span: 2 span: 14 } location: { path: 4 path: 10 path: 9 path: 0 span: 505 span: 11 span: 13 } location: { path: 4 path: 10 path: 9 path: 0 path: 1 span: 505 span: 11 span: 13 } location: { path: 4 path: 10 path: 9 path: 0 path: 2 span: 505 span: 11 span: 13 } location: { path: 4 path: 11 span: 508 span: 0 span: 588 span: 1 } location: { path: 4 path: 11 path: 1 span: 508 span: 8 span: 22 } location: { path: 4 path: 11 path: 2 path: 0 span: 527 span: 2 span: 62 leading_comments: " Set true to use the old proto1 MessageSet wire format for extensions.\n This is provided for backwards-compatibility with the MessageSet wire\n format.  You should not use this for any other reason:  It's less\n efficient, has fewer features, and is more complicated.\n\n The message must be defined exactly as follows:\n   message Foo {\n     option message_set_wire_format = true;\n     extensions 4 to max;\n   }\n Note that the message cannot have any defined fields; MessageSets only\n have extensions.\n\n All extensions of your type must be singular messages; e.g. they cannot\n be int32s, enums, or repeated messages.\n\n Because this is an option, the above two restrictions are not enforced by\n the protocol compiler.\n" } location: { path: 4 path: 11 path: 2 path: 0 path: 4 span: 527 span: 2 span: 10 } location: { path: 4 path: 11 path: 2 path: 0 path: 5 span: 527 span: 11 span: 15 } location: { path: 4 path: 11 path: 2 path: 0 path: 1 span: 527 span: 16 span: 39 } location: { path: 4 path: 11 path: 2 path: 0 path: 3 span: 527 span: 42 span: 43 } location: { path: 4 path: 11 path: 2 path: 0 path: 8 span: 527 span: 44 span: 61 } location: { path: 4 path: 11 path: 2 path: 0 path: 7 span: 527 span: 55 span: 60 } location: { path: 4 path: 11 path: 2 path: 1 span: 532 span: 2 span: 70 leading_comments: " Disables the generation of the standard \"descriptor()\" accessor, which can\n conflict with a field of the same name.  This is meant to make migration\n from proto1 easier; new code should avoid fields named \"descriptor\".\n" } location: { path: 4 path: 11 path: 2 path: 1 path: 4 span: 532 span: 2 span: 10 } location: { path: 4 path: 11 path: 2 path: 1 path: 5 span: 532 span: 11 span: 15 } location: { path: 4 path: 11 path: 2 path: 1 path: 1 span: 532 span: 16 span: 47 } location: { path: 4 path: 11 path: 2 path: 1 path: 3 span: 532 span: 50 span: 51 } location: { path: 4 path: 11 path: 2 path: 1 path: 8 span: 532 span: 52 span: 69 } location: { path: 4 path: 11 path: 2 path: 1 path: 7 span: 532 span: 63 span: 68 } location: { path: 4 path: 11 path: 2 path: 2 span: 538 span: 2 span: 49 leading_comments: " Is this message deprecated?\n Depending on the target platform, this can emit Deprecated annotations\n for the message, or it will be completely ignored; in the very least,\n this is a formalization for deprecating messages.\n" } location: { path: 4 path: 11 path: 2 path: 2 path: 4 span: 538 span: 2 span: 10 } location: { path: 4 path: 11 path: 2 path: 2 path: 5 span: 538 span: 11 span: 15 } location: { path: 4 path: 11 path: 2 path: 2 path: 1 span: 538 span: 16 span: 26 } location: { path: 4 path: 11 path: 2 path: 2 path: 3 span: 538 span: 29 span: 30 } location: { path: 4 path: 11 path: 2 path: 2 path: 8 span: 538 span: 31 span: 48 } location: { path: 4 path: 11 path: 2 path: 2 path: 7 span: 538 span: 42 span: 47 } location: { path: 4 path: 11 path: 9 span: 540 span: 2 span: 19 } location: { path: 4 path: 11 path: 9 path: 0 span: 540 span: 11 span: 12 } location: { path: 4 path: 11 path: 9 path: 0 path: 1 span: 540 span: 11 span: 12 } location: { path: 4 path: 11 path: 9 path: 0 path: 2 span: 540 span: 11 span: 12 } location: { path: 4 path: 11 path: 9 path: 1 span: 540 span: 14 span: 15 } location: { path: 4 path: 11 path: 9 path: 1 path: 1 span: 540 span: 14 span: 15 } location: { path: 4 path: 11 path: 9 path: 1 path: 2 span: 540 span: 14 span: 15 } location: { path: 4 path: 11 path: 9 path: 2 span: 540 span: 17 span: 18 } location: { path: 4 path: 11 path: 9 path: 2 path: 1 span: 540 span: 17 span: 18 } location: { path: 4 path: 11 path: 9 path: 2 path: 2 span: 540 span: 17 span: 18 } location: { path: 4 path: 11 path: 2 path: 3 span: 563 span: 2 span: 30 leading_comments: " NOTE: Do not set the option in .proto files. Always use the maps syntax\n instead. The option should only be implicitly set by the proto compiler\n parser.\n\n Whether the message is an automatically generated map entry type for the\n maps field.\n\n For maps fields:\n     map<KeyType, ValueType> map_field = 1;\n The parsed descriptor looks like:\n     message MapFieldEntry {\n         option map_entry = true;\n         optional KeyType key = 1;\n         optional ValueType value = 2;\n     }\n     repeated MapFieldEntry map_field = 1;\n\n Implementations may choose not to generate the map_entry=true message, but\n use a native map in the target language to hold the keys and values.\n The reflection APIs in such implementations still need to work as\n if the field is a repeated message field.\n" } location: { path: 4 path: 11 path: 2 path: 3 path: 4 span: 563 span: 2 span: 10 } location: { path: 4 path: 11 path: 2 path: 3 path: 5 span: 563 span: 11 span: 15 } location: { path: 4 path: 11 path: 2 path: 3 path: 1 span: 563 span: 16 span: 25 } location: { path: 4 path: 11 path: 2 path: 3 path: 3 span: 563 span: 28 span: 29 } location: { path: 4 path: 11 path: 9 span: 565 span: 2 span: 13 trailing_comments: " javalite_serializable\n" } location: { path: 4 path: 11 path: 9 path: 3 span: 565 span: 11 span: 12 } location: { path: 4 path: 11 path: 9 path: 3 path: 1 span: 565 span: 11 span: 12 } location: { path: 4 path: 11 path: 9 path: 3 path: 2 span: 565 span: 11 span: 12 } location: { path: 4 path: 11 path: 9 span: 566 span: 2 span: 13 trailing_comments: " javanano_as_lite\n" } location: { path: 4 path: 11 path: 9 path: 4 span: 566 span: 11 span: 12 } location: { path: 4 path: 11 path: 9 path: 4 path: 1 span: 566 span: 11 span: 12 } location: { path: 4 path: 11 path: 9 path: 4 path: 2 span: 566 span: 11 span: 12 } location: { path: 4 path: 11 path: 2 path: 4 span: 578 span: 2 span: 80 leading_comments: " Enable the legacy handling of JSON field name conflicts.  This lowercases\n and strips underscored from the fields before comparison in proto3 only.\n The new behavior takes `json_name` into account and applies to proto2 as\n well.\n\n This should only be used as a temporary measure against broken builds due\n to the change in behavior for JSON field name conflicts.\n\n TODO(b/261750190) This is legacy behavior we plan to remove once downstream\n teams have had time to migrate.\n" } location: { path: 4 path: 11 path: 2 path: 4 path: 4 span: 578 span: 2 span: 10 } location: { path: 4 path: 11 path: 2 path: 4 path: 5 span: 578 span: 11 span: 15 } location: { path: 4 path: 11 path: 2 path: 4 path: 1 span: 578 span: 16 span: 54 } location: { path: 4 path: 11 path: 2 path: 4 path: 3 span: 578 span: 57 span: 59 } location: { path: 4 path: 11 path: 2 path: 4 path: 8 span: 578 span: 60 span: 79 } location: { path: 4 path: 11 path: 2 path: 4 path: 8 path: 3 span: 578 span: 61 span: 78 } location: { path: 4 path: 11 path: 2 path: 5 span: 581 span: 2 span: 36 leading_comments: " Any features defined in the specific edition.\n" } location: { path: 4 path: 11 path: 2 path: 5 path: 4 span: 581 span: 2 span: 10 } location: { path: 4 path: 11 path: 2 path: 5 path: 6 span: 581 span: 11 span: 21 } location: { path: 4 path: 11 path: 2 path: 5 path: 1 span: 581 span: 22 span: 30 } location: { path: 4 path: 11 path: 2 path: 5 path: 3 span: 581 span: 33 span: 35 } location: { path: 4 path: 11 path: 2 path: 6 span: 584 span: 2 span: 58 leading_comments: " The parser stores options it doesn't recognize here. See above.\n" } location: { path: 4 path: 11 path: 2 path: 6 path: 4 span: 584 span: 2 span: 10 } location: { path: 4 path: 11 path: 2 path: 6 path: 6 span: 584 span: 11 span: 30 } location: { path: 4 path: 11 path: 2 path: 6 path: 1 span: 584 span: 31 span: 51 } location: { path: 4 path: 11 path: 2 path: 6 path: 3 span: 584 span: 54 span: 57 } location: { path: 4 path: 11 path: 5 span: 587 span: 2 span: 25 leading_comments: " Clients can define custom options in extensions of this message. See above.\n" } location: { path: 4 path: 11 path: 5 path: 0 span: 587 span: 13 span: 24 } location: { path: 4 path: 11 path: 5 path: 0 path: 1 span: 587 span: 13 span: 17 } location: { path: 4 path: 11 path: 5 path: 0 path: 2 span: 587 span: 21 span: 24 } location: { path: 4 path: 12 span: 590 span: 0 span: 739 span: 1 } location: { path: 4 path: 12 path: 1 span: 590 span: 8 span: 20 } location: { path: 4 path: 12 path: 2 path: 0 span: 597 span: 2 span: 46 leading_comments: " The ctype option instructs the C++ code generator to use a different\n representation of the field than it normally would.  See the specific\n options below.  This option is only implemented to support use of\n [ctype=CORD] and [ctype=STRING] (the default) on non-repeated fields of\n type \"bytes\" in the open source release -- sorry, we'll try to include\n other types in a future version!\n" } location: { path: 4 path: 12 path: 2 path: 0 path: 4 span: 597 span: 2 span: 10 } location: { path: 4 path: 12 path: 2 path: 0 path: 6 span: 597 span: 11 span: 16 } location: { path: 4 path: 12 path: 2 path: 0 path: 1 span: 597 span: 17 span: 22 } location: { path: 4 path: 12 path: 2 path: 0 path: 3 span: 597 span: 25 span: 26 } location: { path: 4 path: 12 path: 2 path: 0 path: 8 span: 597 span: 27 span: 45 } location: { path: 4 path: 12 path: 2 path: 0 path: 7 span: 597 span: 38 span: 44 } location: { path: 4 path: 12 path: 4 path: 0 span: 598 span: 2 span: 611 span: 3 } location: { path: 4 path: 12 path: 4 path: 0 path: 1 span: 598 span: 7 span: 12 } location: { path: 4 path: 12 path: 4 path: 0 path: 2 path: 0 span: 600 span: 4 span: 15 leading_comments: " Default mode.\n" } location: { path: 4 path: 12 path: 4 path: 0 path: 2 path: 0 path: 1 span: 600 span: 4 span: 10 } location: { path: 4 path: 12 path: 4 path: 0 path: 2 path: 0 path: 2 span: 600 span: 13 span: 14 } location: { path: 4 path: 12 path: 4 path: 0 path: 2 path: 1 span: 608 span: 4 span: 13 leading_comments: " The option [ctype=CORD] may be applied to a non-repeated field of type\n \"bytes\". It indicates that in C++, the data should be stored in a Cord\n instead of a string.  For very large strings, this may reduce memory\n fragmentation. It may also allow better performance when parsing from a\n Cord, or when parsing with aliasing enabled, as the parsed Cord may then\n alias the original buffer.\n" } location: { path: 4 path: 12 path: 4 path: 0 path: 2 path: 1 path: 1 span: 608 span: 4 span: 8 } location: { path: 4 path: 12 path: 4 path: 0 path: 2 path: 1 path: 2 span: 608 span: 11 span: 12 } location: { path: 4 path: 12 path: 4 path: 0 path: 2 path: 2 span: 610 span: 4 span: 21 } location: { path: 4 path: 12 path: 4 path: 0 path: 2 path: 2 path: 1 span: 610 span: 4 span: 16 } location: { path: 4 path: 12 path: 4 path: 0 path: 2 path: 2 path: 2 span: 610 span: 19 span: 20 } location: { path: 4 path: 12 path: 2 path: 1 span: 617 span: 2 span: 27 leading_comments: " The packed option can be enabled for repeated primitive fields to enable\n a more efficient representation on the wire. Rather than repeatedly\n writing the tag and type for each element, the entire array is encoded as\n a single length-delimited blob. In proto3, only explicit setting it to\n false will avoid using packed encoding.\n" } location: { path: 4 path: 12 path: 2 path: 1 path: 4 span: 617 span: 2 span: 10 } location: { path: 4 path: 12 path: 2 path: 1 path: 5 span: 617 span: 11 span: 15 } location: { path: 4 path: 12 path: 2 path: 1 path: 1 span: 617 span: 16 span: 22 } location: { path: 4 path: 12 path: 2 path: 1 path: 3 span: 617 span: 25 span: 26 } location: { path: 4 path: 12 path: 2 path: 2 span: 630 span: 2 span: 51 leading_comments: " The jstype option determines the JavaScript type used for values of the\n field.  The option is permitted only for 64 bit integral and fixed types\n (int64, uint64, sint64, fixed64, sfixed64).  A field with jstype JS_STRING\n is represented as JavaScript string, which avoids loss of precision that\n can happen when a large value is converted to a floating point JavaScript.\n Specifying JS_NUMBER for the jstype causes the generated JavaScript code to\n use the JavaScript \"number\" type.  The behavior of the default option\n JS_NORMAL is implementation dependent.\n\n This option is an enum to permit additional types to be added, e.g.\n goog.math.Integer.\n" } location: { path: 4 path: 12 path: 2 path: 2 path: 4 span: 630 span: 2 span: 10 } location: { path: 4 path: 12 path: 2 path: 2 path: 6 span: 630 span: 11 span: 17 } location: { path: 4 path: 12 path: 2 path: 2 path: 1 span: 630 span: 18 span: 24 } location: { path: 4 path: 12 path: 2 path: 2 path: 3 span: 630 span: 27 span: 28 } location: { path: 4 path: 12 path: 2 path: 2 path: 8 span: 630 span: 29 span: 50 } location: { path: 4 path: 12 path: 2 path: 2 path: 7 span: 630 span: 40 span: 49 } location: { path: 4 path: 12 path: 4 path: 1 span: 631 span: 2 span: 640 span: 3 } location: { path: 4 path: 12 path: 4 path: 1 path: 1 span: 631 span: 7 span: 13 } location: { path: 4 path: 12 path: 4 path: 1 path: 2 path: 0 span: 633 span: 4 span: 18 leading_comments: " Use the default type.\n" } location: { path: 4 path: 12 path: 4 path: 1 path: 2 path: 0 path: 1 span: 633 span: 4 span: 13 } location: { path: 4 path: 12 path: 4 path: 1 path: 2 path: 0 path: 2 span: 633 span: 16 span: 17 } location: { path: 4 path: 12 path: 4 path: 1 path: 2 path: 1 span: 636 span: 4 span: 18 leading_comments: " Use JavaScript strings.\n" } location: { path: 4 path: 12 path: 4 path: 1 path: 2 path: 1 path: 1 span: 636 span: 4 span: 13 } location: { path: 4 path: 12 path: 4 path: 1 path: 2 path: 1 path: 2 span: 636 span: 16 span: 17 } location: { path: 4 path: 12 path: 4 path: 1 path: 2 path: 2 span: 639 span: 4 span: 18 leading_comments: " Use JavaScript numbers.\n" } location: { path: 4 path: 12 path: 4 path: 1 path: 2 path: 2 path: 1 span: 639 span: 4 span: 13 } location: { path: 4 path: 12 path: 4 path: 1 path: 2 path: 2 path: 2 span: 639 span: 16 span: 17 } location: { path: 4 path: 12 path: 2 path: 3 span: 672 span: 2 span: 43 leading_comments: " Should this field be parsed lazily?  Lazy applies only to message-type\n fields.  It means that when the outer message is initially parsed, the\n inner message's contents will not be parsed but instead stored in encoded\n form.  The inner message will actually be parsed when it is first accessed.\n\n This is only a hint.  Implementations are free to choose whether to use\n eager or lazy parsing regardless of the value of this option.  However,\n setting this option true suggests that the protocol author believes that\n using lazy parsing on this field is worth the additional bookkeeping\n overhead typically needed to implement it.\n\n This option does not affect the public interface of any generated code;\n all method signatures remain the same.  Furthermore, thread-safety of the\n interface is not affected by this option; const methods remain safe to\n call from multiple threads concurrently, while non-const methods continue\n to require exclusive access.\n\n Note that implementations may choose not to check required fields within\n a lazy sub-message.  That is, calling IsInitialized() on the outer message\n may return true even if the inner message has missing required fields.\n This is necessary because otherwise the inner message would have to be\n parsed in order to perform the check, defeating the purpose of lazy\n parsing.  An implementation which chooses not to check required fields\n must be consistent about it.  That is, for any particular sub-message, the\n implementation must either *always* check its required fields, or *never*\n check its required fields, regardless of whether or not the message has\n been parsed.\n\n As of May 2022, lazy verifies the contents of the byte stream during\n parsing.  An invalid byte stream will cause the overall parsing to fail.\n" } location: { path: 4 path: 12 path: 2 path: 3 path: 4 span: 672 span: 2 span: 10 } location: { path: 4 path: 12 path: 2 path: 3 path: 5 span: 672 span: 11 span: 15 } location: { path: 4 path: 12 path: 2 path: 3 path: 1 span: 672 span: 16 span: 20 } location: { path: 4 path: 12 path: 2 path: 3 path: 3 span: 672 span: 23 span: 24 } location: { path: 4 path: 12 path: 2 path: 3 path: 8 span: 672 span: 25 span: 42 } location: { path: 4 path: 12 path: 2 path: 3 path: 7 span: 672 span: 36 span: 41 } location: { path: 4 path: 12 path: 2 path: 4 span: 677 span: 2 span: 55 leading_comments: " unverified_lazy does no correctness checks on the byte stream. This should\n only be used where lazy with verification is prohibitive for performance\n reasons.\n" } location: { path: 4 path: 12 path: 2 path: 4 path: 4 span: 677 span: 2 span: 10 } location: { path: 4 path: 12 path: 2 path: 4 path: 5 span: 677 span: 11 span: 15 } location: { path: 4 path: 12 path: 2 path: 4 path: 1 span: 677 span: 16 span: 31 } location: { path: 4 path: 12 path: 2 path: 4 path: 3 span: 677 span: 34 span: 36 } location: { path: 4 path: 12 path: 2 path: 4 path: 8 span: 677 span: 37 span: 54 } location: { path: 4 path: 12 path: 2 path: 4 path: 7 span: 677 span: 48 span: 53 } location: { path: 4 path: 12 path: 2 path: 5 span: 683 span: 2 span: 49 leading_comments: " Is this field deprecated?\n Depending on the target platform, this can emit Deprecated annotations\n for accessors, or it will be completely ignored; in the very least, this\n is a formalization for deprecating fields.\n" } location: { path: 4 path: 12 path: 2 path: 5 path: 4 span: 683 span: 2 span: 10 } location: { path: 4 path: 12 path: 2 path: 5 path: 5 span: 683 span: 11 span: 15 } location: { path: 4 path: 12 path: 2 path: 5 path: 1 span: 683 span: 16 span: 26 } location: { path: 4 path: 12 path: 2 path: 5 path: 3 span: 683 span: 29 span: 30 } location: { path: 4 path: 12 path: 2 path: 5 path: 8 span: 683 span: 31 span: 48 } location: { path: 4 path: 12 path: 2 path: 5 path: 7 span: 683 span: 42 span: 47 } location: { path: 4 path: 12 path: 2 path: 6 span: 686 span: 2 span: 44 leading_comments: " For Google-internal migration only. Do not use.\n" } location: { path: 4 path: 12 path: 2 path: 6 path: 4 span: 686 span: 2 span: 10 } location: { path: 4 path: 12 path: 2 path: 6 path: 5 span: 686 span: 11 span: 15 } location: { path: 4 path: 12 path: 2 path: 6 path: 1 span: 686 span: 16 span: 20 } location: { path: 4 path: 12 path: 2 path: 6 path: 3 span: 686 span: 23 span: 25 } location: { path: 4 path: 12 path: 2 path: 6 path: 8 span: 686 span: 26 span: 43 } location: { path: 4 path: 12 path: 2 path: 6 path: 7 span: 686 span: 37 span: 42 } location: { path: 4 path: 12 path: 2 path: 7 span: 690 span: 2 span: 52 leading_comments: " Indicate that the field value should not be printed out when using debug\n formats, e.g. when the field contains sensitive credentials.\n" } location: { path: 4 path: 12 path: 2 path: 7 path: 4 span: 690 span: 2 span: 10 } location: { path: 4 path: 12 path: 2 path: 7 path: 5 span: 690 span: 11 span: 15 } location: { path: 4 path: 12 path: 2 path: 7 path: 1 span: 690 span: 16 span: 28 } location: { path: 4 path: 12 path: 2 path: 7 path: 3 span: 690 span: 31 span: 33 } location: { path: 4 path: 12 path: 2 path: 7 path: 8 span: 690 span: 34 span: 51 } location: { path: 4 path: 12 path: 2 path: 7 path: 7 span: 690 span: 45 span: 50 } location: { path: 4 path: 12 path: 4 path: 2 span: 695 span: 2 span: 699 span: 3 leading_comments: " If set to RETENTION_SOURCE, the option will be omitted from the binary.\n Note: as of January 2023, support for this is in progress and does not yet\n have an effect (b/264593489).\n" } location: { path: 4 path: 12 path: 4 path: 2 path: 1 span: 695 span: 7 span: 22 } location: { path: 4 path: 12 path: 4 path: 2 path: 2 path: 0 span: 696 span: 4 span: 26 } location: { path: 4 path: 12 path: 4 path: 2 path: 2 path: 0 path: 1 span: 696 span: 4 span: 21 } location: { path: 4 path: 12 path: 4 path: 2 path: 2 path: 0 path: 2 span: 696 span: 24 span: 25 } location: { path: 4 path: 12 path: 4 path: 2 path: 2 path: 1 span: 697 span: 4 span: 26 } location: { path: 4 path: 12 path: 4 path: 2 path: 2 path: 1 path: 1 span: 697 span: 4 span: 21 } location: { path: 4 path: 12 path: 4 path: 2 path: 2 path: 1 path: 2 span: 697 span: 24 span: 25 } location: { path: 4 path: 12 path: 4 path: 2 path: 2 path: 2 span: 698 span: 4 span: 25 } location: { path: 4 path: 12 path: 4 path: 2 path: 2 path: 2 path: 1 span: 698 span: 4 span: 20 } location: { path: 4 path: 12 path: 4 path: 2 path: 2 path: 2 path: 2 span: 698 span: 23 span: 24 } location: { path: 4 path: 12 path: 2 path: 8 span: 701 span: 2 span: 42 } location: { path: 4 path: 12 path: 2 path: 8 path: 4 span: 701 span: 2 span: 10 } location: { path: 4 path: 12 path: 2 path: 8 path: 6 span: 701 span: 11 span: 26 } location: { path: 4 path: 12 path: 2 path: 8 path: 1 span: 701 span: 27 span: 36 } location: { path: 4 path: 12 path: 2 path: 8 path: 3 span: 701 span: 39 span: 41 } location: { path: 4 path: 12 path: 4 path: 3 span: 707 span: 2 span: 718 span: 3 leading_comments: " This indicates the types of entities that the field may apply to when used\n as an option. If it is unset, then the field may be freely used as an\n option on any kind of entity. Note: as of January 2023, support for this is\n in progress and does not yet have an effect (b/264593489).\n" } location: { path: 4 path: 12 path: 4 path: 3 path: 1 span: 707 span: 7 span: 23 } location: { path: 4 path: 12 path: 4 path: 3 path: 2 path: 0 span: 708 span: 4 span: 28 } location: { path: 4 path: 12 path: 4 path: 3 path: 2 path: 0 path: 1 span: 708 span: 4 span: 23 } location: { path: 4 path: 12 path: 4 path: 3 path: 2 path: 0 path: 2 span: 708 span: 26 span: 27 } location: { path: 4 path: 12 path: 4 path: 3 path: 2 path: 1 span: 709 span: 4 span: 25 } location: { path: 4 path: 12 path: 4 path: 3 path: 2 path: 1 path: 1 span: 709 span: 4 span: 20 } location: { path: 4 path: 12 path: 4 path: 3 path: 2 path: 1 path: 2 span: 709 span: 23 span: 24 } location: { path: 4 path: 12 path: 4 path: 3 path: 2 path: 2 span: 710 span: 4 span: 36 } location: { path: 4 path: 12 path: 4 path: 3 path: 2 path: 2 path: 1 span: 710 span: 4 span: 31 } location: { path: 4 path: 12 path: 4 path: 3 path: 2 path: 2 path: 2 span: 710 span: 34 span: 35 } location: { path: 4 path: 12 path: 4 path: 3 path: 2 path: 3 span: 711 span: 4 span: 28 } location: { path: 4 path: 12 path: 4 path: 3 path: 2 path: 3 path: 1 span: 711 span: 4 span: 23 } location: { path: 4 path: 12 path: 4 path: 3 path: 2 path: 3 path: 2 span: 711 span: 26 span: 27 } location: { path: 4 path: 12 path: 4 path: 3 path: 2 path: 4 span: 712 span: 4 span: 26 } location: { path: 4 path: 12 path: 4 path: 3 path: 2 path: 4 path: 1 span: 712 span: 4 span: 21 } location: { path: 4 path: 12 path: 4 path: 3 path: 2 path: 4 path: 2 span: 712 span: 24 span: 25 } location: { path: 4 path: 12 path: 4 path: 3 path: 2 path: 5 span: 713 span: 4 span: 26 } location: { path: 4 path: 12 path: 4 path: 3 path: 2 path: 5 path: 1 span: 713 span: 4 span: 21 } location: { path: 4 path: 12 path: 4 path: 3 path: 2 path: 5 path: 2 span: 713 span: 24 span: 25 } location: { path: 4 path: 12 path: 4 path: 3 path: 2 path: 6 span: 714 span: 4 span: 25 } location: { path: 4 path: 12 path: 4 path: 3 path: 2 path: 6 path: 1 span: 714 span: 4 span: 20 } location: { path: 4 path: 12 path: 4 path: 3 path: 2 path: 6 path: 2 span: 714 span: 23 span: 24 } location: { path: 4 path: 12 path: 4 path: 3 path: 2 path: 7 span: 715 span: 4 span: 31 } location: { path: 4 path: 12 path: 4 path: 3 path: 2 path: 7 path: 1 span: 715 span: 4 span: 26 } location: { path: 4 path: 12 path: 4 path: 3 path: 2 path: 7 path: 2 span: 715 span: 29 span: 30 } location: { path: 4 path: 12 path: 4 path: 3 path: 2 path: 8 span: 716 span: 4 span: 28 } location: { path: 4 path: 12 path: 4 path: 3 path: 2 path: 8 path: 1 span: 716 span: 4 span: 23 } location: { path: 4 path: 12 path: 4 path: 3 path: 2 path: 8 path: 2 span: 716 span: 26 span: 27 } location: { path: 4 path: 12 path: 4 path: 3 path: 2 path: 9 span: 717 span: 4 span: 27 } location: { path: 4 path: 12 path: 4 path: 3 path: 2 path: 9 path: 1 span: 717 span: 4 span: 22 } location: { path: 4 path: 12 path: 4 path: 3 path: 2 path: 9 path: 2 span: 717 span: 25 span: 26 } location: { path: 4 path: 12 path: 2 path: 9 span: 720 span: 2 span: 41 } location: { path: 4 path: 12 path: 2 path: 9 path: 4 span: 720 span: 2 span: 10 } location: { path: 4 path: 12 path: 2 path: 9 path: 6 span: 720 span: 11 span: 27 } location: { path: 4 path: 12 path: 2 path: 9 path: 1 span: 720 span: 28 span: 35 } location: { path: 4 path: 12 path: 2 path: 9 path: 3 span: 720 span: 38 span: 40 } location: { path: 4 path: 12 path: 3 path: 0 span: 722 span: 2 span: 725 span: 3 } location: { path: 4 path: 12 path: 3 path: 0 path: 1 span: 722 span: 10 span: 24 } location: { path: 4 path: 12 path: 3 path: 0 path: 2 path: 0 span: 723 span: 4 span: 32 } location: { path: 4 path: 12 path: 3 path: 0 path: 2 path: 0 path: 4 span: 723 span: 4 span: 12 } location: { path: 4 path: 12 path: 3 path: 0 path: 2 path: 0 path: 5 span: 723 span: 13 span: 19 } location: { path: 4 path: 12 path: 3 path: 0 path: 2 path: 0 path: 1 span: 723 span: 20 span: 27 } location: { path: 4 path: 12 path: 3 path: 0 path: 2 path: 0 path: 3 span: 723 span: 30 span: 31 } location: { path: 4 path: 12 path: 3 path: 0 path: 2 path: 1 span: 724 span: 4 span: 30 trailing_comments: " Textproto value.\n" } location: { path: 4 path: 12 path: 3 path: 0 path: 2 path: 1 path: 4 span: 724 span: 4 span: 12 } location: { path: 4 path: 12 path: 3 path: 0 path: 2 path: 1 path: 5 span: 724 span: 13 span: 19 } location: { path: 4 path: 12 path: 3 path: 0 path: 2 path: 1 path: 1 span: 724 span: 20 span: 25 } location: { path: 4 path: 12 path: 3 path: 0 path: 2 path: 1 path: 3 span: 724 span: 28 span: 29 } location: { path: 4 path: 12 path: 2 path: 10 span: 726 span: 2 span: 48 } location: { path: 4 path: 12 path: 2 path: 10 path: 4 span: 726 span: 2 span: 10 } location: { path: 4 path: 12 path: 2 path: 10 path: 6 span: 726 span: 11 span: 25 } location: { path: 4 path: 12 path: 2 path: 10 path: 1 span: 726 span: 26 span: 42 } location: { path: 4 path: 12 path: 2 path: 10 path: 3 span: 726 span: 45 span: 47 } location: { path: 4 path: 12 path: 2 path: 11 span: 729 span: 2 span: 36 leading_comments: " Any features defined in the specific edition.\n" } location: { path: 4 path: 12 path: 2 path: 11 path: 4 span: 729 span: 2 span: 10 } location: { path: 4 path: 12 path: 2 path: 11 path: 6 span: 729 span: 11 span: 21 } location: { path: 4 path: 12 path: 2 path: 11 path: 1 span: 729 span: 22 span: 30 } location: { path: 4 path: 12 path: 2 path: 11 path: 3 span: 729 span: 33 span: 35 } location: { path: 4 path: 12 path: 2 path: 12 span: 732 span: 2 span: 58 leading_comments: " The parser stores options it doesn't recognize here. See above.\n" } location: { path: 4 path: 12 path: 2 path: 12 path: 4 span: 732 span: 2 span: 10 } location: { path: 4 path: 12 path: 2 path: 12 path: 6 span: 732 span: 11 span: 30 } location: { path: 4 path: 12 path: 2 path: 12 path: 1 span: 732 span: 31 span: 51 } location: { path: 4 path: 12 path: 2 path: 12 path: 3 span: 732 span: 54 span: 57 } location: { path: 4 path: 12 path: 5 span: 735 span: 2 span: 25 leading_comments: " Clients can define custom options in extensions of this message. See above.\n" } location: { path: 4 path: 12 path: 5 path: 0 span: 735 span: 13 span: 24 } location: { path: 4 path: 12 path: 5 path: 0 path: 1 span: 735 span: 13 span: 17 } location: { path: 4 path: 12 path: 5 path: 0 path: 2 span: 735 span: 21 span: 24 } location: { path: 4 path: 12 path: 9 span: 737 span: 2 span: 13 trailing_comments: " removed jtype\n" } location: { path: 4 path: 12 path: 9 path: 0 span: 737 span: 11 span: 12 } location: { path: 4 path: 12 path: 9 path: 0 path: 1 span: 737 span: 11 span: 12 } location: { path: 4 path: 12 path: 9 path: 0 path: 2 span: 737 span: 11 span: 12 } location: { path: 4 path: 12 path: 9 span: 738 span: 2 span: 14 trailing_comments: " reserve target, target_obsolete_do_not_use\n" } location: { path: 4 path: 12 path: 9 path: 1 span: 738 span: 11 span: 13 } location: { path: 4 path: 12 path: 9 path: 1 path: 1 span: 738 span: 11 span: 13 } location: { path: 4 path: 12 path: 9 path: 1 path: 2 span: 738 span: 11 span: 13 } location: { path: 4 path: 13 span: 741 span: 0 span: 750 span: 1 } location: { path: 4 path: 13 path: 1 span: 741 span: 8 span: 20 } location: { path: 4 path: 13 path: 2 path: 0 span: 743 span: 2 span: 35 leading_comments: " Any features defined in the specific edition.\n" } location: { path: 4 path: 13 path: 2 path: 0 path: 4 span: 743 span: 2 span: 10 } location: { path: 4 path: 13 path: 2 path: 0 path: 6 span: 743 span: 11 span: 21 } location: { path: 4 path: 13 path: 2 path: 0 path: 1 span: 743 span: 22 span: 30 } location: { path: 4 path: 13 path: 2 path: 0 path: 3 span: 743 span: 33 span: 34 } location: { path: 4 path: 13 path: 2 path: 1 span: 746 span: 2 span: 58 leading_comments: " The parser stores options it doesn't recognize here. See above.\n" } location: { path: 4 path: 13 path: 2 path: 1 path: 4 span: 746 span: 2 span: 10 } location: { path: 4 path: 13 path: 2 path: 1 path: 6 span: 746 span: 11 span: 30 } location: { path: 4 path: 13 path: 2 path: 1 path: 1 span: 746 span: 31 span: 51 } location: { path: 4 path: 13 path: 2 path: 1 path: 3 span: 746 span: 54 span: 57 } location: { path: 4 path: 13 path: 5 span: 749 span: 2 span: 25 leading_comments: " Clients can define custom options in extensions of this message. See above.\n" } location: { path: 4 path: 13 path: 5 path: 0 span: 749 span: 13 span: 24 } location: { path: 4 path: 13 path: 5 path: 0 path: 1 span: 749 span: 13 span: 17 } location: { path: 4 path: 13 path: 5 path: 0 path: 2 span: 749 span: 21 span: 24 } location: { path: 4 path: 14 span: 752 span: 0 span: 782 span: 1 } location: { path: 4 path: 14 path: 1 span: 752 span: 8 span: 19 } location: { path: 4 path: 14 path: 2 path: 0 span: 756 span: 2 span: 32 leading_comments: " Set this option to true to allow mapping different tag names to the same\n value.\n" } location: { path: 4 path: 14 path: 2 path: 0 path: 4 span: 756 span: 2 span: 10 } location: { path: 4 path: 14 path: 2 path: 0 path: 5 span: 756 span: 11 span: 15 } location: { path: 4 path: 14 path: 2 path: 0 path: 1 span: 756 span: 16 span: 27 } location: { path: 4 path: 14 path: 2 path: 0 path: 3 span: 756 span: 30 span: 31 } location: { path: 4 path: 14 path: 2 path: 1 span: 762 span: 2 span: 49 leading_comments: " Is this enum deprecated?\n Depending on the target platform, this can emit Deprecated annotations\n for the enum, or it will be completely ignored; in the very least, this\n is a formalization for deprecating enums.\n" } location: { path: 4 path: 14 path: 2 path: 1 path: 4 span: 762 span: 2 span: 10 } location: { path: 4 path: 14 path: 2 path: 1 path: 5 span: 762 span: 11 span: 15 } location: { path: 4 path: 14 path: 2 path: 1 path: 1 span: 762 span: 16 span: 26 } location: { path: 4 path: 14 path: 2 path: 1 path: 3 span: 762 span: 29 span: 30 } location: { path: 4 path: 14 path: 2 path: 1 path: 8 span: 762 span: 31 span: 48 } location: { path: 4 path: 14 path: 2 path: 1 path: 7 span: 762 span: 42 span: 47 } location: { path: 4 path: 14 path: 9 span: 764 span: 2 span: 13 trailing_comments: " javanano_as_lite\n" } location: { path: 4 path: 14 path: 9 path: 0 span: 764 span: 11 span: 12 } location: { path: 4 path: 14 path: 9 path: 0 path: 1 span: 764 span: 11 span: 12 } location: { path: 4 path: 14 path: 9 path: 0 path: 2 span: 764 span: 11 span: 12 } location: { path: 4 path: 14 path: 2 path: 2 span: 772 span: 2 span: 79 leading_comments: " Enable the legacy handling of JSON field name conflicts.  This lowercases\n and strips underscored from the fields before comparison in proto3 only.\n The new behavior takes `json_name` into account and applies to proto2 as\n well.\n TODO(b/261750190) Remove this legacy behavior once downstream teams have\n had time to migrate.\n" } location: { path: 4 path: 14 path: 2 path: 2 path: 4 span: 772 span: 2 span: 10 } location: { path: 4 path: 14 path: 2 path: 2 path: 5 span: 772 span: 11 span: 15 } location: { path: 4 path: 14 path: 2 path: 2 path: 1 span: 772 span: 16 span: 54 } location: { path: 4 path: 14 path: 2 path: 2 path: 3 span: 772 span: 57 span: 58 } location: { path: 4 path: 14 path: 2 path: 2 path: 8 span: 772 span: 59 span: 78 } location: { path: 4 path: 14 path: 2 path: 2 path: 8 path: 3 span: 772 span: 60 span: 77 } location: { path: 4 path: 14 path: 2 path: 3 span: 775 span: 2 span: 35 leading_comments: " Any features defined in the specific edition.\n" } location: { path: 4 path: 14 path: 2 path: 3 path: 4 span: 775 span: 2 span: 10 } location: { path: 4 path: 14 path: 2 path: 3 path: 6 span: 775 span: 11 span: 21 } location: { path: 4 path: 14 path: 2 path: 3 path: 1 span: 775 span: 22 span: 30 } location: { path: 4 path: 14 path: 2 path: 3 path: 3 span: 775 span: 33 span: 34 } location: { path: 4 path: 14 path: 2 path: 4 span: 778 span: 2 span: 58 leading_comments: " The parser stores options it doesn't recognize here. See above.\n" } location: { path: 4 path: 14 path: 2 path: 4 path: 4 span: 778 span: 2 span: 10 } location: { path: 4 path: 14 path: 2 path: 4 path: 6 span: 778 span: 11 span: 30 } location: { path: 4 path: 14 path: 2 path: 4 path: 1 span: 778 span: 31 span: 51 } location: { path: 4 path: 14 path: 2 path: 4 path: 3 span: 778 span: 54 span: 57 } location: { path: 4 path: 14 path: 5 span: 781 span: 2 span: 25 leading_comments: " Clients can define custom options in extensions of this message. See above.\n" } location: { path: 4 path: 14 path: 5 path: 0 span: 781 span: 13 span: 24 } location: { path: 4 path: 14 path: 5 path: 0 path: 1 span: 781 span: 13 span: 17 } location: { path: 4 path: 14 path: 5 path: 0 path: 2 span: 781 span: 21 span: 24 } location: { path: 4 path: 15 span: 784 span: 0 span: 804 span: 1 } location: { path: 4 path: 15 path: 1 span: 784 span: 8 span: 24 } location: { path: 4 path: 15 path: 2 path: 0 span: 789 span: 2 span: 49 leading_comments: " Is this enum value deprecated?\n Depending on the target platform, this can emit Deprecated annotations\n for the enum value, or it will be completely ignored; in the very least,\n this is a formalization for deprecating enum values.\n" } location: { path: 4 path: 15 path: 2 path: 0 path: 4 span: 789 span: 2 span: 10 } location: { path: 4 path: 15 path: 2 path: 0 path: 5 span: 789 span: 11 span: 15 } location: { path: 4 path: 15 path: 2 path: 0 path: 1 span: 789 span: 16 span: 26 } location: { path: 4 path: 15 path: 2 path: 0 path: 3 span: 789 span: 29 span: 30 } location: { path: 4 path: 15 path: 2 path: 0 path: 8 span: 789 span: 31 span: 48 } location: { path: 4 path: 15 path: 2 path: 0 path: 7 span: 789 span: 42 span: 47 } location: { path: 4 path: 15 path: 2 path: 1 span: 792 span: 2 span: 35 leading_comments: " Any features defined in the specific edition.\n" } location: { path: 4 path: 15 path: 2 path: 1 path: 4 span: 792 span: 2 span: 10 } location: { path: 4 path: 15 path: 2 path: 1 path: 6 span: 792 span: 11 span: 21 } location: { path: 4 path: 15 path: 2 path: 1 path: 1 span: 792 span: 22 span: 30 } location: { path: 4 path: 15 path: 2 path: 1 path: 3 span: 792 span: 33 span: 34 } location: { path: 4 path: 15 path: 2 path: 2 span: 797 span: 2 span: 51 leading_comments: " Indicate that fields annotated with this enum value should not be printed\n out when using debug formats, e.g. when the field contains sensitive\n credentials.\n" } location: { path: 4 path: 15 path: 2 path: 2 path: 4 span: 797 span: 2 span: 10 } location: { path: 4 path: 15 path: 2 path: 2 path: 5 span: 797 span: 11 span: 15 } location: { path: 4 path: 15 path: 2 path: 2 path: 1 span: 797 span: 16 span: 28 } location: { path: 4 path: 15 path: 2 path: 2 path: 3 span: 797 span: 31 span: 32 } location: { path: 4 path: 15 path: 2 path: 2 path: 8 span: 797 span: 33 span: 50 } location: { path: 4 path: 15 path: 2 path: 2 path: 7 span: 797 span: 44 span: 49 } location: { path: 4 path: 15 path: 2 path: 3 span: 800 span: 2 span: 58 leading_comments: " The parser stores options it doesn't recognize here. See above.\n" } location: { path: 4 path: 15 path: 2 path: 3 path: 4 span: 800 span: 2 span: 10 } location: { path: 4 path: 15 path: 2 path: 3 path: 6 span: 800 span: 11 span: 30 } location: { path: 4 path: 15 path: 2 path: 3 path: 1 span: 800 span: 31 span: 51 } location: { path: 4 path: 15 path: 2 path: 3 path: 3 span: 800 span: 54 span: 57 } location: { path: 4 path: 15 path: 5 span: 803 span: 2 span: 25 leading_comments: " Clients can define custom options in extensions of this message. See above.\n" } location: { path: 4 path: 15 path: 5 path: 0 span: 803 span: 13 span: 24 } location: { path: 4 path: 15 path: 5 path: 0 path: 1 span: 803 span: 13 span: 17 } location: { path: 4 path: 15 path: 5 path: 0 path: 2 span: 803 span: 21 span: 24 } location: { path: 4 path: 16 span: 806 span: 0 span: 827 span: 1 } location: { path: 4 path: 16 path: 1 span: 806 span: 8 span: 22 } location: { path: 4 path: 16 path: 2 path: 0 span: 809 span: 2 span: 36 leading_comments: " Any features defined in the specific edition.\n" } location: { path: 4 path: 16 path: 2 path: 0 path: 4 span: 809 span: 2 span: 10 } location: { path: 4 path: 16 path: 2 path: 0 path: 6 span: 809 span: 11 span: 21 } location: { path: 4 path: 16 path: 2 path: 0 path: 1 span: 809 span: 22 span: 30 } location: { path: 4 path: 16 path: 2 path: 0 path: 3 span: 809 span: 33 span: 35 } location: { path: 4 path: 16 path: 2 path: 1 span: 820 span: 2 span: 50 leading_comments: " Is this service deprecated?\n Depending on the target platform, this can emit Deprecated annotations\n for the service, or it will be completely ignored; in the very least,\n this is a formalization for deprecating services.\n" leading_detached_comments: " Note:  Field numbers 1 through 32 are reserved for Google's internal RPC\n   framework.  We apologize for hoarding these numbers to ourselves, but\n   we were already using them long before we decided to release Protocol\n   Buffers.\n" } location: { path: 4 path: 16 path: 2 path: 1 path: 4 span: 820 span: 2 span: 10 } location: { path: 4 path: 16 path: 2 path: 1 path: 5 span: 820 span: 11 span: 15 } location: { path: 4 path: 16 path: 2 path: 1 path: 1 span: 820 span: 16 span: 26 } location: { path: 4 path: 16 path: 2 path: 1 path: 3 span: 820 span: 29 span: 31 } location: { path: 4 path: 16 path: 2 path: 1 path: 8 span: 820 span: 32 span: 49 } location: { path: 4 path: 16 path: 2 path: 1 path: 7 span: 820 span: 43 span: 48 } location: { path: 4 path: 16 path: 2 path: 2 span: 823 span: 2 span: 58 leading_comments: " The parser stores options it doesn't recognize here. See above.\n" } location: { path: 4 path: 16 path: 2 path: 2 path: 4 span: 823 span: 2 span: 10 } location: { path: 4 path: 16 path: 2 path: 2 path: 6 span: 823 span: 11 span: 30 } location: { path: 4 path: 16 path: 2 path: 2 path: 1 span: 823 span: 31 span: 51 } location: { path: 4 path: 16 path: 2 path: 2 path: 3 span: 823 span: 54 span: 57 } location: { path: 4 path: 16 path: 5 span: 826 span: 2 span: 25 leading_comments: " Clients can define custom options in extensions of this message. See above.\n" } location: { path: 4 path: 16 path: 5 path: 0 span: 826 span: 13 span: 24 } location: { path: 4 path: 16 path: 5 path: 0 path: 1 span: 826 span: 13 span: 17 } location: { path: 4 path: 16 path: 5 path: 0 path: 2 span: 826 span: 21 span: 24 } location: { path: 4 path: 17 span: 829 span: 0 span: 861 span: 1 } location: { path: 4 path: 17 path: 1 span: 829 span: 8 span: 21 } location: { path: 4 path: 17 path: 2 path: 0 span: 840 span: 2 span: 50 leading_comments: " Is this method deprecated?\n Depending on the target platform, this can emit Deprecated annotations\n for the method, or it will be completely ignored; in the very least,\n this is a formalization for deprecating methods.\n" leading_detached_comments: " Note:  Field numbers 1 through 32 are reserved for Google's internal RPC\n   framework.  We apologize for hoarding these numbers to ourselves, but\n   we were already using them long before we decided to release Protocol\n   Buffers.\n" } location: { path: 4 path: 17 path: 2 path: 0 path: 4 span: 840 span: 2 span: 10 } location: { path: 4 path: 17 path: 2 path: 0 path: 5 span: 840 span: 11 span: 15 } location: { path: 4 path: 17 path: 2 path: 0 path: 1 span: 840 span: 16 span: 26 } location: { path: 4 path: 17 path: 2 path: 0 path: 3 span: 840 span: 29 span: 31 } location: { path: 4 path: 17 path: 2 path: 0 path: 8 span: 840 span: 32 span: 49 } location: { path: 4 path: 17 path: 2 path: 0 path: 7 span: 840 span: 43 span: 48 } location: { path: 4 path: 17 path: 4 path: 0 span: 845 span: 2 span: 849 span: 3 leading_comments: " Is this method side-effect-free (or safe in HTTP parlance), or idempotent,\n or neither? HTTP based RPC implementation may choose GET verb for safe\n methods, and PUT verb for idempotent methods instead of the default POST.\n" } location: { path: 4 path: 17 path: 4 path: 0 path: 1 span: 845 span: 7 span: 23 } location: { path: 4 path: 17 path: 4 path: 0 path: 2 path: 0 span: 846 span: 4 span: 28 } location: { path: 4 path: 17 path: 4 path: 0 path: 2 path: 0 path: 1 span: 846 span: 4 span: 23 } location: { path: 4 path: 17 path: 4 path: 0 path: 2 path: 0 path: 2 span: 846 span: 26 span: 27 } location: { path: 4 path: 17 path: 4 path: 0 path: 2 path: 1 span: 847 span: 4 span: 24 trailing_comments: " implies idempotent\n" } location: { path: 4 path: 17 path: 4 path: 0 path: 2 path: 1 path: 1 span: 847 span: 4 span: 19 } location: { path: 4 path: 17 path: 4 path: 0 path: 2 path: 1 path: 2 span: 847 span: 22 span: 23 } location: { path: 4 path: 17 path: 4 path: 0 path: 2 path: 2 span: 848 span: 4 span: 19 trailing_comments: " idempotent, but may have side effects\n" } location: { path: 4 path: 17 path: 4 path: 0 path: 2 path: 2 path: 1 span: 848 span: 4 span: 14 } location: { path: 4 path: 17 path: 4 path: 0 path: 2 path: 2 path: 2 span: 848 span: 17 span: 18 } location: { path: 4 path: 17 path: 2 path: 1 span: 850 span: 2 span: 851 span: 38 } location: { path: 4 path: 17 path: 2 path: 1 path: 4 span: 850 span: 2 span: 10 } location: { path: 4 path: 17 path: 2 path: 1 path: 6 span: 850 span: 11 span: 27 } location: { path: 4 path: 17 path: 2 path: 1 path: 1 span: 850 span: 28 span: 45 } location: { path: 4 path: 17 path: 2 path: 1 path: 3 span: 850 span: 48 span: 50 } location: { path: 4 path: 17 path: 2 path: 1 path: 8 span: 851 span: 6 span: 37 } location: { path: 4 path: 17 path: 2 path: 1 path: 7 span: 851 span: 17 span: 36 } location: { path: 4 path: 17 path: 2 path: 2 span: 854 span: 2 span: 36 leading_comments: " Any features defined in the specific edition.\n" } location: { path: 4 path: 17 path: 2 path: 2 path: 4 span: 854 span: 2 span: 10 } location: { path: 4 path: 17 path: 2 path: 2 path: 6 span: 854 span: 11 span: 21 } location: { path: 4 path: 17 path: 2 path: 2 path: 1 span: 854 span: 22 span: 30 } location: { path: 4 path: 17 path: 2 path: 2 path: 3 span: 854 span: 33 span: 35 } location: { path: 4 path: 17 path: 2 path: 3 span: 857 span: 2 span: 58 leading_comments: " The parser stores options it doesn't recognize here. See above.\n" } location: { path: 4 path: 17 path: 2 path: 3 path: 4 span: 857 span: 2 span: 10 } location: { path: 4 path: 17 path: 2 path: 3 path: 6 span: 857 span: 11 span: 30 } location: { path: 4 path: 17 path: 2 path: 3 path: 1 span: 857 span: 31 span: 51 } location: { path: 4 path: 17 path: 2 path: 3 path: 3 span: 857 span: 54 span: 57 } location: { path: 4 path: 17 path: 5 span: 860 span: 2 span: 25 leading_comments: " Clients can define custom options in extensions of this message. See above.\n" } location: { path: 4 path: 17 path: 5 path: 0 span: 860 span: 13 span: 24 } location: { path: 4 path: 17 path: 5 path: 0 path: 1 span: 860 span: 13 span: 17 } location: { path: 4 path: 17 path: 5 path: 0 path: 2 span: 860 span: 21 span: 24 } location: { path: 4 path: 18 span: 869 span: 0 span: 889 span: 1 leading_comments: " A message representing a option the parser does not recognize. This only\n appears in options protos created by the compiler::Parser class.\n DescriptorPool resolves these when building Descriptor objects. Therefore,\n options protos in descriptor objects (e.g. returned by Descriptor::options(),\n or produced by Descriptor::CopyTo()) will never have UninterpretedOptions\n in them.\n" } location: { path: 4 path: 18 path: 1 span: 869 span: 8 span: 27 } location: { path: 4 path: 18 path: 3 path: 0 span: 875 span: 2 span: 878 span: 3 leading_comments: " The name of the uninterpreted option.  Each string represents a segment in\n a dot-separated name.  is_extension is true iff a segment represents an\n extension (denoted with parentheses in options specs in .proto files).\n E.g.,{ [\"foo\", false], [\"bar.baz\", true], [\"moo\", false] } represents\n \"foo.(bar.baz).moo\".\n" } location: { path: 4 path: 18 path: 3 path: 0 path: 1 span: 875 span: 10 span: 18 } location: { path: 4 path: 18 path: 3 path: 0 path: 2 path: 0 span: 876 span: 4 span: 34 } location: { path: 4 path: 18 path: 3 path: 0 path: 2 path: 0 path: 4 span: 876 span: 4 span: 12 } location: { path: 4 path: 18 path: 3 path: 0 path: 2 path: 0 path: 5 span: 876 span: 13 span: 19 } location: { path: 4 path: 18 path: 3 path: 0 path: 2 path: 0 path: 1 span: 876 span: 20 span: 29 } location: { path: 4 path: 18 path: 3 path: 0 path: 2 path: 0 path: 3 span: 876 span: 32 span: 33 } location: { path: 4 path: 18 path: 3 path: 0 path: 2 path: 1 span: 877 span: 4 span: 35 } location: { path: 4 path: 18 path: 3 path: 0 path: 2 path: 1 path: 4 span: 877 span: 4 span: 12 } location: { path: 4 path: 18 path: 3 path: 0 path: 2 path: 1 path: 5 span: 877 span: 13 span: 17 } location: { path: 4 path: 18 path: 3 path: 0 path: 2 path: 1 path: 1 span: 877 span: 18 span: 30 } location: { path: 4 path: 18 path: 3 path: 0 path: 2 path: 1 path: 3 span: 877 span: 33 span: 34 } location: { path: 4 path: 18 path: 2 path: 0 span: 879 span: 2 span: 29 } location: { path: 4 path: 18 path: 2 path: 0 path: 4 span: 879 span: 2 span: 10 } location: { path: 4 path: 18 path: 2 path: 0 path: 6 span: 879 span: 11 span: 19 } location: { path: 4 path: 18 path: 2 path: 0 path: 1 span: 879 span: 20 span: 24 } location: { path: 4 path: 18 path: 2 path: 0 path: 3 span: 879 span: 27 span: 28 } location: { path: 4 path: 18 path: 2 path: 1 span: 883 span: 2 span: 39 leading_comments: " The value of the uninterpreted option, in whatever type the tokenizer\n identified it as during parsing. Exactly one of these should be set.\n" } location: { path: 4 path: 18 path: 2 path: 1 path: 4 span: 883 span: 2 span: 10 } location: { path: 4 path: 18 path: 2 path: 1 path: 5 span: 883 span: 11 span: 17 } location: { path: 4 path: 18 path: 2 path: 1 path: 1 span: 883 span: 18 span: 34 } location: { path: 4 path: 18 path: 2 path: 1 path: 3 span: 883 span: 37 span: 38 } location: { path: 4 path: 18 path: 2 path: 2 span: 884 span: 2 span: 41 } location: { path: 4 path: 18 path: 2 path: 2 path: 4 span: 884 span: 2 span: 10 } location: { path: 4 path: 18 path: 2 path: 2 path: 5 span: 884 span: 11 span: 17 } location: { path: 4 path: 18 path: 2 path: 2 path: 1 span: 884 span: 18 span: 36 } location: { path: 4 path: 18 path: 2 path: 2 path: 3 span: 884 span: 39 span: 40 } location: { path: 4 path: 18 path: 2 path: 3 span: 885 span: 2 span: 40 } location: { path: 4 path: 18 path: 2 path: 3 path: 4 span: 885 span: 2 span: 10 } location: { path: 4 path: 18 path: 2 path: 3 path: 5 span: 885 span: 11 span: 16 } location: { path: 4 path: 18 path: 2 path: 3 path: 1 span: 885 span: 17 span: 35 } location: { path: 4 path: 18 path: 2 path: 3 path: 3 span: 885 span: 38 span: 39 } location: { path: 4 path: 18 path: 2 path: 4 span: 886 span: 2 span: 35 } location: { path: 4 path: 18 path: 2 path: 4 path: 4 span: 886 span: 2 span: 10 } location: { path: 4 path: 18 path: 2 path: 4 path: 5 span: 886 span: 11 span: 17 } location: { path: 4 path: 18 path: 2 path: 4 path: 1 span: 886 span: 18 span: 30 } location: { path: 4 path: 18 path: 2 path: 4 path: 3 span: 886 span: 33 span: 34 } location: { path: 4 path: 18 path: 2 path: 5 span: 887 span: 2 span: 34 } location: { path: 4 path: 18 path: 2 path: 5 path: 4 span: 887 span: 2 span: 10 } location: { path: 4 path: 18 path: 2 path: 5 path: 5 span: 887 span: 11 span: 16 } location: { path: 4 path: 18 path: 2 path: 5 path: 1 span: 887 span: 17 span: 29 } location: { path: 4 path: 18 path: 2 path: 5 path: 3 span: 887 span: 32 span: 33 } location: { path: 4 path: 18 path: 2 path: 6 span: 888 span: 2 span: 38 } location: { path: 4 path: 18 path: 2 path: 6 path: 4 span: 888 span: 2 span: 10 } location: { path: 4 path: 18 path: 2 path: 6 path: 5 span: 888 span: 11 span: 17 } location: { path: 4 path: 18 path: 2 path: 6 path: 1 span: 888 span: 18 span: 33 } location: { path: 4 path: 18 path: 2 path: 6 path: 3 span: 888 span: 36 span: 37 } location: { path: 4 path: 19 span: 900 span: 0 span: 982 span: 1 leading_comments: " TODO(b/274655146) Enums in C++ gencode (and potentially other languages) are\n not well scoped.  This means that each of the feature enums below can clash\n with each other.  The short names we've chosen maximize call-site\n readability, but leave us very open to this scenario.  A future feature will\n be designed and implemented to handle this, hopefully before we ever hit a\n conflict here.\n" leading_detached_comments: " ===================================================================\n Features\n" } location: { path: 4 path: 19 path: 1 span: 900 span: 8 span: 18 } location: { path: 4 path: 19 path: 4 path: 0 span: 901 span: 2 span: 906 span: 3 } location: { path: 4 path: 19 path: 4 path: 0 path: 1 span: 901 span: 7 span: 20 } location: { path: 4 path: 19 path: 4 path: 0 path: 2 path: 0 span: 902 span: 4 span: 31 } location: { path: 4 path: 19 path: 4 path: 0 path: 2 path: 0 path: 1 span: 902 span: 4 span: 26 } location: { path: 4 path: 19 path: 4 path: 0 path: 2 path: 0 path: 2 span: 902 span: 29 span: 30 } location: { path: 4 path: 19 path: 4 path: 0 path: 2 path: 1 span: 903 span: 4 span: 17 } location: { path: 4 path: 19 path: 4 path: 0 path: 2 path: 1 path: 1 span: 903 span: 4 span: 12 } location: { path: 4 path: 19 path: 4 path: 0 path: 2 path: 1 path: 2 span: 903 span: 15 span: 16 } location: { path: 4 path: 19 path: 4 path: 0 path: 2 path: 2 span: 904 span: 4 span: 17 } location: { path: 4 path: 19 path: 4 path: 0 path: 2 path: 2 path: 1 span: 904 span: 4 span: 12 } location: { path: 4 path: 19 path: 4 path: 0 path: 2 path: 2 path: 2 span: 904 span: 15 span: 16 } location: { path: 4 path: 19 path: 4 path: 0 path: 2 path: 3 span: 905 span: 4 span: 24 } location: { path: 4 path: 19 path: 4 path: 0 path: 2 path: 3 path: 1 span: 905 span: 4 span: 19 } location: { path: 4 path: 19 path: 4 path: 0 path: 2 path: 3 path: 2 span: 905 span: 22 span: 23 } location: { path: 4 path: 19 path: 2 path: 0 span: 907 span: 2 span: 912 span: 4 } location: { path: 4 path: 19 path: 2 path: 0 path: 4 span: 907 span: 2 span: 10 } location: { path: 4 path: 19 path: 2 path: 0 path: 6 span: 907 span: 11 span: 24 } location: { path: 4 path: 19 path: 2 path: 0 path: 1 span: 907 span: 25 span: 39 } location: { path: 4 path: 19 path: 2 path: 0 path: 3 span: 907 span: 42 span: 43 } location: { path: 4 path: 19 path: 2 path: 0 path: 8 span: 907 span: 44 span: 912 span: 3 } location: { path: 4 path: 19 path: 2 path: 0 path: 8 path: 17 span: 908 span: 4 span: 33 } location: { path: 4 path: 19 path: 2 path: 0 path: 8 path: 19 path: 0 span: 909 span: 4 span: 31 } location: { path: 4 path: 19 path: 2 path: 0 path: 8 path: 19 path: 1 span: 910 span: 4 span: 30 } location: { path: 4 path: 19 path: 2 path: 0 path: 8 path: 20 path: 0 span: 911 span: 4 span: 61 } location: { path: 4 path: 19 path: 4 path: 1 span: 914 span: 2 span: 918 span: 3 } location: { path: 4 path: 19 path: 4 path: 1 path: 1 span: 914 span: 7 span: 15 } location: { path: 4 path: 19 path: 4 path: 1 path: 2 path: 0 span: 915 span: 4 span: 26 } location: { path: 4 path: 19 path: 4 path: 1 path: 2 path: 0 path: 1 span: 915 span: 4 span: 21 } location: { path: 4 path: 19 path: 4 path: 1 path: 2 path: 0 path: 2 span: 915 span: 24 span: 25 } location: { path: 4 path: 19 path: 4 path: 1 path: 2 path: 1 span: 916 span: 4 span: 13 } location: { path: 4 path: 19 path: 4 path: 1 path: 2 path: 1 path: 1 span: 916 span: 4 span: 8 } location: { path: 4 path: 19 path: 4 path: 1 path: 2 path: 1 path: 2 span: 916 span: 11 span: 12 } location: { path: 4 path: 19 path: 4 path: 1 path: 2 path: 2 span: 917 span: 4 span: 15 } location: { path: 4 path: 19 path: 4 path: 1 path: 2 path: 2 path: 1 span: 917 span: 4 span: 10 } location: { path: 4 path: 19 path: 4 path: 1 path: 2 path: 2 path: 2 span: 917 span: 13 span: 14 } location: { path: 4 path: 19 path: 2 path: 1 span: 919 span: 2 span: 924 span: 4 } location: { path: 4 path: 19 path: 2 path: 1 path: 4 span: 919 span: 2 span: 10 } location: { path: 4 path: 19 path: 2 path: 1 path: 6 span: 919 span: 11 span: 19 } location: { path: 4 path: 19 path: 2 path: 1 path: 1 span: 919 span: 20 span: 29 } location: { path: 4 path: 19 path: 2 path: 1 path: 3 span: 919 span: 32 span: 33 } location: { path: 4 path: 19 path: 2 path: 1 path: 8 span: 919 span: 34 span: 924 span: 3 } location: { path: 4 path: 19 path: 2 path: 1 path: 8 path: 17 span: 920 span: 4 span: 33 } location: { path: 4 path: 19 path: 2 path: 1 path: 8 path: 19 path: 0 span: 921 span: 4 span: 30 } location: { path: 4 path: 19 path: 2 path: 1 path: 8 path: 19 path: 1 span: 922 span: 4 span: 30 } location: { path: 4 path: 19 path: 2 path: 1 path: 8 path: 20 path: 0 span: 923 span: 4 span: 57 } location: { path: 4 path: 19 path: 4 path: 2 span: 926 span: 2 span: 930 span: 3 } location: { path: 4 path: 19 path: 4 path: 2 path: 1 span: 926 span: 7 span: 28 } location: { path: 4 path: 19 path: 4 path: 2 path: 2 path: 0 span: 927 span: 4 span: 40 } location: { path: 4 path: 19 path: 4 path: 2 path: 2 path: 0 path: 1 span: 927 span: 4 span: 35 } location: { path: 4 path: 19 path: 4 path: 2 path: 2 path: 0 path: 2 span: 927 span: 38 span: 39 } location: { path: 4 path: 19 path: 4 path: 2 path: 2 path: 1 span: 928 span: 4 span: 15 } location: { path: 4 path: 19 path: 4 path: 2 path: 2 path: 1 path: 1 span: 928 span: 4 span: 10 } location: { path: 4 path: 19 path: 4 path: 2 path: 2 path: 1 path: 2 span: 928 span: 13 span: 14 } location: { path: 4 path: 19 path: 4 path: 2 path: 2 path: 2 span: 929 span: 4 span: 17 } location: { path: 4 path: 19 path: 4 path: 2 path: 2 path: 2 path: 1 span: 929 span: 4 span: 12 } location: { path: 4 path: 19 path: 4 path: 2 path: 2 path: 2 path: 2 span: 929 span: 15 span: 16 } location: { path: 4 path: 19 path: 2 path: 2 span: 931 span: 2 span: 936 span: 4 } location: { path: 4 path: 19 path: 2 path: 2 path: 4 span: 931 span: 2 span: 10 } location: { path: 4 path: 19 path: 2 path: 2 path: 6 span: 931 span: 11 span: 32 } location: { path: 4 path: 19 path: 2 path: 2 path: 1 span: 931 span: 33 span: 56 } location: { path: 4 path: 19 path: 2 path: 2 path: 3 span: 931 span: 59 span: 60 } location: { path: 4 path: 19 path: 2 path: 2 path: 8 span: 931 span: 61 span: 936 span: 3 } location: { path: 4 path: 19 path: 2 path: 2 path: 8 path: 17 span: 932 span: 4 span: 33 } location: { path: 4 path: 19 path: 2 path: 2 path: 8 path: 19 path: 0 span: 933 span: 4 span: 31 } location: { path: 4 path: 19 path: 2 path: 2 path: 8 path: 19 path: 1 span: 934 span: 4 span: 30 } location: { path: 4 path: 19 path: 2 path: 2 path: 8 path: 20 path: 0 span: 935 span: 4 span: 59 } location: { path: 4 path: 19 path: 4 path: 3 span: 938 span: 2 span: 943 span: 3 } location: { path: 4 path: 19 path: 4 path: 3 path: 1 span: 938 span: 7 span: 28 } location: { path: 4 path: 19 path: 4 path: 3 path: 2 path: 0 span: 939 span: 4 span: 40 } location: { path: 4 path: 19 path: 4 path: 3 path: 2 path: 0 path: 1 span: 939 span: 4 span: 35 } location: { path: 4 path: 19 path: 4 path: 3 path: 2 path: 0 path: 2 span: 939 span: 38 span: 39 } location: { path: 4 path: 19 path: 4 path: 3 path: 2 path: 1 span: 940 span: 4 span: 18 } location: { path: 4 path: 19 path: 4 path: 3 path: 2 path: 1 path: 1 span: 940 span: 4 span: 13 } location: { path: 4 path: 19 path: 4 path: 3 path: 2 path: 1 path: 2 span: 940 span: 16 span: 17 } location: { path: 4 path: 19 path: 4 path: 3 path: 2 path: 2 span: 941 span: 4 span: 13 } location: { path: 4 path: 19 path: 4 path: 3 path: 2 path: 2 path: 1 span: 941 span: 4 span: 8 } location: { path: 4 path: 19 path: 4 path: 3 path: 2 path: 2 path: 2 span: 941 span: 11 span: 12 } location: { path: 4 path: 19 path: 4 path: 3 path: 2 path: 3 span: 942 span: 4 span: 13 } location: { path: 4 path: 19 path: 4 path: 3 path: 2 path: 3 path: 1 span: 942 span: 4 span: 8 } location: { path: 4 path: 19 path: 4 path: 3 path: 2 path: 3 path: 2 span: 942 span: 11 span: 12 } location: { path: 4 path: 19 path: 2 path: 3 span: 944 span: 2 span: 949 span: 4 } location: { path: 4 path: 19 path: 2 path: 3 path: 4 span: 944 span: 2 span: 10 } location: { path: 4 path: 19 path: 2 path: 3 path: 6 span: 944 span: 11 span: 32 } location: { path: 4 path: 19 path: 2 path: 3 path: 1 span: 944 span: 33 span: 56 } location: { path: 4 path: 19 path: 2 path: 3 path: 3 span: 944 span: 59 span: 60 } location: { path: 4 path: 19 path: 2 path: 3 path: 8 span: 944 span: 61 span: 949 span: 3 } location: { path: 4 path: 19 path: 2 path: 3 path: 8 path: 17 span: 945 span: 4 span: 33 } location: { path: 4 path: 19 path: 2 path: 3 path: 8 path: 19 path: 0 span: 946 span: 4 span: 31 } location: { path: 4 path: 19 path: 2 path: 3 path: 8 path: 19 path: 1 span: 947 span: 4 span: 30 } location: { path: 4 path: 19 path: 2 path: 3 path: 8 path: 20 path: 0 span: 948 span: 4 span: 62 } location: { path: 4 path: 19 path: 4 path: 4 span: 951 span: 2 span: 955 span: 3 } location: { path: 4 path: 19 path: 4 path: 4 path: 1 span: 951 span: 7 span: 22 } location: { path: 4 path: 19 path: 4 path: 4 path: 2 path: 0 span: 952 span: 4 span: 33 } location: { path: 4 path: 19 path: 4 path: 4 path: 2 path: 0 path: 1 span: 952 span: 4 span: 28 } location: { path: 4 path: 19 path: 4 path: 4 path: 2 path: 0 path: 2 span: 952 span: 31 span: 32 } location: { path: 4 path: 19 path: 4 path: 4 path: 2 path: 1 span: 953 span: 4 span: 24 } location: { path: 4 path: 19 path: 4 path: 4 path: 2 path: 1 path: 1 span: 953 span: 4 span: 19 } location: { path: 4 path: 19 path: 4 path: 4 path: 2 path: 1 path: 2 span: 953 span: 22 span: 23 } location: { path: 4 path: 19 path: 4 path: 4 path: 2 path: 2 span: 954 span: 4 span: 18 } location: { path: 4 path: 19 path: 4 path: 4 path: 2 path: 2 path: 1 span: 954 span: 4 span: 13 } location: { path: 4 path: 19 path: 4 path: 4 path: 2 path: 2 path: 2 span: 954 span: 16 span: 17 } location: { path: 4 path: 19 path: 2 path: 4 span: 956 span: 2 span: 961 span: 4 } location: { path: 4 path: 19 path: 2 path: 4 path: 4 span: 956 span: 2 span: 10 } location: { path: 4 path: 19 path: 2 path: 4 path: 6 span: 956 span: 11 span: 26 } location: { path: 4 path: 19 path: 2 path: 4 path: 1 span: 956 span: 27 span: 43 } location: { path: 4 path: 19 path: 2 path: 4 path: 3 span: 956 span: 46 span: 47 } location: { path: 4 path: 19 path: 2 path: 4 path: 8 span: 956 span: 48 span: 961 span: 3 } location: { path: 4 path: 19 path: 2 path: 4 path: 8 path: 17 span: 957 span: 4 span: 33 } location: { path: 4 path: 19 path: 2 path: 4 path: 8 path: 19 path: 0 span: 958 span: 4 span: 31 } location: { path: 4 path: 19 path: 2 path: 4 path: 8 path: 19 path: 1 span: 959 span: 4 span: 30 } location: { path: 4 path: 19 path: 2 path: 4 path: 8 path: 20 path: 0 span: 960 span: 4 span: 68 } location: { path: 4 path: 19 path: 4 path: 5 span: 963 span: 2 span: 967 span: 3 } location: { path: 4 path: 19 path: 4 path: 5 path: 1 span: 963 span: 7 span: 17 } location: { path: 4 path: 19 path: 4 path: 5 path: 2 path: 0 span: 964 span: 4 span: 28 } location: { path: 4 path: 19 path: 4 path: 5 path: 2 path: 0 path: 1 span: 964 span: 4 span: 23 } location: { path: 4 path: 19 path: 4 path: 5 path: 2 path: 0 path: 2 span: 964 span: 26 span: 27 } location: { path: 4 path: 19 path: 4 path: 5 path: 2 path: 1 span: 965 span: 4 span: 14 } location: { path: 4 path: 19 path: 4 path: 5 path: 2 path: 1 path: 1 span: 965 span: 4 span: 9 } location: { path: 4 path: 19 path: 4 path: 5 path: 2 path: 1 path: 2 span: 965 span: 12 span: 13 } location: { path: 4 path: 19 path: 4 path: 5 path: 2 path: 2 span: 966 span: 4 span: 27 } location: { path: 4 path: 19 path: 4 path: 5 path: 2 path: 2 path: 1 span: 966 span: 4 span: 22 } location: { path: 4 path: 19 path: 4 path: 5 path: 2 path: 2 path: 2 span: 966 span: 25 span: 26 } location: { path: 4 path: 19 path: 2 path: 5 span: 968 span: 2 span: 974 span: 4 } location: { path: 4 path: 19 path: 2 path: 5 path: 4 span: 968 span: 2 span: 10 } location: { path: 4 path: 19 path: 2 path: 5 path: 6 span: 968 span: 11 span: 21 } location: { path: 4 path: 19 path: 2 path: 5 path: 1 span: 968 span: 22 span: 33 } location: { path: 4 path: 19 path: 2 path: 5 path: 3 span: 968 span: 36 span: 37 } location: { path: 4 path: 19 path: 2 path: 5 path: 8 span: 968 span: 38 span: 974 span: 3 } location: { path: 4 path: 19 path: 2 path: 5 path: 8 path: 17 span: 969 span: 4 span: 33 } location: { path: 4 path: 19 path: 2 path: 5 path: 8 path: 19 path: 0 span: 970 span: 4 span: 33 } location: { path: 4 path: 19 path: 2 path: 5 path: 8 path: 19 path: 1 span: 971 span: 4 span: 30 } location: { path: 4 path: 19 path: 2 path: 5 path: 8 path: 19 path: 2 span: 972 span: 4 span: 30 } location: { path: 4 path: 19 path: 2 path: 5 path: 8 path: 20 path: 0 span: 973 span: 4 span: 58 } location: { path: 4 path: 19 path: 2 path: 6 span: 976 span: 2 span: 73 } location: { path: 4 path: 19 path: 2 path: 6 path: 4 span: 976 span: 2 span: 10 } location: { path: 4 path: 19 path: 2 path: 6 path: 6 span: 976 span: 11 span: 21 } location: { path: 4 path: 19 path: 2 path: 6 path: 1 span: 976 span: 22 span: 34 } location: { path: 4 path: 19 path: 2 path: 6 path: 3 span: 976 span: 37 span: 40 } location: { path: 4 path: 19 path: 2 path: 6 path: 8 span: 976 span: 41 span: 72 } location: { path: 4 path: 19 path: 2 path: 6 path: 8 path: 19 path: 0 span: 976 span: 42 span: 71 } location: { path: 4 path: 19 path: 5 span: 978 span: 2 span: 18 trailing_comments: " for Protobuf C++\n" } location: { path: 4 path: 19 path: 5 path: 0 span: 978 span: 13 span: 17 } location: { path: 4 path: 19 path: 5 path: 0 path: 1 span: 978 span: 13 span: 17 } location: { path: 4 path: 19 path: 5 path: 0 path: 2 span: 978 span: 13 span: 17 } location: { path: 4 path: 19 path: 5 span: 979 span: 2 span: 18 trailing_comments: " for Protobuf Java\n" } location: { path: 4 path: 19 path: 5 path: 1 span: 979 span: 13 span: 17 } location: { path: 4 path: 19 path: 5 path: 1 path: 1 span: 979 span: 13 span: 17 } location: { path: 4 path: 19 path: 5 path: 1 path: 2 span: 979 span: 13 span: 17 } location: { path: 4 path: 19 path: 5 span: 981 span: 2 span: 26 trailing_comments: " For internal testing\n" } location: { path: 4 path: 19 path: 5 path: 2 span: 981 span: 13 span: 25 } location: { path: 4 path: 19 path: 5 path: 2 path: 1 span: 981 span: 13 span: 17 } location: { path: 4 path: 19 path: 5 path: 2 path: 2 span: 981 span: 21 span: 25 } location: { path: 4 path: 20 span: 989 span: 0 span: 1118 span: 1 leading_comments: " Encapsulates information about the original source file from which a\n FileDescriptorProto was generated.\n" leading_detached_comments: " ===================================================================\n Optional source code info\n" } location: { path: 4 path: 20 path: 1 span: 989 span: 8 span: 22 } location: { path: 4 path: 20 path: 2 path: 0 span: 1033 span: 2 span: 33 leading_comments: " A Location identifies a piece of source code in a .proto file which\n corresponds to a particular definition.  This information is intended\n to be useful to IDEs, code indexers, documentation generators, and similar\n tools.\n\n For example, say we have a file like:\n   message Foo {\n     optional string foo = 1;\n   }\n Let's look at just the field definition:\n   optional string foo = 1;\n   ^       ^^     ^^  ^  ^^^\n   a       bc     de  f  ghi\n We have the following locations:\n   span   path               represents\n   [a,i)  [ 4, 0, 2, 0 ]     The whole field definition.\n   [a,b)  [ 4, 0, 2, 0, 4 ]  The label (optional).\n   [c,d)  [ 4, 0, 2, 0, 5 ]  The type (string).\n   [e,f)  [ 4, 0, 2, 0, 1 ]  The name (foo).\n   [g,h)  [ 4, 0, 2, 0, 3 ]  The number (1).\n\n Notes:\n - A location may refer to a repeated field itself (i.e. not to any\n   particular index within it).  This is used whenever a set of elements are\n   logically enclosed in a single code segment.  For example, an entire\n   extend block (possibly containing multiple extension definitions) will\n   have an outer location whose path refers to the \"extensions\" repeated\n   field without an index.\n - Multiple locations may have the same path.  This happens when a single\n   logical declaration is spread out across multiple places.  The most\n   obvious example is the \"extend\" block again -- there may be multiple\n   extend blocks in the same scope, each of which will have the same path.\n - A location's span is not always a subset of its parent's span.  For\n   example, the \"extendee\" of an extension declaration appears at the\n   beginning of the \"extend\" block and is shared by all extensions within\n   the block.\n - Just because a location's span is a subset of some other location's span\n   does not mean that it is a descendant.  For example, a \"group\" defines\n   both a type and a field in a single declaration.  Thus, the locations\n   corresponding to the type and field and their components will overlap.\n - Code which tries to interpret locations should probably be designed to\n   ignore those that it doesn't understand, as more types of locations could\n   be recorded in the future.\n" } location: { path: 4 path: 20 path: 2 path: 0 path: 4 span: 1033 span: 2 span: 10 } location: { path: 4 path: 20 path: 2 path: 0 path: 6 span: 1033 span: 11 span: 19 } location: { path: 4 path: 20 path: 2 path: 0 path: 1 span: 1033 span: 20 span: 28 } location: { path: 4 path: 20 path: 2 path: 0 path: 3 span: 1033 span: 31 span: 32 } location: { path: 4 path: 20 path: 3 path: 0 span: 1034 span: 2 span: 1117 span: 3 } location: { path: 4 path: 20 path: 3 path: 0 path: 1 span: 1034 span: 10 span: 18 } location: { path: 4 path: 20 path: 3 path: 0 path: 2 path: 0 span: 1058 span: 4 span: 44 leading_comments: " Identifies which part of the FileDescriptorProto was defined at this\n location.\n\n Each element is a field number or an index.  They form a path from\n the root FileDescriptorProto to the place where the definition occurs.\n For example, this path:\n   [ 4, 3, 2, 7, 1 ]\n refers to:\n   file.message_type(3)  // 4, 3\n       .field(7)         // 2, 7\n       .name()           // 1\n This is because FileDescriptorProto.message_type has field number 4:\n   repeated DescriptorProto message_type = 4;\n and DescriptorProto.field has field number 2:\n   repeated FieldDescriptorProto field = 2;\n and FieldDescriptorProto.name has field number 1:\n   optional string name = 1;\n\n Thus, the above path gives the location of a field name.  If we removed\n the last element:\n   [ 4, 3, 2, 7 ]\n this path refers to the whole field declaration (from the beginning\n of the label to the terminating semicolon).\n" } location: { path: 4 path: 20 path: 3 path: 0 path: 2 path: 0 path: 4 span: 1058 span: 4 span: 12 } location: { path: 4 path: 20 path: 3 path: 0 path: 2 path: 0 path: 5 span: 1058 span: 13 span: 18 } location: { path: 4 path: 20 path: 3 path: 0 path: 2 path: 0 path: 1 span: 1058 span: 19 span: 23 } location: { path: 4 path: 20 path: 3 path: 0 path: 2 path: 0 path: 3 span: 1058 span: 26 span: 27 } location: { path: 4 path: 20 path: 3 path: 0 path: 2 path: 0 path: 8 span: 1058 span: 28 span: 43 } location: { path: 4 path: 20 path: 3 path: 0 path: 2 path: 0 path: 8 path: 2 span: 1058 span: 29 span: 42 } location: { path: 4 path: 20 path: 3 path: 0 path: 2 path: 1 span: 1065 span: 4 span: 44 leading_comments: " Always has exactly three or four elements: start line, start column,\n end line (optional, otherwise assumed same as start line), end column.\n These are packed into a single field for efficiency.  Note that line\n and column numbers are zero-based -- typically you will want to add\n 1 to each before displaying to a user.\n" } location: { path: 4 path: 20 path: 3 path: 0 path: 2 path: 1 path: 4 span: 1065 span: 4 span: 12 } location: { path: 4 path: 20 path: 3 path: 0 path: 2 path: 1 path: 5 span: 1065 span: 13 span: 18 } location: { path: 4 path: 20 path: 3 path: 0 path: 2 path: 1 path: 1 span: 1065 span: 19 span: 23 } location: { path: 4 path: 20 path: 3 path: 0 path: 2 path: 1 path: 3 span: 1065 span: 26 span: 27 } location: { path: 4 path: 20 path: 3 path: 0 path: 2 path: 1 path: 8 span: 1065 span: 28 span: 43 } location: { path: 4 path: 20 path: 3 path: 0 path: 2 path: 1 path: 8 path: 2 span: 1065 span: 29 span: 42 } location: { path: 4 path: 20 path: 3 path: 0 path: 2 path: 2 span: 1114 span: 4 span: 41 leading_comments: " If this SourceCodeInfo represents a complete declaration, these are any\n comments appearing before and after the declaration which appear to be\n attached to the declaration.\n\n A series of line comments appearing on consecutive lines, with no other\n tokens appearing on those lines, will be treated as a single comment.\n\n leading_detached_comments will keep paragraphs of comments that appear\n before (but not connected to) the current element. Each paragraph,\n separated by empty lines, will be one comment element in the repeated\n field.\n\n Only the comment content is provided; comment markers (e.g. //) are\n stripped out.  For block comments, leading whitespace and an asterisk\n will be stripped from the beginning of each line other than the first.\n Newlines are included in the output.\n\n Examples:\n\n   optional int32 foo = 1;  // Comment attached to foo.\n   // Comment attached to bar.\n   optional int32 bar = 2;\n\n   optional string baz = 3;\n   // Comment attached to baz.\n   // Another line attached to baz.\n\n   // Comment attached to moo.\n   //\n   // Another line attached to moo.\n   optional double moo = 4;\n\n   // Detached comment for corge. This is not leading or trailing comments\n   // to moo or corge because there are blank lines separating it from\n   // both.\n\n   // Detached comment for corge paragraph 2.\n\n   optional string corge = 5;\n   /* Block comment attached\n    * to corge.  Leading asterisks\n    * will be removed. */\n   /* Block comment attached to\n    * grault. */\n   optional int32 grault = 6;\n\n   // ignored detached comments.\n" } location: { path: 4 path: 20 path: 3 path: 0 path: 2 path: 2 path: 4 span: 1114 span: 4 span: 12 } location: { path: 4 path: 20 path: 3 path: 0 path: 2 path: 2 path: 5 span: 1114 span: 13 span: 19 } location: { path: 4 path: 20 path: 3 path: 0 path: 2 path: 2 path: 1 span: 1114 span: 20 span: 36 } location: { path: 4 path: 20 path: 3 path: 0 path: 2 path: 2 path: 3 span: 1114 span: 39 span: 40 } location: { path: 4 path: 20 path: 3 path: 0 path: 2 path: 3 span: 1115 span: 4 span: 42 } location: { path: 4 path: 20 path: 3 path: 0 path: 2 path: 3 path: 4 span: 1115 span: 4 span: 12 } location: { path: 4 path: 20 path: 3 path: 0 path: 2 path: 3 path: 5 span: 1115 span: 13 span: 19 } location: { path: 4 path: 20 path: 3 path: 0 path: 2 path: 3 path: 1 span: 1115 span: 20 span: 37 } location: { path: 4 path: 20 path: 3 path: 0 path: 2 path: 3 path: 3 span: 1115 span: 40 span: 41 } location: { path: 4 path: 20 path: 3 path: 0 path: 2 path: 4 span: 1116 span: 4 span: 50 } location: { path: 4 path: 20 path: 3 path: 0 path: 2 path: 4 path: 4 span: 1116 span: 4 span: 12 } location: { path: 4 path: 20 path: 3 path: 0 path: 2 path: 4 path: 5 span: 1116 span: 13 span: 19 } location: { path: 4 path: 20 path: 3 path: 0 path: 2 path: 4 path: 1 span: 1116 span: 20 span: 45 } location: { path: 4 path: 20 path: 3 path: 0 path: 2 path: 4 path: 3 span: 1116 span: 48 span: 49 } location: { path: 4 path: 21 span: 1123 span: 0 span: 1156 span: 1 leading_comments: " Describes the relationship between generated code and its original source\n file. A GeneratedCodeInfo message is associated with only one generated\n source file, but may contain references to different source .proto files.\n" } location: { path: 4 path: 21 path: 1 span: 1123 span: 8 span: 25 } location: { path: 4 path: 21 path: 2 path: 0 span: 1126 span: 2 span: 37 leading_comments: " An Annotation connects some span of text in generated code to an element\n of its generating .proto file.\n" } location: { path: 4 path: 21 path: 2 path: 0 path: 4 span: 1126 span: 2 span: 10 } location: { path: 4 path: 21 path: 2 path: 0 path: 6 span: 1126 span: 11 span: 21 } location: { path: 4 path: 21 path: 2 path: 0 path: 1 span: 1126 span: 22 span: 32 } location: { path: 4 path: 21 path: 2 path: 0 path: 3 span: 1126 span: 35 span: 36 } location: { path: 4 path: 21 path: 3 path: 0 span: 1127 span: 2 span: 1155 span: 3 } location: { path: 4 path: 21 path: 3 path: 0 path: 1 span: 1127 span: 10 span: 20 } location: { path: 4 path: 21 path: 3 path: 0 path: 2 path: 0 span: 1130 span: 4 span: 44 leading_comments: " Identifies the element in the original source .proto file. This field\n is formatted the same as SourceCodeInfo.Location.path.\n" } location: { path: 4 path: 21 path: 3 path: 0 path: 2 path: 0 path: 4 span: 1130 span: 4 span: 12 } location: { path: 4 path: 21 path: 3 path: 0 path: 2 path: 0 path: 5 span: 1130 span: 13 span: 18 } location: { path: 4 path: 21 path: 3 path: 0 path: 2 path: 0 path: 1 span: 1130 span: 19 span: 23 } location: { path: 4 path: 21 path: 3 path: 0 path: 2 path: 0 path: 3 span: 1130 span: 26 span: 27 } location: { path: 4 path: 21 path: 3 path: 0 path: 2 path: 0 path: 8 span: 1130 span: 28 span: 43 } location: { path: 4 path: 21 path: 3 path: 0 path: 2 path: 0 path: 8 path: 2 span: 1130 span: 29 span: 42 } location: { path: 4 path: 21 path: 3 path: 0 path: 2 path: 1 span: 1133 span: 4 span: 36 leading_comments: " Identifies the filesystem path to the original source .proto.\n" } location: { path: 4 path: 21 path: 3 path: 0 path: 2 path: 1 path: 4 span: 1133 span: 4 span: 12 } location: { path: 4 path: 21 path: 3 path: 0 path: 2 path: 1 path: 5 span: 1133 span: 13 span: 19 } location: { path: 4 path: 21 path: 3 path: 0 path: 2 path: 1 path: 1 span: 1133 span: 20 span: 31 } location: { path: 4 path: 21 path: 3 path: 0 path: 2 path: 1 path: 3 span: 1133 span: 34 span: 35 } location: { path: 4 path: 21 path: 3 path: 0 path: 2 path: 2 span: 1137 span: 4 span: 29 leading_comments: " Identifies the starting offset in bytes in the generated code\n that relates to the identified object.\n" } location: { path: 4 path: 21 path: 3 path: 0 path: 2 path: 2 path: 4 span: 1137 span: 4 span: 12 } location: { path: 4 path: 21 path: 3 path: 0 path: 2 path: 2 path: 5 span: 1137 span: 13 span: 18 } location: { path: 4 path: 21 path: 3 path: 0 path: 2 path: 2 path: 1 span: 1137 span: 19 span: 24 } location: { path: 4 path: 21 path: 3 path: 0 path: 2 path: 2 path: 3 span: 1137 span: 27 span: 28 } location: { path: 4 path: 21 path: 3 path: 0 path: 2 path: 3 span: 1142 span: 4 span: 27 leading_comments: " Identifies the ending offset in bytes in the generated code that\n relates to the identified object. The end offset should be one past\n the last relevant byte (so the length of the text = end - begin).\n" } location: { path: 4 path: 21 path: 3 path: 0 path: 2 path: 3 path: 4 span: 1142 span: 4 span: 12 } location: { path: 4 path: 21 path: 3 path: 0 path: 2 path: 3 path: 5 span: 1142 span: 13 span: 18 } location: { path: 4 path: 21 path: 3 path: 0 path: 2 path: 3 path: 1 span: 1142 span: 19 span: 22 } location: { path: 4 path: 21 path: 3 path: 0 path: 2 path: 3 path: 3 span: 1142 span: 25 span: 26 } location: { path: 4 path: 21 path: 3 path: 0 path: 4 path: 0 span: 1146 span: 4 span: 1153 span: 5 leading_comments: " Represents the identified object's effect on the element in the original\n .proto file.\n" } location: { path: 4 path: 21 path: 3 path: 0 path: 4 path: 0 path: 1 span: 1146 span: 9 span: 17 } location: { path: 4 path: 21 path: 3 path: 0 path: 4 path: 0 path: 2 path: 0 span: 1148 span: 6 span: 15 leading_comments: " There is no effect or the effect is indescribable.\n" } location: { path: 4 path: 21 path: 3 path: 0 path: 4 path: 0 path: 2 path: 0 path: 1 span: 1148 span: 6 span: 10 } location: { path: 4 path: 21 path: 3 path: 0 path: 4 path: 0 path: 2 path: 0 path: 2 span: 1148 span: 13 span: 14 } location: { path: 4 path: 21 path: 3 path: 0 path: 4 path: 0 path: 2 path: 1 span: 1150 span: 6 span: 14 leading_comments: " The element is set or otherwise mutated.\n" } location: { path: 4 path: 21 path: 3 path: 0 path: 4 path: 0 path: 2 path: 1 path: 1 span: 1150 span: 6 span: 9 } location: { path: 4 path: 21 path: 3 path: 0 path: 4 path: 0 path: 2 path: 1 path: 2 span: 1150 span: 12 span: 13 } location: { path: 4 path: 21 path: 3 path: 0 path: 4 path: 0 path: 2 path: 2 span: 1152 span: 6 span: 16 leading_comments: " An alias to the element is returned.\n" } location: { path: 4 path: 21 path: 3 path: 0 path: 4 path: 0 path: 2 path: 2 path: 1 span: 1152 span: 6 span: 11 } location: { path: 4 path: 21 path: 3 path: 0 path: 4 path: 0 path: 2 path: 2 path: 2 span: 1152 span: 14 span: 15 } location: { path: 4 path: 21 path: 3 path: 0 path: 2 path: 4 span: 1154 span: 4 span: 35 } location: { path: 4 path: 21 path: 3 path: 0 path: 2 path: 4 path: 4 span: 1154 span: 4 span: 12 } location: { path: 4 path: 21 path: 3 path: 0 path: 2 path: 4 path: 6 span: 1154 span: 13 span: 21 } location: { path: 4 path: 21 path: 3 path: 0 path: 2 path: 4 path: 1 span: 1154 span: 22 span: 30 } location: { path: 4 path: 21 path: 3 path: 0 path: 2 path: 4 path: 3 span: 1154 span: 33 span: 34 } } }
proto_file: { name: "google/api/annotations.proto" package: "google.api" dependency: "google/api/http.proto" dependency: "google/protobuf/descriptor.proto" extension: { name: "http" number: 72295728 label: LABEL_OPTIONAL type: TYPE_MESSAGE type_name: ".google.api.HttpRule" extendee: ".google.protobuf.MethodOptions" json_name: "http" } options: { java_package: "com.google.api" java_outer_classname: "AnnotationsProto" java_multiple_files: true go_package: "google.golang.org/genproto/googleapis/api/annotations;annotations" objc_class_prefix: "GAPI" } source_code_info: { location: { span: 14 span: 0 span: 30 span: 1 } location: { path: 12 span: 14 span: 0 span: 18 leading_detached_comments: " Copyright 2015 Google LLC\n\n Licensed under the Apache License, Version 2.0 (the \"License\");\n you may not use this file except in compliance with the License.\n You may obtain a copy of the License at\n\n     http://www.apache.org/licenses/LICENSE-2.0\n\n Unless required by applicable law or agreed to in writing, software\n distributed under the License is distributed on an \"AS IS\" BASIS,\n WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n See the License for the specific language governing permissions and\n limitations under the License.\n" } location: { path: 2 span: 16 span: 0 span: 19 } location: { path: 3 path: 0 span: 18 span: 0 span: 31 } location: { path: 3 path: 1 span: 19 span: 0 span: 42 } location: { path: 8 span: 21 span: 0 span: 88 } location: { path: 8 path: 11 span: 21 span: 0 span: 88 } location: { path: 8 span: 22 span: 0 span: 34 } location: { path: 8 path: 10 span: 22 span: 0 span: 34 } location: { path: 8 span: 23 span: 0 span: 49 } location: { path: 8 path: 8 span: 23 span: 0 span: 49 } location: { path: 8 span: 24 span: 0 span: 39 } location: { path: 8 path: 1 span: 24 span: 0 span: 39 } location: { path: 8 span: 25 span: 0 span: 34 } location: { path: 8 path: 36 span: 25 span: 0 span: 34 } location: { path: 7 span: 27 span: 0 span: 30 span: 1 } location: { path: 7 path: 0 span: 29 span: 2 span: 27 leading_comments: " See `HttpRule`.\n" } location: { path: 7 path: 0 path: 2 span: 27 span: 7 span: 36 } location: { path: 7 path: 0 path: 6 span: 29 span: 2 span: 10 } location: { path: 7 path: 0 path: 1 span: 29 span: 11 span: 15 } location: { path: 7 path: 0 path: 3 span: 29 span: 18 span: 26 } } syntax: "proto3" }
proto_file: { name: "your/service/v1/your_service.proto" package: "your.service.v1" dependency: "google/api/annotations.proto" message_type: { name: "StringMessage" field: { name: "value" number: 1 label: LABEL_OPTIONAL type: TYPE_STRING json_name: "value" } } service: { name: "YourService" method: { name: "Echo" input_type: ".your.service.v1.StringMessage" output_type: ".your.service.v1.StringMessage" options: { [google.api.http]: { post: "/api/echo" } } } } options: { go_package: "github.com/yourorg/yourprotos/gen/go/your/service/v1" } source_code_info: { location: { span: 0 span: 0 span: 15 span: 1 } location: { path: 12 span: 0 span: 0 span: 18 } location: { path: 2 span: 1 span: 0 span: 24 } location: { path: 3 path: 0 span: 3 span: 0 span: 38 } location: { path: 8 span: 5 span: 0 span: 75 } location: { path: 8 path: 11 span: 5 span: 0 span: 75 } location: { path: 4 path: 0 span: 7 span: 0 span: 9 span: 1 } location: { path: 4 path: 0 path: 1 span: 7 span: 8 span: 21 } location: { path: 4 path: 0 path: 2 path: 0 span: 8 span: 2 span: 19 } location: { path: 4 path: 0 path: 2 path: 0 path: 5 span: 8 span: 2 span: 8 } location: { path: 4 path: 0 path: 2 path: 0 path: 1 span: 8 span: 9 span: 14 } location: { path: 4 path: 0 path: 2 path: 0 path: 3 span: 8 span: 17 span: 18 } location: { path: 6 path: 0 span: 11 span: 0 span: 15 span: 1 } location: { path: 6 path: 0 path: 1 span: 11 span: 8 span: 19 } location: { path: 6 path: 0 path: 2 path: 0 span: 12 span: 2 span: 14 span: 3 } location: { path: 6 path: 0 path: 2 path: 0 path: 1 span: 12 span: 6 span: 10 } location: { path: 6 path: 0 path: 2 path: 0 path: 2 span: 12 span: 11 span: 24 } location: { path: 6 path: 0 path: 2 path: 0 path: 3 span: 12 span: 35 span: 48 } location: { path: 6 path: 0 path: 2 path: 0 path: 4 span: 13 span: 4 span: 51 } location: { path: 6 path: 0 path: 2 path: 0 path: 4 path: 72295728 span: 13 span: 4 span: 51 } } syntax: "proto3" }
compiler_version: { major: 4 minor: 24 patch: 2 suffix: "" }
